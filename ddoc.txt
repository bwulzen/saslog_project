1                                                          The SAS System                            12:50 Monday, November 28, 2016

1          ;*';*";*/;quit;run;
2          OPTIONS PAGENO=MIN;
3          %LET _CLIENTTASKLABEL='inc_ddoc';
4          %LET _CLIENTPROJECTPATH='T:\IMAGUC and Access\DDOC\Method\ddoc.egp';
5          %LET _CLIENTPROJECTNAME='ddoc.egp';
6          %LET _SASPROGRAMFILE=;
7          
8          ODS _ALL_ CLOSE;
9          OPTIONS DEV=ACTIVEX;
10         GOPTIONS XPIXELS=0 YPIXELS=0;
11         FILENAME EGSR TEMP;
12         ODS tagsets.sasreport13(ID=EGSR) FILE=EGSR
13             STYLE=HtmlBlue
14             STYLESHEET=(URL="file:///C:/Program%20Files/SASHome/SASEnterpriseGuide/6.1/Styles/HtmlBlue.css")
15             NOGTITLE
16             NOGFOOTNOTE
17             GPATH=&sasworklocation
18             ENCODING=UTF8
19             options(rolap="on")
20         ;
NOTE: Writing TAGSETS.SASREPORT13(EGSR) Body file: EGSR
21         
22         GOPTIONS ACCESSIBLE;
23         * inc_ddoc;
24         %include "T:\IMAGUC and Access\DDOC\Method\ddoc_fac_lvl_dev_v18.4.sas";
NOTE: Libref LOCALLIB was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Supporting Data\MAM Data
NOTE: Remote signon to HOST commencing (SAS Release 9.04.01M1P120413).
NOTE: Script file 'kptcptso.scr' entered.
NOTE: Logged on to TSO.... Starting remote SAS now.
NOTE: SAS/CONNECT conversation established.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M2) 
      Licensed to IBM/KAISER CEC2N1-MSYS, Site 70004062.
NOTE: This session is executing on the z/OS   V01R13M00 platform.

NOTE: Running on IBM Model 2964 Serial Number 03D657.


NOTE: Updated analytical products:
      
      SAS/STAT 13.2
      SAS/ETS 13.2
      SAS/OR 13.2

NOTE: Additional host information:

IBM 2964-708, MSYS, FMID HBB7780, CPU: 7, GP: 6, zAAP: 0, zIIP: 1

                            Welcome to SAS                              
                                                                        
                Kaiser Permanente is running SAS V9R4M2                 


NOTE: SAS system options specified are:
      DMR COMAMID=TCP TCPIPPRF=SSD.TCPIP.VERCUR MSGLEVEL=I NOTERMINAL NO$SYNTAXCHECK SASHELP=SASHELP

NOTE: The initialization phase used 0.03 CPU seconds.

NOTE: Remote signon to HOST complete.
2                                                          The SAS System                            12:51 Monday, November 28, 2016

NOTE: Remote submit to HOST commencing.
1    *- Set Mainlib Parameter to denote location of RAD macros -*;
2    
3     %let mainlib=MRG.RAD.ACCESS;
4     %inc 'mrg.mbk.macros.sascode(commonop)';
12  +        mautosource
13  +        sasautos=("&mainlib..sascode"
14  +                  'mrg.mbk.macros.sascode'
15  +                  'mrg.access.measure4.sascode'
16  +                  'mrg.apc.inc.programs');
17  +
18  +
NOTE: %INCLUDE (level 1) ending.
19   
20    *- Set Mainlib Parameter to denote location of DDOC Library - test version or not -*;
21    %let mainlib=MRG.RAD.MOD.ACCESS.DDOCDEV;
22    *%let mainlib=MRG.RAD.MOD.ACCESS.TEST;
23    options symbolgen errors=0 nocenter nomprint errorabend;
24    %global dodata;
25   
26   
27    *- Set parameter extract data or not 1=yes,0=no -*;
28   
29    %let dodata=1;
30   
31    %let mods='CT','MRI','ULS','MAM';
32   
33    *- CHANGE MADE BY BW 10-27-2016 -*;
3                                                          The SAS System                            12:51 Monday, November 28, 2016

34    *- New codes were added for MRIs -*;
35    %let MRI_submods='MRB','MRC','MRD','MRF','MRK','MRN','MRS' ;
36   
37   
38    %let SUNDAY=1;
39    %let WEEKEND=1,7;
40   
41    *- Set Buffer for Expected demand as a constant to be -*;
42    *- multiplier.  I.e 10%=1.1                           -*;
43   
44    %let ed_buffer=1.1;
45   
46   
47    %let inpat_adt_pat_class = 1201,1204,1206,12110,12112,12113,12115;
48   
49   
50    %let mclist = 'CVL','DSA','EBA','FRS','GSA','NSA','NVL','RWC',
51                   'SCL','SFO','SJO','SRF','SRO','SSC','SSF';
52    %let mclist2= CVL DSA EBA FRS GSA NSA NVL RWC SCL SFO SJO SRF SRO SSC SSF;
53   
54    %let faclist= 'DRV','FRE','FRS','MAN','MOD','OAK','PET','PLS','RCH',
55                  'ROS','RWC','SAC','SCH','SCL','SFO','SLN','SRF','SRO','SSC','SSF',
56                  'STK','STR','VAC','VAL','WCR','ALM','ANT','CLO','CMB','DAV',
57                  'DLC','ELG','FLD','FOL','GIL','LNC','LVM','MIL','MTN','MTZ',
58                  'NAP','NOV','PIN','PMB','RCO','RPK','SHA','SRD','TRA','UNC';
59   
60    %let faclst2=  DRV FRE FRS MAN MOD OAK PET PLS RCH
61                   ROS RWC SAC SCH SCL SFO SRF SLN SRO
62                   SSC SSF STK STR VAC VAL WCR ALM ANT
63                   CLO CMB DAV DLC ELG FLD FOL GIL LNC
64                   LVM MIL MTN MTZ NAP NOV PIN PMB RCO
65                   RPK SHA SRD TRA UNC;
66   
67   
68   
69    %let rundt = %sysfunc(today());
70    *%let rundt = %eval(%sysfunc(today())-2);
71    *let rundt = %sysfunc(MDY(7,30,2012));
72    * strtdt is the monday of the current week (Sun-Sat) ;
73   
74    *- Prospective Start and End Dates -*;
75    *- Monday of Current week and Sunday three weeks later -*;
76   
77    %let strtdt = %eval(%lastxday(&SUNDAY,&rundt)+1);
SYMBOLGEN:  Macro variable SUNDAY resolves to 1
SYMBOLGEN:  Macro variable RUNDT resolves to 20786
SYMBOLGEN:  Macro variable REFDT resolves to 20786
SYMBOLGEN:  Macro variable X resolves to 1
SYMBOLGEN:  Macro variable REFDT resolves to 20786
SYMBOLGEN:  Macro variable WKDY resolves to 1
78    %let enddt = %sysfunc(intnx(week,&strtdt,8));   *<---modified to create 8 week prospective section to report;
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
79   
80    *- Retrospective Start and End Dates -*;
81    *- Monday of two weeks previous  and Sunday day before start date -*;
82   
83    %let strtdtr = %eval(&strtdt-14);
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
4                                                          The SAS System                            12:51 Monday, November 28, 2016

84    %let enddtr = %eval(&strtdt-1);
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
85   
86   *- Three month Period before Report Monday - Used to estimate demand -*;
87   
88   
89    *%let strt3mr=%sysfunc(intnx(month,%sysfunc(intnx(month,&enddtr,0)),-3));
90    *%let end3mr = %sysfunc(intnx(month,&strt3mr,2,END));
91   
92    %let strt3mr=%sysfunc(intnx(day,&enddtr,-90));
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
93    %let end3mr = &enddtr;
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
94   
95   *- Six month Period before Report Monday - Used to capture all pending data-*;
96   
97   
98    *%let strt3mr=%sysfunc(intnx(month,%sysfunc(intnx(month,&enddtr,0)),-3));
99    *%let end3mr = %sysfunc(intnx(month,&strt3mr,2,END));
100  
101   %let strt6mr=%sysfunc(intnx(day,&enddtr,-180));
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
102   %let end6mr = &enddtr;
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
103  
104  
105  
106  *-  Twelve month Period before Report Monday - Used to estimate demand -*;
107  *- Not Currently Used.                                                 -*;
108  
109  %let strtyrr=%sysfunc(intnx(month,%sysfunc(intnx(month,&enddtr,0)),-12));
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
110  %let endyrr = %sysfunc(intnx(month,&strtyrr,11,END));
SYMBOLGEN:  Macro variable STRTYRR resolves to 20393
111  
112  
113   *- Create DB2 versions of date constants format: mm/dd/yyyy -*;
114  
115   %oneDB2Dt(&strtdt,db2start);
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
SYMBOLGEN:  Macro variable OUTDT resolves to db2start
SYMBOLGEN:  Macro variable OUTDT resolves to db2start
SYMBOLGEN:  Macro variable INDT resolves to 20786

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2start
Output db2 date: db2start
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
SYMBOLGEN:  Macro variable OUTDT resolves to db2end
116   %oneDB2Dt(&enddt,db2end);
SYMBOLGEN:  Macro variable OUTDT resolves to db2end
SYMBOLGEN:  Macro variable INDT resolves to 20841

NOTE: The DATA statement used 0.00 CPU seconds.


5                                                          The SAS System                            12:51 Monday, November 28, 2016

SYMBOLGEN:  Macro variable OUTDT resolves to db2end
Output db2 date: db2end
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
SYMBOLGEN:  Macro variable OUTDT resolves to db2startr
117  
118   %oneDB2Dt(&strtdtr,db2startr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2startr
SYMBOLGEN:  Macro variable INDT resolves to 20772

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2startr
Output db2 date: db2startr
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
SYMBOLGEN:  Macro variable OUTDT resolves to db2endr
119   %oneDB2Dt(&enddtr,db2endr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2endr
SYMBOLGEN:  Macro variable INDT resolves to 20785

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2endr
Output db2 date: db2endr
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
SYMBOLGEN:  Macro variable OUTDT resolves to db2strt3mr
120  
121   %oneDB2Dt(&strt3mr,db2strt3mr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2strt3mr
SYMBOLGEN:  Macro variable INDT resolves to 20695

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2strt3mr
Output db2 date: db2strt3mr
SYMBOLGEN:  Macro variable END3MR resolves to 20785
SYMBOLGEN:  Macro variable OUTDT resolves to db2end3mr
122   %oneDB2Dt(&end3mr,db2end3mr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2end3mr
SYMBOLGEN:  Macro variable INDT resolves to 20785

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2end3mr
Output db2 date: db2end3mr
SYMBOLGEN:  Macro variable STRT6MR resolves to 20605
SYMBOLGEN:  Macro variable OUTDT resolves to db2strt6mr
123  
124  %oneDB2Dt(&strt6mr,db2strt6mr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2strt6mr
SYMBOLGEN:  Macro variable INDT resolves to 20605

NOTE: The DATA statement used 0.00 CPU seconds.


6                                                          The SAS System                            12:51 Monday, November 28, 2016

SYMBOLGEN:  Macro variable OUTDT resolves to db2strt6mr
Output db2 date: db2strt6mr
SYMBOLGEN:  Macro variable END6MR resolves to 20785
SYMBOLGEN:  Macro variable OUTDT resolves to db2end6mr
125   %oneDB2Dt(&end6mr,db2end6mr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2end6mr
SYMBOLGEN:  Macro variable INDT resolves to 20785

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2end6mr
Output db2 date: db2end6mr
SYMBOLGEN:  Macro variable STRTYRR resolves to 20393
SYMBOLGEN:  Macro variable OUTDT resolves to db2startyrr
126  
127  
128   %oneDB2Dt(&strtyrr,db2startyrr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2startyrr
SYMBOLGEN:  Macro variable INDT resolves to 20393

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2startyrr
Output db2 date: db2startyrr
SYMBOLGEN:  Macro variable ENDYRR resolves to 20758
SYMBOLGEN:  Macro variable OUTDT resolves to db2endyrr
129   %oneDB2Dt(&endyrr,db2endyrr);
SYMBOLGEN:  Macro variable OUTDT resolves to db2endyrr
SYMBOLGEN:  Macro variable INDT resolves to 20758

NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDT resolves to db2endyrr
Output db2 date: db2endyrr
130  
131  
132  
133  data _null_;  * format 'yyyy-mm-dd-hh.mm.ss.999999' ;
134  
135      *- Teradata Dates -*;
136      call symput("terastrtr","'"||put(&strtdtr,yymmdd10.)||"'");
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
137      call symput("teraendr","'"||put(&enddtr,yymmdd10.)||"'");
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
138  
139      call symput("terastrt3mr","'"||put(&strt3mr,yymmdd10.)||"'");
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
140      call symput("teraend3mr","'"||put(&end3mr,yymmdd10.)||"'");
SYMBOLGEN:  Macro variable END3MR resolves to 20785
141  
142      call symput("terastrtyrr","'"||put(&strtyrr,yymmdd10.)||"'");
SYMBOLGEN:  Macro variable STRTYRR resolves to 20393
143      call symput("teraend","'"||put(&enddt,yymmdd10.)||"'");
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
144  
7                                                          The SAS System                            12:51 Monday, November 28, 2016

145  
146      call symput("db2begts3mr","'"||put(&strt3mr,yymmdd10.)||
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
147                              "-00.00.00.000000'");
148      call symput("db2endts3mr","'"||put(&end3mr,yymmdd10.)||
SYMBOLGEN:  Macro variable END3MR resolves to 20785
149                              "-00.00.00.000000'");
150  
151      call symput("db2begts6mr","'"||put(&strt6mr,yymmdd10.)||
SYMBOLGEN:  Macro variable STRT6MR resolves to 20605
152                              "-00.00.00.000000'");
153      call symput("db2endts6mr","'"||put(&end6mr,yymmdd10.)||
SYMBOLGEN:  Macro variable END6MR resolves to 20785
154                              "-00.00.00.000000'");
155  
156      call symput("db2begtsr","'"||put(&strtdtr,yymmdd10.)||
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
157                              "-00.00.00.000000'");
158      call symput("db2endtsr","'"||put(&enddtr,yymmdd10.)||
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
159                              "-23.59.59.999999'");
160   run;

NOTE: The DATA statement used 0.00 CPU seconds.


161   %put _user_;
GLOBAL DB2BEGTSR '2016-11-14-00.00.00.000000'
GLOBAL DB2BEGTS3MR '2016-08-29-00.00.00.000000'
GLOBAL DB2BEGTS6MR '2016-05-31-00.00.00.000000'
GLOBAL DB2END '01/22/2017'
GLOBAL DB2ENDR '11/27/2016'
GLOBAL DB2ENDTSR '2016-11-27-23.59.59.999999'
GLOBAL DB2ENDTS3MR '2016-11-27-00.00.00.000000'
GLOBAL DB2ENDTS6MR '2016-11-27-00.00.00.000000'
GLOBAL DB2ENDYRR '10/31/2016'
GLOBAL DB2END3MR '11/27/2016'
GLOBAL DB2END6MR '11/27/2016'
GLOBAL DB2START '11/28/2016'
GLOBAL DB2STARTR '11/14/2016'
GLOBAL DB2STARTYRR '11/01/2015'
GLOBAL DB2STRT3MR '08/29/2016'
GLOBAL DB2STRT6MR '05/31/2016'
GLOBAL DODATA 1
GLOBAL ED_BUFFER 1.1
GLOBAL ENDDT 20841
GLOBAL ENDDTR 20785
GLOBAL ENDYRR 20758
GLOBAL END3MR 20785
GLOBAL END6MR 20785
GLOBAL FACLIST 'DRV','FRE','FRS','MAN','MOD','OAK','PET','PLS','RCH',                
'ROS','RWC','SAC','SCH','SCL','SFO','SLN','SRF','SRO','SSC','SSF',                
'STK','STR','VAC','VAL','WCR','ALM','ANT','CLO','CMB','DAV',                
'DLC','ELG','FLD','FOL','GIL','LNC','LVM','MIL','MTN','MTZ',                
'NAP','NOV','PIN','PMB','RCO','RPK','SHA','SRD','TRA','UNC'
GLOBAL FACLST2 DRV FRE FRS MAN MOD OAK PET PLS RCH                 ROS RWC SAC SCH SCL SFO SRF SLN SRO                 SSC SSF STK 
STR VAC VAL WCR ALM ANT                 CLO CMB DAV DLC ELG FLD FOL GIL LNC                 LVM MIL MTN MTZ NAP NOV PIN PMB RCO     
            RPK SHA SRD TRA UNC
8                                                          The SAS System                            12:51 Monday, November 28, 2016

GLOBAL INPAT_ADT_PAT_CLASS 1201,1204,1206,12110,12112,12113,12115
GLOBAL MAINLIB MRG.RAD.MOD.ACCESS.DDOCDEV
GLOBAL MCLIST 'CVL','DSA','EBA','FRS','GSA','NSA','NVL','RWC',                 'SCL','SFO','SJO','SRF','SRO','SSC','SSF'
GLOBAL MCLIST2 CVL DSA EBA FRS GSA NSA NVL RWC SCL SFO SJO SRF SRO SSC SSF
GLOBAL MODS 'CT','MRI','ULS','MAM'
GLOBAL MRI_SUBMODS 'MRB','MRC','MRD','MRF','MRK','MRN','MRS'
GLOBAL RUNDT 20786
GLOBAL STRTDT 20786
GLOBAL STRTDTR 20772
GLOBAL STRTYRR 20393
GLOBAL STRT3MR 20695
GLOBAL STRT6MR 20605
GLOBAL SUNDAY 1
GLOBAL SYSJCTID  
GLOBAL SYSJMRID  
GLOBAL SYSUID F917990
GLOBAL SYS99ERR 0000
GLOBAL SYS99INF 0000
GLOBAL SYS99MSG  
GLOBAL SYS99R15 0000
GLOBAL TERAEND '2017-01-22'
GLOBAL TERAENDR '2016-11-27'
GLOBAL TERAEND3MR '2016-11-27'
GLOBAL TERASTRTR '2016-11-14'
GLOBAL TERASTRTYRR '2015-11-01'
GLOBAL TERASTRT3MR '2016-08-29'
GLOBAL WEEKEND 1,7
162  
163  
164  
165  *----------------------------------------------------------------*;
166  * Allocate dataset : &mainlib..Dmmddyy.SASDATA
167  *----------------------------------------------------------------*;
168  
169  
170   data _null_;
171   call symput('DDate','WK'||put(&strtdt,MMDDYY6.));
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
172   run;

NOTE: The DATA statement used 0.00 CPU seconds.


173  
174  
175  
176   %allocate(mainlib=&mainlib..&DDate,ref=DDOC,perm=1,notag=0);
SYMBOLGEN:  Macro variable MAINLIB resolves to MRG.RAD.MOD.ACCESS.DDOCDEV
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable PRMCYL1 resolves to 300
SYMBOLGEN:  Macro variable PRMCYL2 resolves to 200
SYMBOLGEN:  Macro variable PDS resolves to 0
SYMBOLGEN:  Macro variable PERM resolves to 1
SYMBOLGEN:  Macro variable FLAT resolves to 0
SYMBOLGEN:  Macro variable PDS resolves to 0
SYMBOLGEN:  Macro variable NOTAG resolves to 0
SYMBOLGEN:  Macro variable MAINLIB resolves to MRG.RAD.MOD.ACCESS.DDOCDEV.WK112816
SYMBOLGEN:  Macro variable TAGNAME resolves to .SASDATA
9                                                          The SAS System                            12:51 Monday, November 28, 2016


SYMBOLGEN:  Macro variable LIBTYPE resolves to libname
SYMBOLGEN:  Macro variable REF resolves to DDOC
SYMBOLGEN:  Macro variable ENG resolves to 
SYMBOLGEN:  Macro variable MAINLIB resolves to MRG.RAD.MOD.ACCESS.DDOCDEV.WK112816
SYMBOLGEN:  Macro variable TAGNAME resolves to .SASDATA
SYMBOLGEN:  Macro variable SYSDEXST resolves to 0
SYMBOLGEN:  Macro variable PERM resolves to 1
SYMBOLGEN:  Macro variable SPACESTR resolves to SPACE=(CYL,(300,200))
SYMBOLGEN:  Macro variable DCBPARMS resolves to 
NOTE: Conditional disposition of DELETE will not be honored for library MRG.RAD.MOD.ACCESS.DDOCDEV.WK112816.SASDATA.
NOTE: Libref DDOC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: MRG.RAD.MOD.ACCESS.DDOCDEV.WK112816.SASDATA
177  
178  *----------------------------------------------------------------*;
179  * Read in the clinic-machine roster for each modality
180  *----------------------------------------------------------------*;
181  
182  
183   %machines(MACHINES);

NOTE: The infile 'MRG.RAD.ACCESS.MACHINES.TXT' is:
      Dsname=MRG.RAD.ACCESS.MACHINES.TXT,
      Unit=3390,Volume=PR5058,Disp=SHR,Blksize=27648,
      Lrecl=256,Recfm=VB,Creation=2004/11/30

NOTE: 581 records were read from the infile 'MRG.RAD.ACCESS.MACHINES.TXT'.
      The minimum record length was 34.
      The maximum record length was 40.
NOTE: The data set WORK.MACHINES1 has 580 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


DB2 NOTE:  The QUERYNO for the EXPLAIN is 11283275

NOTE: Libref FRSS was successfully assigned as follows: 
      Engine:        DB2 
      Physical Name: DSN2

NOTE: There were 326014 observations read from the data set FRSS.VFACILITY_RESOURCE.
NOTE: The data set WORK.RES_TEMP has 326014 observations and 3 variables.
NOTE: The DATA statement used 1.12 CPU seconds.



NOTE: Host sort was used.
NOTE: There were 326014 observations read from the data set WORK.RES_TEMP.
NOTE: The data set WORK.RES_TEMP has 326014 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.19 CPU seconds.



NOTE: There were 580 observations read from the data set WORK.MACHINES1.
NOTE: SAS sort was used.
NOTE: The data set WORK.MACHINES1 has 580 observations and 5 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.

10                                                         The SAS System                            12:51 Monday, November 28, 2016


SYMBOLGEN:  Macro variable OUTDS resolves to MACHINES
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'

NOTE: There were 326014 observations read from the data set WORK.RES_TEMP.
NOTE: There were 580 observations read from the data set WORK.MACHINES1.
NOTE: The data set WORK.MACHINES has 495 observations and 6 variables.
NOTE: The DATA statement used 0.09 CPU seconds.


184  
185  
186   proc sort data=MACHINES(where=(modality in (&mods))) out=machines ;
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'
187     by fac_id clinic machine;
188   run;

NOTE: There were 495 observations read from the data set WORK.MACHINES.
      WHERE modality in ('CT', 'MAM', 'MRI', 'ULS');
NOTE: SAS sort was used.
NOTE: The data set WORK.MACHINES has 495 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


189  
190  
191   proc sql noprint;
192     create table mach as
193     select distinct machine
194     from machines
195     where modality in (&mods) ;
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'
NOTE: Table WORK.MACH created, with 494 rows and 1 columns.

196  
197     select "'" || machine || "'"
198     into :machlist separated by ","
199     from mach;
200   quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


201  
202  
203  *----------------------------------------------------------------*;
204  * Read in the CPT4 CODES
205  *----------------------------------------------------------------*;
206   libname modality "MRG.THK.MRMSCPT4.SASDATA" disp=shr;
NOTE: Libref MODALITY was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: MRG.THK.MRMSCPT4.SASDATA
207  
208   proc sql noprint;
209     select "'" || CPT4 || "'"
210     into :cptlist separated by ","
211     from modality.CPT4MOD
212     where mod in (&mods) ;
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'
11                                                         The SAS System                            12:51 Monday, November 28, 2016

213  
214     create table modality as
215     select cpt4 as cpt_code
216          , mod as modality
217          , mrms_lbl
218     from modality.CPT4MOD
219     where mod in (&mods)
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'
220     order by 1, 2 ;
NOTE: Table WORK.MODALITY created, with 275 rows and 3 columns.

221   QUIT;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


NOTE: Data set MRG.THK.MRMSCPT4.SASDATA has been deallocated.
222  
223   libname modality clear;
NOTE: Libref MODALITY has been deassigned.
224  
225  *----------------------------------------------------------------*;
226  * Get dates * modality * facility
227  *----------------------------------------------------------------*;
228   data retro_dates
229        prosp_dates
230        retro_chart_dates;
231  
232  
233     format date mmddyy10.;
234     length modality fac_id $ 3;
235  
236     do modality = &mods ;
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'
237       do fac_id = &faclist ;
SYMBOLGEN:  Macro variable FACLIST resolves to 'DRV','FRE','FRS','MAN','MOD','OAK','PET','PLS','RCH',                
            'ROS','RWC','SAC','SCH','SCL','SFO','SLN','SRF','SRO','SSC','SSF',                
            'STK','STR','VAC','VAL','WCR','ALM','ANT','CLO','CMB','DAV',                
            'DLC','ELG','FLD','FOL','GIL','LNC','LVM','MIL','MTN','MTZ',                
            'NAP','NOV','PIN','PMB','RCO','RPK','SHA','SRD','TRA','UNC'
238         do date = &strt3mr to &enddt;
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
239            if &strtdtr le date le &enddtr then output retro_dates;
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
240            if &strtdt le date le &enddt then output prosp_dates;
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
241            if &strt3mr le date le &enddtr then output retro_chart_dates;
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
242  
243         end;
244       end;
245     end;
246   run;

NOTE: The data set WORK.RETRO_DATES has 2800 observations and 3 variables.
12                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The data set WORK.PROSP_DATES has 11200 observations and 3 variables.
NOTE: The data set WORK.RETRO_CHART_DATES has 18200 observations and 3 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


247  
248  
249  
250  
251   *- Now add MC_id to the data -*;
252  
253   %DOMCROLL(retro_dates,retro_dates2);
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to retro_dates
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 2800 observations read from the data set WORK.RETRO_DATES.
NOTE: The data set WORK.FIXSCH has 2800 observations and 3 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 2800 observations read from the data set WORK.FIXSCH.
NOTE: SAS sort was used.
NOTE: The data set WORK.MAIN has 2800 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to retro_dates2
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 2800 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.RETRO_DATES2 has 2800 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
254   %DOMCROLL(prosp_dates,prosp_dates2);
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to prosp_dates
SYMBOLGEN:  Macro variable FAC resolves to fac_id
13                                                         The SAS System                            12:51 Monday, November 28, 2016

SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 11200 observations read from the data set WORK.PROSP_DATES.
NOTE: The data set WORK.FIXSCH has 11200 observations and 3 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 11200 observations read from the data set WORK.FIXSCH.
NOTE: SAS sort was used.
NOTE: The data set WORK.MAIN has 11200 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to prosp_dates2
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 11200 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.PROSP_DATES2 has 11200 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
255   %DOMCROLL(retro_chart_dates,retro_chart_dates2);
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to retro_chart_dates
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 18200 observations read from the data set WORK.RETRO_CHART_DATES.
NOTE: The data set WORK.FIXSCH has 18200 observations and 3 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 18200 observations read from the data set WORK.FIXSCH.
NOTE: SAS sort was used.
NOTE: The data set WORK.MAIN has 18200 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

14                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to retro_chart_dates2
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 18200 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.RETRO_CHART_DATES2 has 18200 observations and 5 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


256  
257  
258   *- Now create date for the MC Facility Roll up -*;
259  
260   proc sql;
261     create table retro_dates_all_fac
262         as
263     select distinct modality, mc_id, date
264       from retro_dates2
265  
266       ;
NOTE: Table WORK.RETRO_DATES_ALL_FAC created, with 840 rows and 3 columns.

267   quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


268  
269   proc sql;
270     create table prosp_dates_all_fac
271         as
272     select distinct modality, mc_id, date
273       from prosp_dates2
274  
275       ;
NOTE: SAS threaded sort was used.
NOTE: Table WORK.PROSP_DATES_ALL_FAC created, with 3360 rows and 3 columns.

276   quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.


277  
278   proc sql;
279     create table retro_chart_dates_all_fac
280         as
281     select distinct modality, mc_id, date
282       from retro_chart_dates2
283  
284       ;
NOTE: SAS threaded sort was used.
15                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: Table WORK.RETRO_CHART_DATES_ALL_FAC created, with 5460 rows and 3 columns.

285   quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.


286  
287  
288  
289  data   retro_dates;
290    set retro_dates2
291        retro_dates_all_fac  (in=in_all_fac)
292        ;
293  
294    if in_all_fac then fac_id='ALL';
295  run;

NOTE: There were 2800 observations read from the data set WORK.RETRO_DATES2.
NOTE: There were 840 observations read from the data set WORK.RETRO_DATES_ALL_FAC.
NOTE: The data set WORK.RETRO_DATES has 3640 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


296  
297  data   prosp_dates;
298    set prosp_dates2
299        prosp_dates_all_fac  (in=in_all_fac)
300        ;
301  
302    if in_all_fac then fac_id='ALL';
303  run;

NOTE: There were 11200 observations read from the data set WORK.PROSP_DATES2.
NOTE: There were 3360 observations read from the data set WORK.PROSP_DATES_ALL_FAC.
NOTE: The data set WORK.PROSP_DATES has 14560 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


304  
305  data  retro_chart_dates;
306    set retro_chart_dates2
307        retro_chart_dates_all_fac  (in=in_all_fac)
308        ;
309  
310    if in_all_fac then fac_id='ALL';
311  run;

NOTE: There were 18200 observations read from the data set WORK.RETRO_CHART_DATES2.
NOTE: There were 5460 observations read from the data set WORK.RETRO_CHART_DATES_ALL_FAC.
NOTE: The data set WORK.RETRO_CHART_DATES has 23660 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


312  
313  
314  proc sort data= retro_dates nodupkey;
315    by modality mc_id fac_id date;
316  run;
16                                                         The SAS System                            12:51 Monday, November 28, 2016


NOTE: There were 3640 observations read from the data set WORK.RETRO_DATES.
NOTE: SAS sort was used.
NOTE: 56 observations with duplicate key values were deleted.
NOTE: The data set WORK.RETRO_DATES has 3584 observations and 5 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


317  
318  proc sort data= prosp_dates nodupkey;
319    by modality mc_id fac_id date;
320  run;

NOTE: There were 14560 observations read from the data set WORK.PROSP_DATES.
NOTE: SAS sort was used.
NOTE: 224 observations with duplicate key values were deleted.
NOTE: The data set WORK.PROSP_DATES has 14336 observations and 5 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


321  
322  ********************************************************************;
323  * MODIFIED THIS SORT STATEMENT TO TEST SCL DUPLICATE PENDING STATS *;
324  ********************************************************************;
325  proc sort data= retro_chart_dates nodupkey;
326    by modality mc_id fac_id date;
327  run;

NOTE: There were 23660 observations read from the data set WORK.RETRO_CHART_DATES.
NOTE: SAS sort was used.
NOTE: 364 observations with duplicate key values were deleted.
NOTE: The data set WORK.RETRO_CHART_DATES has 23296 observations and 5 variables.
NOTE: The PROCEDURE SORT used 0.01 CPU seconds.


328  
329  
330  
331  
332  
333  
334  proc freq data=retro_chart_dates;
335  
336      title "Freq of Retro DAtes";
337      tables mc_id*fac_id /list missing;
338  run;

NOTE: There were 23296 observations read from the data set WORK.RETRO_CHART_DATES.
NOTE: The PROCEDURE FREQ printed pages 1-2.
NOTE: The PROCEDURE FREQ used 0.02 CPU seconds.


339  
340  
341  
342  
343  *----------------------------------------------------------------*;
344  * MRG.RAD.ACCESS.DDOC.SASCODE(APPTTYPE)
17                                                         The SAS System                            12:51 Monday, November 28, 2016

345  *----------------------------------------------------------------*;
346  *----------------------------------------------------------------;
347  * Standard appointment types for CT, MRI, ULS
348  * and approved exceptions
349  *----------------------------------------------------------------;
350  %let appt_tp_CT_std = 'CT10'
351                      , 'CT15'
352                      , 'CT20'
353                      , 'CT30'
354                      , 'CTDB'
355                      , 'CARD'
356                      , 'CTBX'
357                      , 'CT40'
358                      , 'CT45'
359       , 'CT60'
360       , 'CT90'
361       , 'CTCA'
362       , 'CTED'
363       , 'CTA'
364       , 'CTLS'
365       , 'CTPD'
366       , 'CTIP'
367       , 'PS60'
368                      ;
369  
370  %let appt_tp_CT_exc = 'CAR6'  ,'ED'
371                      , 'CCTA'  ,'CTH'
372                      , 'CE15'  ,'PREH'
373                      , 'CRYO'  ,'CTRF'
374                      , 'CT3'   ,'CTSE'
375                      , 'NC15'  ,'CT'
376       , 'NCT'   ,'INP'
377       , 'URG'   ,'CTMY'
378       , 'PEDI'  ,'C120'
379       , 'RFA'   ,'PS30'
380       , 'CMFR'  ,'CBCT'
381                      , 'TR2'   ,'TR3'
382                      , 'TR4'
383                      ;
384  
385  %let appt_tp_MRI_std= 'MR10'
386                      , 'MR20'
387                      , 'MR30'
388                      , 'MR40'
389                      , 'MR45'
390                      , 'MR50'
391                      , 'MR60'
392                      , 'MR75'
393                      , 'MR90'
394                      , 'MR12'
395                      , 'MR10'
396                      , 'MR50'
397                      , 'MR75'
398       , 'MRED'
399                      , 'MRBX'
400       , 'MRIP'
401       , 'MRSD'
402                      ;
18                                                         The SAS System                            12:51 Monday, November 28, 2016

403  
404  %let appt_tp_MRI_exc= 'AG45' ,'NC30'
405                      , 'BRST' ,'MRBR'
406                      , 'BX'   ,'MRBX'
407                      , 'CARD' ,'MRCA'
408                      , 'MRIB' ,'TR'
409                      , 'MRSC' ,'MRDB'
410                      , 'PS60' ,'NC45'
411       , 'ARTH' ,'S105'
412                      ;
413  
414  %let appt_tp_ULS_std = 'US15'
415                       , 'US20'
416                       , 'US30'
417                       , 'US40'
418                       , 'US60'
419                       , 'US80'
420                       , 'US90'
421                       , 'U120'
422                       , 'USBR'
423                       , 'USER'
424                       , 'USBX'
425        , 'USAA'
426        , 'USPV'
427                       , 'USOB'
428        , 'USVA'
429        , 'ULOC'
430        , 'USED'
431        , 'USIP'
432                       ;
433  
434  %let appt_tp_ULS_exc = 'ABI ' ,'U40'   ,'USNL'
435                       , 'B60 ' ,'UOBC'  ,'USSE'
436                       , 'BL30' ,'V1'    ,'URG'
437                       , 'CART' ,'V2'    ,'UOB2'
438                       , 'GRAF' ,'USC'   ,'VMAP'
439                       , 'U30'  ,'USDB'  ,'AAA'
440                       , 'HEPB' ,'PARA'  ,'EHT'
441                       , 'INPT' ,'NTU'   ,'NTUM'
442                       , 'TIPS' ,'ULS'   ,'USCR'
443                       ;
444  
445  /*Standard Appointment types for Mamo Screening only*/
446  %let appt_tp_MAM_std = '7M'
447                      , '7M10'
448                      , '7MX'
449                      , 'WALK'
450                      ;
451  
452  *----------------------------------------------------------------*;
453  * MRG.RAD.ACCESS.DDOC.SASCODE(EIO)
454  *----------------------------------------------------------------*;
455  
456  *--------------------------------------------------*;
457  *--- ED Visits , Hospital Stay , Outpatient     ---*;
458  *--------------------------------------------------*;
459   %macro getClarity;
460   %if &dodata %then %do;
19                                                         The SAS System                            12:51 Monday, November 28, 2016

461  
462  %include "&sysuid..securepw.pgms(securepw)";
463  
464   PROC SQL;
465    CONNECT TO TERADATA AS TERA
466      (USER="&cl_id"  PASSWORD="&cl_pwd"
467       SCHEMA=HCCLNC TDPID=TDPN MODE=TERADATA);
468  
469  
470    EXECUTE (DIAGNOSTIC NOPRODJOIN ON FOR SESSION) BY TERA;
471  
472    CREATE TABLE DDOC.ED_VISITS AS
473    SELECT *
474      FROM CONNECTION TO TERA
475      (SELECT A.PAT_ENC_CSN_ID
476            , substr(A.PAT_MRN_ID,5,8) as MRN
477            , A.CHECKIN_DT
478            , A.FAC_ID
479            , A.ed_admit_time          as in_ts
480            , A.left_ed_event_time     as out_ts
481       FROM KPBINC.ED_VISIT A
482       WHERE A.CHECKIN_DT BETWEEN &terastrt3mr (DATE) AND &teraendr (DATE)
483         and acuity_level_c in (1201,1202,1203)
484      );
485  
486   CREATE TABLE DDOC.HOSP AS
487    SELECT *
488      FROM CONNECTION TO TERA
489      (SELECT
490            A.PAT_ENC_CSN_ID
491          , substr(C.PAT_MRN_ID,5,8)        as MRN
492          , CAST(A.HOSP_ADMSN_TIME AS DATE) as admit_dt
493          , CAST(A.HOSP_DISCH_TIME AS DATE) as discharge_dt
494          , A.HOSP_ADMSN_TIME               as in_ts
495          , A.HOSP_DISCH_TIME               as out_ts
496          , substr(D.DEPT_ABBREVIATION,1,3) as fac_id
497       FROM HCCLNC.PAT_ENC_HSP A
498            LEFT OUTER JOIN HCCLNC.PATIENT C
499              ON A.PAT_ID = C.PAT_ID
500            LEFT OUTER JOIN HCCLNC.CLARITY_DEP D
501              ON A.DEPARTMENT_ID = D.DEPARTMENT_ID
502       where (A.HOSP_ADMSN_TIME (DATE) LE &teraendr (DATE)
503         and (A.HOSP_DISCH_TIME (DATE) IS NULL
504          or  A.HOSP_DISCH_TIME (DATE) GE &terastrt3mr (DATE) ))
505         and a.adt_pat_class_c in (&inpat_adt_pat_class)
506       );
507  
508  CREATE TABLE DDOC.clin_cal AS
509    SELECT *
510      FROM CONNECTION TO TERA
511  
512      (  SELECT day_of_week,
513                calendar_date,
514                CAST(calendar_date AS DATE FORMAT 'YYYY-MM-DD') as char_dt,
515                nc_hldy_in_cd
516  
517    FROM KPBINC.NC_CLINIC_CALENDAR
518  
20                                                         The SAS System                            12:51 Monday, November 28, 2016

519   WHERE calendar_date between CAST(&terastrt3mr AS DATE FORMAT 'YYYY-MM-DD') and
520                 CAST(&&teraend AS DATE FORMAT 'YYYY-MM-DD')
521  
522       order by calendar_date
523  
524  
525       );
526  
527  
528  
529  
530  
531      DISCONNECT FROM TERA;
532    QUIT;
533  
534  
535   %end;
536  
537  
538  
539    proc print data=DDOC.clin_cal (obs=20);
540      title "Clinical Calendar";
541  
542      format calendar_date ;
543  
544    run;
545  
546  
547  
548  
549  
550  
551  
552  
553  
554   %mend;
555   %getClarity;
SYMBOLGEN:  Macro variable DODATA resolves to 1
SYMBOLGEN:  Macro variable SYSUID resolves to F917990
NOTE: %INCLUDE (level 1) file F917990.securepw.pgms(securepw) is file F917990.SECUREPW.PGMS(SECUREPW).
556 +%LET CL_ID=F917990;
557 +%LET CL_PWD=TSTORY74;
NOTE: %INCLUDE (level 1) ending.
SYMBOLGEN:  Macro variable CL_ID resolves to F917990
SYMBOLGEN:  Macro variable CL_PWD resolves to TSTORY74
SYMBOLGEN:  Macro variable TERASTRT3MR resolves to '2016-08-29'
SYMBOLGEN:  Macro variable TERAENDR resolves to '2016-11-27'
NOTE: The data value for column in_ts (in_ts) was truncated or was out of range 220428 times when retrieving that data from the 
      DBMS.
NOTE: The data value for column out_ts (out_ts) was truncated or was out of range 220011 times when retrieving that data from the 
      DBMS.
NOTE: Table DDOC.ED_VISITS created, with 220581 rows and 6 columns.

SYMBOLGEN:  Macro variable TERAENDR resolves to '2016-11-27'
SYMBOLGEN:  Macro variable TERASTRT3MR resolves to '2016-08-29'
SYMBOLGEN:  Macro variable INPAT_ADT_PAT_CLASS resolves to 1201,1204,1206,12110,12112,12113,12115
NOTE: The data value for column out_ts (out_ts) was truncated or was out of range 356719 times when retrieving that data from the 
      DBMS.
21                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: Table DDOC.HOSP created, with 356721 rows and 7 columns.

SYMBOLGEN:  Macro variable TERASTRT3MR resolves to '2016-08-29'
SYMBOLGEN:  && resolves to &.
SYMBOLGEN:  Macro variable TERAEND resolves to '2017-01-22'
NOTE: Table DDOC.CLIN_CAL created, with 147 rows and 4 columns.

NOTE: The PROCEDURE SQL used 0.54 CPU seconds.



NOTE: There were 20 observations read from the data set DDOC.CLIN_CAL.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


558   
559   
560   
561   *------------------------------------------------------------*;
562   * Extract from econsult to get ACTUAL DEMAND
563   *------------------------------------------------------------*;
564   * Pull eConsult referrals with status codes
565   * that require to schedule an appointment
566   * Status codes :
567   *    (09) Appointment Needed
568   *    (11) Direct-scheduling Attempted
569   * Use entry date as reference date
570   *------------------------------------------------------------*;
571   * 08/09/12  Removed stat code 21 & 22 from WHERE clause, not
572   *           needed, will be dropped later since will always
573   *           have a corresponding 09 or 11 record. This change
574   *           should have no impact to final counts.
575   *------------------------------------------------------------*;
576   %macro geteConsult;
577   %if &dodata %then %do;
578   PROC SQL;
579      CONNECT TO DB2 (SSID=DSN2);
580      CREATE TABLE DDOC.ECONHIST
581         AS SELECT * FROM CONNECTION TO DB2
582        (SELECT
583           A.SPCLTYAREA_RQST_IK     AS KEY_
584          ,substr(A.MRN_ID,3,8)     AS MRN
585          ,A.DEST_FAC_ID            AS fac_id
586          ,DATE(A.ENTRY_TS)         AS entry_dt
587          ,A.ENTRY_TS               AS entry_ts
588          ,A.DEST_SPCLTY_CD         AS MODALITY
589          ,A.PRBLM_DS               AS PRBLM_DS
590          ,A.RQST_HIST_TS           AS HIST_TS
591          ,A.RQST_STS_CD            AS STAT_CD
592          ,B.PARRS_CLNC_ID          as CLINIC_ID
593          ,B.AVLBL_CD               as AVAIL_CD
594          ,B.ACTVTY_CD              as ACTIVITY_CD
595          ,B.APPT_DT
596          ,B.APPT_TM
597          ,B.PARRS_SCHDL_ID
598          ,B.FAC_ID                 AS PARRS_FAC_ID
599          ,B.ENTRY_TS               AS PARRS_ENTRY_TS
22                                                         The SAS System                            12:51 Monday, November 28, 2016

600          ,B.APPT_STS_CD            AS PARRS_APPT_STAT
601          ,C.RQST_STS_CD            as BKLT_STAT_CD
602          ,date(D.RQST_STS_TS)      as CLSD_DT
603   
604           FROM      ECON.VECNRQH_RQST_HIST  AS A
605      left join ECON.VECNPAP_PARRS_APPT as b
606             ON a.SPCLTYAREA_RQST_IK = b.SPCLTYAREA_RQST_IK
607   
608      left join ECON.VECNRQH_RQST_HIST as C
609             on a.SPCLTYAREA_RQST_IK = c.SPCLTYAREA_RQST_IK
610            and C.RQST_STS_CD IN ('21','22')
611   
612      left join ECON.VECNRQH_RQST_HIST as D
613             on a.SPCLTYAREA_RQST_IK = D.SPCLTYAREA_RQST_IK
614            and D.RQST_STS_CD IN ('60','70','71','72','73','61','62','63',
615                                  '64','65','66','67','68','69','80','99')
616            AND D.RQST_STS_TS <= &db2endtsr
617   
618          WHERE A.ENTRY_TS BETWEEN &db2begts6mr AND &db2endtsr
619            AND A.RQST_STS_CD IN ('09','11')
620            AND (A.DEST_SPCLTY_CD IN (&mods) or A.DEST_SPCLTY_CD IN (&MRI_submods))
621            and (b.appt_bgn_tm is null or
622                 b.appt_bgn_tm between '07:00:00' and  '19:00:00'
623                )
624   
625   
626   
627   
628   
629      ORDER BY KEY_, modality, APPT_DT, APPT_TM
630     );
631   QUIT;
632   %PUT &SQLXRC;
633   %PUT &SQLXMSG;
634   
635   *****************************************;
636   *** delete out diagnostic Mammography  **;
637   *** Diagnostic MAM appointments are not *;
638   *** included in the MAM modality        *;
639   ***      -mph 04/16/13                  *;
640   *****************************************;
641   
642   *****************************************;
643   *** combine MRI sub-mods back into MRI  *;
644   ***      -bw  10/27/16                  *;
645   *****************************************;
646   
647   data ddoc.ECONHIST;
648     set ddoc.ECONHIST;
649     if modality in ('MAM') THEN DO;
650       IF SUBSTR(UPCASE(PRBLM_DS),1,14) NOT in ('ROUTINE SCREEN') then delete;
651       IF ACTIVITY_CD NE '' AND ACTIVITY_CD not in ('7M','7M10','7MX') then delete;
652     end;
653     if modality in (&MRI_submods) then modality = 'MRI';
654   run;
655   
656   %end;
657   %mend;
23                                                         The SAS System                            12:51 Monday, November 28, 2016

658   %geteConsult;
SYMBOLGEN:  Macro variable DODATA resolves to 1
SYMBOLGEN:  Macro variable DB2ENDTSR resolves to '2016-11-27-23.59.59.999999'
SYMBOLGEN:  Macro variable DB2BEGTS6MR resolves to '2016-05-31-00.00.00.000000'
SYMBOLGEN:  Macro variable DB2ENDTSR resolves to '2016-11-27-23.59.59.999999'
SYMBOLGEN:  Macro variable MODS resolves to 'CT','MRI','ULS','MAM'
SYMBOLGEN:  Macro variable MRI_SUBMODS resolves to 'MRB','MRC','MRD','MRF','MRK','MRN','MRS'
NOTE: Table DDOC.ECONHIST created, with 609601 rows and 20 columns.

NOTE: The PROCEDURE SQL used 9.80 CPU seconds.


SYMBOLGEN:  Macro variable SQLXRC resolves to 0
0
SYMBOLGEN:  Macro variable SQLXMSG resolves to  

SYMBOLGEN:  Macro variable MRI_SUBMODS resolves to 'MRB','MRC','MRD','MRF','MRK','MRN','MRS'

NOTE: There were 609601 observations read from the data set DDOC.ECONHIST.
NOTE: The data set DDOC.ECONHIST has 548764 observations and 20 variables.
NOTE: The DATA statement used 0.16 CPU seconds.


659   
660   
661   
662   *----------------------------------------------------------------*;
663   * MRG.RAD.ACCESS.DDOC.SASCODE(PARRS)
664   *----------------------------------------------------------------*;
665   *--------------------------------------------------*;
666   *--- Pull in the booked appointments from PARRS ---*;
667   *---       PA2REG.VP2_APPOINTMENT               ---*;
668   *--------------------------------------------------*;
669   *****************Note: time range not applied here. Applied lower in pgm;
670   
671    %macro getPARRS;
672    %if &dodata %then %do;
673      proc sql;
674         connect to db2 (ssid=dsn2);
675   
676         create table DDOC.APPTS1 as
677         select * from connection to db2 (
678         select
679                 APPT.facility_id        as fac_id
680                ,APPT.clinic_id          as clinic
681                ,APPT.resource_id        as machine
682                ,APPT.mrn                as mrn
683                ,CLIN.facility_dept_id   as dept_cd
684                ,APPT.appointment_date   as appt_dt
685                ,APPT.appointment_time   as appt_tm
686                ,APPT.entry_date         as book_dt
687                ,APPT.entry_time         as book_tm
688                ,APPT.activity_code      as act_cd
689                ,APPT.availability_code  as avail_cd
690                ,APPT.show_cd            as show_cd
691                ,APPT.user_id            as user_id
692                ,APPT.BKNG_METHOD_CODE   as bkng_mthd
693                ,CLIN.am_start_time      as start_tm
24                                                         The SAS System                            12:51 Monday, November 28, 2016

694                ,CLIN.eve_start_time     as end_tm
695         from  PA2REG.VP2_APPOINTMENT APPT
696              ,PA2REG.VP2_CLINIC      CLIN
697         where APPT.facility_id = CLIN.facility_id
698           and APPT.clinic_id  = CLIN.clinic_id
699           and (
700                (APPT.appointment_date between &db2strt6mr and &db2end6mr and
701                 APPT.show_cd <> 'Y'  /* FTKA */
702                )
703                or
704                APPT.entry_date between &db2strt6mr and &db2end
705               ) /* AD */
706           and appt.BEGIN_TIME between '07:00:00' and  '19:00:00'
707           and CLIN.facility_dept_id in ('RAD','CTS','MRI','ULS') /*change to include mc variation of admin dept-MPH 032413*/
708   
709           and APPT.activity_code in (&appt_tp_ct_std,&appt_tp_ct_exc
710                                     ,&appt_tp_MRI_std,&appt_tp_MRI_exc
711                                     ,&appt_tp_ULS_std,&appt_tp_ULS_exc
712                                     ,&appt_tp_MAM_std)
713   
714           and not (
715                     (appt.patient_sub_area = 'ULSP' and
716                      appt.facility_id in('OAK','SFO','SCH','STR','SJO','STR','SAC',
717                                          'ROS','HAY','VAL','VAC','MOD','CLO','WCR')
718                     ) or
719                     (appt.patient_sub_area = 'ULSU' and
720                      appt.facility_id in('SCH','SAC') or
721          (appt.patient_sub_area = 'ULS1' and
722                      appt.facility_id in('SCH'))
723                     )
724                   )
725   
726   
727   
728         order by dept_cd, fac_id, clinic, machine
729      );
730   *--------------------------------------------------*;
731   *--- Pull in the future appointments from PARRS ---*;
732   *---       PA2REG.VP2_FUTURE_APPT               ---*;
733   *--------------------------------------------------*;
734         create table DDOC.APPTS2 as
735         select * from connection to db2 (
736         select
737                 APPT.facility_id        as fac_id
738                ,APPT.clinic_id          as clinic
739                ,APPT.resource_id        as machine
740                ,APPT.mrn                as mrn
741                ,CLIN.facility_dept_id   as dept_cd
742                ,APPT.appointment_date   as appt_dt
743                ,APPT.appointment_time   as appt_tm
744                ,APPT.entry_date         as book_dt
745                ,APPT.entry_time         as book_tm
746                ,APPT.activity_code      as act_cd
747                ,APPT.availability_code  as avail_cd
748                ,'X'                     as show_cd
749                ,APPT.user_id            as user_id
750                ,APPT.BKNG_METHOD_CODE   as bkng_mthd
751                ,CLIN.am_start_time      as start_tm
25                                                         The SAS System                            12:51 Monday, November 28, 2016

752                ,CLIN.eve_start_time     as end_tm
753         from  PA2REG.VP2_FUTURE_APPT APPT
754              ,PA2REG.VP2_CLINIC      CLIN
755         where APPT.facility_id = CLIN.facility_id
756           and APPT.clinic_id  = CLIN.clinic_id
757     and appt.BEGIN_TIME between '07:00:00' and  '19:00:00'
758           and CLIN.facility_dept_id in ('RAD','CTS','MRI','ULS') /*change to include mc variation of admin dept-MPH 032413*/
759           and APPT.entry_date <= &db2end
760           and APPT.activity_code in (&appt_tp_ct_std,&appt_tp_ct_exc
761                                     ,&appt_tp_MRI_std,&appt_tp_MRI_exc
762                                     ,&appt_tp_ULS_std,&appt_tp_ULS_exc
763                                     ,&appt_tp_MAM_std)
764   
765           and not (
766                     (appt.patient_sub_area = 'ULSP' and
767                      appt.facility_id in('OAK','SFO','SCH','STR','SJO','STR','SAC',
768                                          'ROS','HAY','VAL','VAC','MOD','CLO','WCR')
769                     ) or
770                     (appt.patient_sub_area = 'ULSU' and
771                      appt.facility_id in('SCH','SAC') or
772          (appt.patient_sub_area = 'ULS1' and
773                      appt.facility_id in('SCH'))
774                     )
775                   )
776   
777      );
778   
779   *---------------------------------------------------*;
780   *--- Pull in the appointment schedules from PARRS---*;
781   *---       PA2REG.VP2_FINAL_SCHEDULE             ---*;
782   *--- to get unbooked                             ---*;
783   *---------------------------------------------------*;
784   
785         create table DDOC.SCHED1 as
786         select * from connection to db2 (
787         select  SCHED.facility_id         as fac_id
788                ,CLIN.facility_dept_id     as dept_cd
789                ,SCHED.clinic_id           as clinic
790                ,SCHED.schedule_date       as schddate
791                ,SCHED.APPOINTMENT_TIME    as schdtime
792                ,SCHED.activity_code       as act_cd
793                ,SCHED.activity_code_type  as acdttype
794                ,SCHED.appmnt_capacity     as apptcap
795                ,SCHED.held_code           as heldcode
796                ,SCHED.effective_date      as effdate
797                ,SCHED.effective_time      as efftime
798                ,SCHED.booked_count        as bkdct
799                ,SCHED.availability_code   as avail_cd
800                ,SCHED.resource_id         as machine
801         from  PA2REG.VP2_FINAL_SCHEDULE SCHED
802              ,PA2REG.VP2_CLINIC       CLIN
803         WHERE SCHED.facility_id = CLIN.facility_id
804           and SCHED.clinic_id   = CLIN.clinic_id
805           and SCHED.BEGIN_TIME between '07:00:00' and  '19:00:00'
806           and CLIN.facility_dept_id in ('RAD','CTS','MRI','ULS') /*change to include mc variation of admin dept-MPH 032413*/
807   
808           and SCHED.schedule_date between &db2startr and &db2end
809   
26                                                         The SAS System                            12:51 Monday, November 28, 2016

810           and SCHED.activity_code in (&appt_tp_ct_std,&appt_tp_ct_exc
811                                     ,&appt_tp_MRI_std,&appt_tp_MRI_exc
812                                     ,&appt_tp_ULS_std,&appt_tp_ULS_exc
813                                     ,&appt_tp_MAM_std)
814   
815           and not(
816                    (sched.sub_area = 'ULSP' and
817                     sched.facility_id in('OAK','SFO','SCH','STR','SJO','STR','SAC',
818                                          'ROS','HAY','VAL','VAC','MOD','CLO','WCR')
819                    ) or
820                    (sched.sub_area = 'ULSU' and
821                     sched.facility_id in('SCH','SAC') or
822         (sched.sub_area = 'ULS1' and
823                      sched.facility_id in('SCH'))
824                    )
825                  )
826   
827   
828         ORDER by dept_cd, fac_id, clinic, machine
829         );
830   *----------------------------------------------------*;
831   *--- Pull in the future schedules from PARRS      ---*;
832   *---       PA2REG.VP2_FUTURE_SCHED                ---*;
833   *--- Prospective : NYA, Open   (Supply and Open)  ---*;
834   *----------------------------------------------------*;
835   
836         create table DDOC.SCHED2 as
837         select *
838         from connection to db2 (
839         select  SCHED.facility_id         as fac_id
840                ,CLIN.facility_dept_id     as dept_cd
841                ,SCHED.clinic_id           as clinic
842                ,SCHED.schedule_date       as schddate
843                ,SCHED.APPOINTMENT_TIME    as schdtime
844                ,SCHED.activity_code       as act_cd
845                ,SCHED.activity_cd_type    as acdttype
846                ,SCHED.apptmnt_capacity    as apptcap
847                ,SCHED.held_code           as heldcode
848                ,SCHED.effective_date      as effdate
849                ,SCHED.effective_time      as efftime
850                ,SCHED.booked_count        as bkdct
851                ,SCHED.availability_code   as avail_cd
852                ,SCHED.resource_id         as machine
853         from  PA2REG.VP2_FUTURE_SCHED SCHED
854              ,PA2REG.VP2_CLINIC       CLIN
855         WHERE SCHED.facility_id = CLIN.facility_id
856           and SCHED.clinic_id   = CLIN.clinic_id
857           and SCHED.BEGIN_TIME between '07:00:00' and  '19:00:00'
858   
859           and SCHED.schedule_date between &db2startr and &db2end
860           and CLIN.facility_dept_id in ('RAD','CTS','MRI','ULS') /*change to include mc variation of admin dept-MPH 032413*/
861   
862           and SCHED.activity_code in (&appt_tp_ct_std,&appt_tp_ct_exc
863                                     ,&appt_tp_MRI_std,&appt_tp_MRI_exc
864                                     ,&appt_tp_ULS_std,&appt_tp_ULS_exc
865                                     ,&appt_tp_MAM_std)
866   
867   
27                                                         The SAS System                            12:51 Monday, November 28, 2016

868           and not(
869                    (sched.sub_area = 'ULSP' and
870                     sched.facility_id in('OAK','SFO','SCH','STR','SJO','STR','SAC',
871                                          'ROS','HAY','VAL','VAC','MOD','CLO','WCR')
872                    ) or
873                    (sched.sub_area = 'ULSU' and
874                     sched.facility_id in('SCH','SAC') or
875          (sched.sub_area = 'ULS1' and
876                      sched.facility_id in('SCH'))
877                    )
878                  )
879   
880   
881   
882         ORDER by dept_cd, fac_id, clinic, machine
883         );
884      quit;
885    %end;
886    %mend;
887    %getPARRS;
SYMBOLGEN:  Macro variable DODATA resolves to 1
SYMBOLGEN:  Macro variable DB2STRT6MR resolves to '05/31/2016'
SYMBOLGEN:  Macro variable DB2END6MR resolves to '11/27/2016'
SYMBOLGEN:  Macro variable DB2STRT6MR resolves to '05/31/2016'
SYMBOLGEN:  Macro variable DB2END resolves to '01/22/2017'
SYMBOLGEN:  Macro variable APPT_TP_CT_STD resolves to 'CT10'                     , 'CT15'                     , 'CT20'              
                   , 'CT30'                     , 'CTDB'                     , 'CARD'                     , 'CTBX'                  
               , 'CT40'                     , 'CT45'      , 'CT60'      , 'CT90'      , 'CTCA'      , 'CTED'      , 'CTA'      , 
            'CTLS'      , 'CTPD'      , 'CTIP'      , 'PS60'
SYMBOLGEN:  Macro variable APPT_TP_CT_EXC resolves to 'CAR6'  ,'ED'                     , 'CCTA'  ,'CTH'                     , 
            'CE15'  ,'PREH'                     , 'CRYO'  ,'CTRF'                     , 'CT3'   ,'CTSE'                     , 
            'NC15'  ,'CT'      , 'NCT'   ,'INP'      , 'URG'   ,'CTMY'      , 'PEDI'  ,'C120'      , 'RFA'   ,'PS30'      , 'CMFR'  
            ,'CBCT'                     , 'TR2'   ,'TR3'                     , 'TR4'
SYMBOLGEN:  Macro variable APPT_TP_MRI_STD resolves to 'MR10'                     , 'MR20'                     , 'MR30'             
                    , 'MR40'                     , 'MR45'                     , 'MR50'                     , 'MR60'                 
                , 'MR75'                     , 'MR90'                     , 'MR12'                     , 'MR10'                     
            , 'MR50'                     , 'MR75'      , 'MRED'                     , 'MRBX'      , 'MRIP'      , 'MRSD'
SYMBOLGEN:  Macro variable APPT_TP_MRI_EXC resolves to 'AG45' ,'NC30'                     , 'BRST' ,'MRBR'                     , 
            'BX'   ,'MRBX'                     , 'CARD' ,'MRCA'                     , 'MRIB' ,'TR'                     , 'MRSC' 
            ,'MRDB'                     , 'PS60' ,'NC45'      , 'ARTH' ,'S105'
SYMBOLGEN:  Macro variable APPT_TP_ULS_STD resolves to 'US15'                      , 'US20'                      , 'US30'           
                       , 'US40'                      , 'US60'                      , 'US80'                      , 'US90'           
                       , 'U120'                      , 'USBR'                      , 'USER'                      , 'USBX'       , 
            'USAA'       , 'USPV'                      , 'USOB'       , 'USVA'       , 'ULOC'       , 'USED'       , 'USIP'
SYMBOLGEN:  Macro variable APPT_TP_ULS_EXC resolves to 'ABI ' ,'U40'   ,'USNL'                      , 'B60 ' ,'UOBC'  ,'USSE'       
                           , 'BL30' ,'V1'    ,'URG'                      , 'CART' ,'V2'    ,'UOB2'                      , 'GRAF' 
            ,'USC'   ,'VMAP'                      , 'U30'  ,'USDB'  ,'AAA'                      , 'HEPB' ,'PARA'  ,'EHT'            
                      , 'INPT' ,'NTU'   ,'NTUM'                      , 'TIPS' ,'ULS'   ,'USCR'
SYMBOLGEN:  Macro variable APPT_TP_MAM_STD resolves to '7M'                     , '7M10'                     , '7MX'                
                 , 'WALK'
NOTE: Table DDOC.APPTS1 created, with 697634 rows and 16 columns.

SYMBOLGEN:  Macro variable DB2END resolves to '01/22/2017'
SYMBOLGEN:  Macro variable APPT_TP_CT_STD resolves to 'CT10'                     , 'CT15'                     , 'CT20'              
                   , 'CT30'                     , 'CTDB'                     , 'CARD'                     , 'CTBX'                  
               , 'CT40'                     , 'CT45'      , 'CT60'      , 'CT90'      , 'CTCA'      , 'CTED'      , 'CTA'      , 
            'CTLS'      , 'CTPD'      , 'CTIP'      , 'PS60'
SYMBOLGEN:  Macro variable APPT_TP_CT_EXC resolves to 'CAR6'  ,'ED'                     , 'CCTA'  ,'CTH'                     , 
28                                                         The SAS System                            12:51 Monday, November 28, 2016

            'CE15'  ,'PREH'                     , 'CRYO'  ,'CTRF'                     , 'CT3'   ,'CTSE'                     , 
            'NC15'  ,'CT'      , 'NCT'   ,'INP'      , 'URG'   ,'CTMY'      , 'PEDI'  ,'C120'      , 'RFA'   ,'PS30'      , 'CMFR'  
            ,'CBCT'                     , 'TR2'   ,'TR3'                     , 'TR4'
SYMBOLGEN:  Macro variable APPT_TP_MRI_STD resolves to 'MR10'                     , 'MR20'                     , 'MR30'             
                    , 'MR40'                     , 'MR45'                     , 'MR50'                     , 'MR60'                 
                , 'MR75'                     , 'MR90'                     , 'MR12'                     , 'MR10'                     
            , 'MR50'                     , 'MR75'      , 'MRED'                     , 'MRBX'      , 'MRIP'      , 'MRSD'
SYMBOLGEN:  Macro variable APPT_TP_MRI_EXC resolves to 'AG45' ,'NC30'                     , 'BRST' ,'MRBR'                     , 
            'BX'   ,'MRBX'                     , 'CARD' ,'MRCA'                     , 'MRIB' ,'TR'                     , 'MRSC' 
            ,'MRDB'                     , 'PS60' ,'NC45'      , 'ARTH' ,'S105'
SYMBOLGEN:  Macro variable APPT_TP_ULS_STD resolves to 'US15'                      , 'US20'                      , 'US30'           
                       , 'US40'                      , 'US60'                      , 'US80'                      , 'US90'           
                       , 'U120'                      , 'USBR'                      , 'USER'                      , 'USBX'       , 
            'USAA'       , 'USPV'                      , 'USOB'       , 'USVA'       , 'ULOC'       , 'USED'       , 'USIP'
SYMBOLGEN:  Macro variable APPT_TP_ULS_EXC resolves to 'ABI ' ,'U40'   ,'USNL'                      , 'B60 ' ,'UOBC'  ,'USSE'       
                           , 'BL30' ,'V1'    ,'URG'                      , 'CART' ,'V2'    ,'UOB2'                      , 'GRAF' 
            ,'USC'   ,'VMAP'                      , 'U30'  ,'USDB'  ,'AAA'                      , 'HEPB' ,'PARA'  ,'EHT'            
                      , 'INPT' ,'NTU'   ,'NTUM'                      , 'TIPS' ,'ULS'   ,'USCR'
SYMBOLGEN:  Macro variable APPT_TP_MAM_STD resolves to '7M'                     , '7M10'                     , '7MX'                
                 , 'WALK'
NOTE: Table DDOC.APPTS2 created, with 54871 rows and 16 columns.

SYMBOLGEN:  Macro variable DB2STARTR resolves to '11/14/2016'
SYMBOLGEN:  Macro variable DB2END resolves to '01/22/2017'
SYMBOLGEN:  Macro variable APPT_TP_CT_STD resolves to 'CT10'                     , 'CT15'                     , 'CT20'              
                   , 'CT30'                     , 'CTDB'                     , 'CARD'                     , 'CTBX'                  
               , 'CT40'                     , 'CT45'      , 'CT60'      , 'CT90'      , 'CTCA'      , 'CTED'      , 'CTA'      , 
            'CTLS'      , 'CTPD'      , 'CTIP'      , 'PS60'
SYMBOLGEN:  Macro variable APPT_TP_CT_EXC resolves to 'CAR6'  ,'ED'                     , 'CCTA'  ,'CTH'                     , 
            'CE15'  ,'PREH'                     , 'CRYO'  ,'CTRF'                     , 'CT3'   ,'CTSE'                     , 
            'NC15'  ,'CT'      , 'NCT'   ,'INP'      , 'URG'   ,'CTMY'      , 'PEDI'  ,'C120'      , 'RFA'   ,'PS30'      , 'CMFR'  
            ,'CBCT'                     , 'TR2'   ,'TR3'                     , 'TR4'
SYMBOLGEN:  Macro variable APPT_TP_MRI_STD resolves to 'MR10'                     , 'MR20'                     , 'MR30'             
                    , 'MR40'                     , 'MR45'                     , 'MR50'                     , 'MR60'                 
                , 'MR75'                     , 'MR90'                     , 'MR12'                     , 'MR10'                     
            , 'MR50'                     , 'MR75'      , 'MRED'                     , 'MRBX'      , 'MRIP'      , 'MRSD'
SYMBOLGEN:  Macro variable APPT_TP_MRI_EXC resolves to 'AG45' ,'NC30'                     , 'BRST' ,'MRBR'                     , 
            'BX'   ,'MRBX'                     , 'CARD' ,'MRCA'                     , 'MRIB' ,'TR'                     , 'MRSC' 
            ,'MRDB'                     , 'PS60' ,'NC45'      , 'ARTH' ,'S105'
SYMBOLGEN:  Macro variable APPT_TP_ULS_STD resolves to 'US15'                      , 'US20'                      , 'US30'           
                       , 'US40'                      , 'US60'                      , 'US80'                      , 'US90'           
                       , 'U120'                      , 'USBR'                      , 'USER'                      , 'USBX'       , 
            'USAA'       , 'USPV'                      , 'USOB'       , 'USVA'       , 'ULOC'       , 'USED'       , 'USIP'
SYMBOLGEN:  Macro variable APPT_TP_ULS_EXC resolves to 'ABI ' ,'U40'   ,'USNL'                      , 'B60 ' ,'UOBC'  ,'USSE'       
                           , 'BL30' ,'V1'    ,'URG'                      , 'CART' ,'V2'    ,'UOB2'                      , 'GRAF' 
            ,'USC'   ,'VMAP'                      , 'U30'  ,'USDB'  ,'AAA'                      , 'HEPB' ,'PARA'  ,'EHT'            
                      , 'INPT' ,'NTU'   ,'NTUM'                      , 'TIPS' ,'ULS'   ,'USCR'
SYMBOLGEN:  Macro variable APPT_TP_MAM_STD resolves to '7M'                     , '7M10'                     , '7MX'                
                 , 'WALK'
NOTE: Table DDOC.SCHED1 created, with 57891 rows and 14 columns.

SYMBOLGEN:  Macro variable DB2STARTR resolves to '11/14/2016'
SYMBOLGEN:  Macro variable DB2END resolves to '01/22/2017'
SYMBOLGEN:  Macro variable APPT_TP_CT_STD resolves to 'CT10'                     , 'CT15'                     , 'CT20'              
                   , 'CT30'                     , 'CTDB'                     , 'CARD'                     , 'CTBX'                  
               , 'CT40'                     , 'CT45'      , 'CT60'      , 'CT90'      , 'CTCA'      , 'CTED'      , 'CTA'      , 
            'CTLS'      , 'CTPD'      , 'CTIP'      , 'PS60'
SYMBOLGEN:  Macro variable APPT_TP_CT_EXC resolves to 'CAR6'  ,'ED'                     , 'CCTA'  ,'CTH'                     , 
29                                                         The SAS System                            12:51 Monday, November 28, 2016

            'CE15'  ,'PREH'                     , 'CRYO'  ,'CTRF'                     , 'CT3'   ,'CTSE'                     , 
            'NC15'  ,'CT'      , 'NCT'   ,'INP'      , 'URG'   ,'CTMY'      , 'PEDI'  ,'C120'      , 'RFA'   ,'PS30'      , 'CMFR'  
            ,'CBCT'                     , 'TR2'   ,'TR3'                     , 'TR4'
SYMBOLGEN:  Macro variable APPT_TP_MRI_STD resolves to 'MR10'                     , 'MR20'                     , 'MR30'             
                    , 'MR40'                     , 'MR45'                     , 'MR50'                     , 'MR60'                 
                , 'MR75'                     , 'MR90'                     , 'MR12'                     , 'MR10'                     
            , 'MR50'                     , 'MR75'      , 'MRED'                     , 'MRBX'      , 'MRIP'      , 'MRSD'
SYMBOLGEN:  Macro variable APPT_TP_MRI_EXC resolves to 'AG45' ,'NC30'                     , 'BRST' ,'MRBR'                     , 
            'BX'   ,'MRBX'                     , 'CARD' ,'MRCA'                     , 'MRIB' ,'TR'                     , 'MRSC' 
            ,'MRDB'                     , 'PS60' ,'NC45'      , 'ARTH' ,'S105'
SYMBOLGEN:  Macro variable APPT_TP_ULS_STD resolves to 'US15'                      , 'US20'                      , 'US30'           
                       , 'US40'                      , 'US60'                      , 'US80'                      , 'US90'           
                       , 'U120'                      , 'USBR'                      , 'USER'                      , 'USBX'       , 
            'USAA'       , 'USPV'                      , 'USOB'       , 'USVA'       , 'ULOC'       , 'USED'       , 'USIP'
SYMBOLGEN:  Macro variable APPT_TP_ULS_EXC resolves to 'ABI ' ,'U40'   ,'USNL'                      , 'B60 ' ,'UOBC'  ,'USSE'       
                           , 'BL30' ,'V1'    ,'URG'                      , 'CART' ,'V2'    ,'UOB2'                      , 'GRAF' 
            ,'USC'   ,'VMAP'                      , 'U30'  ,'USDB'  ,'AAA'                      , 'HEPB' ,'PARA'  ,'EHT'            
                      , 'INPT' ,'NTU'   ,'NTUM'                      , 'TIPS' ,'ULS'   ,'USCR'
SYMBOLGEN:  Macro variable APPT_TP_MAM_STD resolves to '7M'                     , '7M10'                     , '7MX'                
                 , 'WALK'
NOTE: Table DDOC.SCHED2 created, with 226069 rows and 14 columns.

NOTE: The PROCEDURE SQL used 16.73 CPU seconds.


888   
889   
890   
891   *--------------------------------------------------*;
892   *--- Pull requisitions from TRRS to calculate   ---*;
893   *--- expected demand and ED/inpt actual seen    ---*;
894   *--------------------------------------------------*;
895   * 07-10-2012  Add outpatient actual seen        ---*;
896   *--------------------------------------------------*;
897   
898    %macro getTRRS;
899    %if &dodata %then %do;
900    proc sql ;
901      connect to db2 (ssid=dsn2);
902      create table TRRS as
903      select * from CONNECTION TO DB2
904       (select DISTINCT
905          A.mrn              as mrn,
906          A.fac_id           as fac_id,
907          A.req_date         as req_dt,
908          A.req_time         as req_tm,
909          B.req_number       as req_no,
910          B.patient_status   as location,
911          B.result_status    as TRRS_status,
912          A.cpt_code         as cpt4,
913          A.SEQ_NUMB         as SEQ_NUMB
914        from TRRS.VRADIOLOGY_CPT4   A
915           , TRRS.VRADIOLOGY_RESULT B
916        where A.mrn        = B.mrn
917          and A.req_date = B.req_date
918          and A.req_time = B.req_time
919          and A.req_date between &db2strt3mr and &db2endr
920          and A.cpt_code in (&cptlist)
30                                                         The SAS System                            12:51 Monday, November 28, 2016

921          and A.mrn not in ('00000000','99999999','12345678')
922          and b.result_status in ('F','I')
923   
924      order by req_no, seq_numb
925      );
926    quit;
927   
928    proc sort data=TRRS nodupkey ; by req_no ; run ;
929   
930   
931   
932    %DOMCROLL(TRRS,TRRS2);
933   
934    proc sql ;
935      create table TRRS3 as
936      select b.modality
937           , a.*
938        from trrs2    as a
939        join modality as b
940        on a.cpt4 = b.cpt_code
941      where mrms_lbl not in ('US ABNORMAL AORTA SCREENING')
942      order by req_no
943      ;
944    QUIT;
945   
946   **************************************************************;
947   ** program modification for mammography. Only select cpt   ***;
948   ** codes for screening mam studies - mph                   ***;
949   **************************************************************;
950   
951   data ddoc.trrs;
952     set trrs3;
953     if modality = 'MAM' then do;
954       if cpt4 not in ('76083','76092','77052','77057') then delete;
955     end;
956   run;
957   
958    PROC SORT DATA = DDOC.TRRS;
959      BY FAC_ID MODALITY MRN REQ_DT REQ_TM;
960    RUN;
961   
962     /*DEDUP MULTIPLE APPTS FOR SINGLE STUDY*/
963    DATA DDOC.TRRS;
964      SET DDOC.TRRS;
965      FORMAT REQ_LAG TIME8.;
966      REQ_LAG = LAG(REQ_TM);
967      IF FAC_ID = LAG(FAC_ID) AND
968      MODALITY = LAG(MODALITY) AND
969            MRN = LAG(MRN) AND
970         REQ_DT = LAG(REQ_DT)
971         THEN DO;
972     IF (REQ_TM - REQ_LAG) <= (2*3600) THEN DELETE;
973      END;
974      DROP REQ_LAG;
975    RUN;
976   
977    %end;
978   
31                                                         The SAS System                            12:51 Monday, November 28, 2016

979    %mend;
980   
981    %getTRRS;
SYMBOLGEN:  Macro variable DODATA resolves to 1
SYMBOLGEN:  Macro variable DB2STRT3MR resolves to '08/29/2016'
SYMBOLGEN:  Macro variable DB2ENDR resolves to '11/27/2016'
SYMBOLGEN:  Macro variable CPTLIST resolves to 
            '00002','00006','00007','00010','00501','00502','00503','00504','01922','04225','10022','19000','19030','19081','19082',
            '19083','19084','19085','19086','19100','19101','19102','19103','19281','19282','19283','19285','19286','19290','19291',
            '19295','20611','20982','47010','47382','48102','48511','49020','49021','49061','49080','49081','49083','70336','70450',
            '70460','70470','70480','70481','70482','70486','70487','70488','70490','70491','70492','70496','70498','70540','70542',
            '70543','70544','70545','70546','70547','70548','70549','70551','70552','70553','70554','70555','70557','70558','70559',
            '71250','71260','71270','71275','71550','71551','71552','71555','72125','72126','72127','72128','72129','72130','72131',
            '72132','72133','72141','72142','72146','72147','72148','72149','72156','72157','72158','72159','72191','72192','72193',
            '72194','72195','72196','72197','72198','72292','73200','73201','73202','73206','73218','73219','73220','73221','73222',
            '73223','73225','73700','73701','73702','73706','73718','73719','73720','73721','73722','73723','73725','74150','74160',
            '74170','74174','74175','74176','74177','74178','74181','74182','74183','74185','74261','74262','75552','75553','75554',
            '75555','75556','75557','75558','75559','75560','75561','75571','75572','75573','75574','75635','75945','75946','76098',
            '76380','76390','76497','76498','76506','76510','76511','76512','76513','76514','76516','76519','76529','76536','76604',
            '76645','76700','76705','76770','76775','76800','76801','76802','76805','76810','76811','76812','76813','76814','76815',
            '76816','76817','76818','76819','76820','76821','76825','76826','76827','76828','76830','76831','76856','76857','76870',
            '76872','76873','76880','76881','76882','76885','76886','76930','76932','76936','76937','76940','76941','76942','76945',
            '76946','76948','76950','76965','76970','76975','76977','76998','76999','77011','77012','77013','77021','77022','77031',
            '77032','77051','77052','77053','77054','77055','77056','77057','77058','77059','77084','93307','93308','93312','93313',
            '93320','93321','93325','93350','93880','93882','93923','93924','93925','93926','93930','93931','93965','93970','93971',
            '93975','93976','93978','93979','93990'
NOTE: Table WORK.TRRS created, with 490387 rows and 9 columns.

NOTE: The PROCEDURE SQL used 12.32 CPU seconds.



NOTE: Host sort was used.
NOTE: 54358 observations with duplicate key values were deleted.
NOTE: There were 490387 observations read from the data set WORK.TRRS.
NOTE: The data set WORK.TRRS has 436029 observations and 9 variables.
NOTE: The PROCEDURE SORT used 0.23 CPU seconds.


NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to TRRS
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 436029 observations read from the data set WORK.TRRS.
NOTE: The data set WORK.FIXSCH has 436029 observations and 9 variables.
NOTE: The DATA statement used 0.05 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: Host sort was used.
NOTE: There were 436029 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 436029 observations and 9 variables.
NOTE: The PROCEDURE SORT used 0.27 CPU seconds.
32                                                         The SAS System                            12:51 Monday, November 28, 2016



SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to TRRS2
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 436029 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.TRRS2 has 436029 observations and 11 variables.
NOTE: The DATA statement used 0.10 CPU seconds.


NOTE: SAS threaded sort was used.
NOTE: Table WORK.TRRS3 created, with 434264 rows and 12 columns.

NOTE: The PROCEDURE SQL used 0.42 CPU seconds.



NOTE: There were 434264 observations read from the data set WORK.TRRS3.
NOTE: The data set DDOC.TRRS has 419067 observations and 12 variables.
NOTE: The DATA statement used 0.05 CPU seconds.



NOTE: Host sort was used.
NOTE: There were 419067 observations read from the data set DDOC.TRRS.
NOTE: The data set DDOC.TRRS has 419067 observations and 12 variables.
NOTE: The PROCEDURE SORT used 0.28 CPU seconds.



NOTE: There were 419067 observations read from the data set DDOC.TRRS.
NOTE: The data set DDOC.TRRS has 399975 observations and 12 variables.
NOTE: The DATA statement used 0.07 CPU seconds.


982   
983   
984   *--------------------------------------------------*;
985   *--- Pull requisitions from MRMS to calculate   ---*;
986   *--- to capture imaging studies that are not    ---*;
987   *-   not performed by the Radiology department    -*;
988   *-   or are in the perinatal sub dept.            -*;
989   *-   These will be removed from the TRRS data.    -*;
990   
991   *--------------------------------------------------*;
992   
993   *(select distinct char(requisition_no,8) as req_no *;
33                                                         The SAS System                            12:51 Monday, November 28, 2016

994    %macro getMRMS;
995    %if &dodata %then %do;
996   
997     proc sql ;
998       connect to db2 (ssid=dsn2);
999       create table ddoc.mrms_excl as
1000      select * from CONNECTION TO DB2
1001  
1002           (select distinct requisition_no as req_no
1003  
1004              from mrms.vxray_encounter
1005  
1006             where requisition_date between &db2strt3mr and &db2endr
1007              and (mach_rsrc_id in('5100849','6116558','2846237','9798506',
1008                                   '1672900','5996711','1979989','2656245',
1009                                   '4802061','0218566','3724676','4252477',
1010                                   '6443401','7520803','0268102','6363564',
1011                                   '0568517','1902634','0410789','3458520',
1012                                   '6506251','9553982','3632631','0330667',
1013                                   '1762597','3476211','7412073'
1014                     ) or
1015  
1016                      (
1017                       (mach_sdept_cd = 'ULSP' and
1018                        fac_id in('OAK','SFO','SCH','STR','SJO','STR','SAC',
1019                                  'ROS','HAY','VAL','VAC','MOD','CLO','WCR')
1020                       ) or
1021                       (mach_sdept_cd = 'ULSU' and
1022                        fac_id in('SCH','SAC')
1023                       ) or
1024         (mach_sdept_cd  = 'ULS1' and
1025                     fac_id in('SCH'))
1026                     )
1027                    )
1028  
1029             );
1030     quit;
1031  
1032   %end;
1033  
1034   %mend;
1035  
1036   %getMRMS;
SYMBOLGEN:  Macro variable DODATA resolves to 1
SYMBOLGEN:  Macro variable DB2STRT3MR resolves to '08/29/2016'
SYMBOLGEN:  Macro variable DB2ENDR resolves to '11/27/2016'
NOTE: Table DDOC.MRMS_EXCL created, with 14938 rows and 1 columns.

NOTE: The PROCEDURE SQL used 0.97 CPU seconds.


1037  
1038  *--------------------------------------------------*;
1039  *--- Check departments                          ---*;
1040  
1041  *--------------------------------------------------*;
1042  
1043   proc freq data=DDOC.ECONHIST;
34                                                         The SAS System                            12:51 Monday, November 28, 2016

1044     table clinic_id /list missing;
1045     title "eConsult Departments";
1046   run;

NOTE: There were 548764 observations read from the data set DDOC.ECONHIST.
NOTE: The PROCEDURE FREQ printed pages 4-5.
NOTE: The PROCEDURE FREQ used 0.06 CPU seconds.


1047  
1048   proc freq data=DDOC.APPTS1;
1049     table clinic dept_cd fac_id*dept_cd fac_id*dept_cd*act_cd/list missing;
1050     title "PARRS Appt 1 Departments";
1051   run;

NOTE: There were 697634 observations read from the data set DDOC.APPTS1.
NOTE: The PROCEDURE FREQ printed pages 6-21.
NOTE: The PROCEDURE FREQ used 0.23 CPU seconds.


1052  
1053   proc freq data=DDOC.APPTS2;
1054     table clinic dept_cd /list missing;
1055     title "PARRS Appt 2 Departments";
1056   run;

NOTE: There were 54871 observations read from the data set DDOC.APPTS2.
NOTE: The PROCEDURE FREQ printed page 22.
NOTE: The PROCEDURE FREQ used 0.01 CPU seconds.


1057  
1058  
1059  
1060   proc freq data=DDOC.SCHED1;
1061     table clinic dept_cd /list missing;
1062     title "PARRS Schedule 1 Departments";
1063   run;

NOTE: There were 57891 observations read from the data set DDOC.SCHED1.
NOTE: The PROCEDURE FREQ printed page 23.
NOTE: The PROCEDURE FREQ used 0.01 CPU seconds.


1064  
1065   proc freq data=DDOC.SCHED2;
1066     table clinic dept_cd /list missing;
1067     title "PARRS Schedule 2 Departments";
1068   run;

NOTE: There were 226069 observations read from the data set DDOC.SCHED2.
NOTE: The PROCEDURE FREQ printed page 24.
NOTE: The PROCEDURE FREQ used 0.03 CPU seconds.


1069  
1070  
1071  
35                                                         The SAS System                            12:51 Monday, November 28, 2016

1072  
1073  *---------------------------------------------------------------;
1074  * End Section of queries to get system data
1075  *---------------------------------------------------------------;
1076  
1077  
1078  
1079  * eliminate dups of multiple appt needed status ;
1080  
1081  proc sort data=ddoc.eConhist(drop=hist_ts) OUT=econhist nodupkey;
1082    by key_ modality mrn APPT_DT APPT_TM ;
1083  run;

NOTE: Host sort was used.
NOTE: 204167 observations with duplicate key values were deleted.
NOTE: There were 548764 observations read from the data set DDOC.ECONHIST.
NOTE: The data set WORK.ECONHIST has 344597 observations and 19 variables.
NOTE: The PROCEDURE SORT used 0.35 CPU seconds.


1084  
1085  data eConsult;
1086    length modality $ 3;
1087    set econhist;
1088  
1089    * Reassign the request to the facility that booked the appointment ;
1090    econ_fac_id=fac_id;
1091    if parrs_fac_id ne '' and parrs_fac_id ne fac_id then
1092        fac_id=parrs_fac_id;
1093  
1094     appt_needed=1;
1095  run;

WARNING: Multiple lengths were specified for the variable modality by input data set(s). This can cause truncation of data.
NOTE: There were 344597 observations read from the data set WORK.ECONHIST.
NOTE: The data set WORK.ECONSULT has 344597 observations and 21 variables.
NOTE: The DATA statement used 0.05 CPU seconds.


1096  
1097  
NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
1098  
1099  %DOMCROLL(eConsult,eConsult);
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to eConsult
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 344597 observations read from the data set WORK.ECONSULT.
NOTE: The data set WORK.FIXSCH has 344597 observations and 21 variables.
NOTE: The DATA statement used 0.06 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

36                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: Host sort was used.
NOTE: There were 344597 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 344597 observations and 21 variables.
NOTE: The PROCEDURE SORT used 0.24 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to eConsult
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 344597 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.ECONSULT has 344597 observations and 23 variables.
NOTE: The DATA statement used 0.10 CPU seconds.


1100  
1101  proc sort data=eConsult out=eConsult_all (where=(mc_id ne 'ZZZ'));
1102    by modality mc_id fac_id avail_cd ;
1103  run;

NOTE: Host sort was used.
NOTE: There were 344597 observations read from the data set WORK.ECONSULT.
NOTE: The data set WORK.ECONSULT_ALL has 344597 observations and 23 variables.
NOTE: The PROCEDURE SORT used 0.27 CPU seconds.


1104  
1105  
1106  
1107   *---------------------------------------------------------------;
1108   * Section to Calculate Actual Seen
1109   * TRRS
1110   *---------------------------------------------------------------;
1111  
1112  
1113  
1114   data  trrs_seen;
1115      set ddoc.trrs ;
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
1116      where &strtdtr le req_dt le &enddtr  ;
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
1117      if req_tm ge '07:00:00'T and req_tm le '19:00:00'T;
1118  
1119  
1120      key_=req_no;
1121      req_ts = sum(86400*req_dt,req_tm) ;
1122  
1123  
37                                                         The SAS System                            12:51 Monday, November 28, 2016

1124      if location eq 'O' then seen_outp=1;
1125      else if location eq 'E' then seen_ed=1;
1126      else seen_inp=1;
1127  
1128  
1129  
1130    run;

NOTE: There were 55238 observations read from the data set DDOC.TRRS.
      WHERE (req_dt>=20772 and req_dt<=20785);
NOTE: The data set WORK.TRRS_SEEN has 48482 observations and 17 variables.
NOTE: The DATA statement used 0.03 CPU seconds.


1131  
1132  
NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
1133  
1134   %DOMCROLL(TRRS_SEEN, TRRS_SEEN)  ;
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to TRRS_SEEN
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 48482 observations read from the data set WORK.TRRS_SEEN.
NOTE: The data set WORK.FIXSCH has 48482 observations and 17 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 48482 observations read from the data set WORK.FIXSCH.
NOTE: SAS sort was used.
NOTE: The data set WORK.MAIN has 48482 observations and 17 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to TRRS_SEEN
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

INFO: The variable MC_ID on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
INFO: The variable F_CLASS on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
NOTE: There were 48482 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.TRRS_SEEN has 48482 observations and 17 variables.
NOTE: The DATA statement used 0.01 CPU seconds.
38                                                         The SAS System                            12:51 Monday, November 28, 2016



1135  
1136   proc freq data=trrs_seen;
1137     tables fac_id*modality*seen_outp /list missing;
1138     title "TRRS Actually Seen - All OP appts";
1139   run;

NOTE: There were 48482 observations read from the data set WORK.TRRS_SEEN.
NOTE: The PROCEDURE FREQ printed pages 25-28.
NOTE: The PROCEDURE FREQ used 0.02 CPU seconds.


1140  
1141   *- Now remove appointments that were not in Radiology -*;
1142   *- These appts are idendified using the Machine code  -*;
1143   *- in the MRMS data.                                  -*;
1144  
1145   proc sql ;
1146     create table trrs_seen_rad_only
1147         as
1148     select *
1149  
1150       from trrs_seen
1151  
1152      where input(req_no,8.) not in(select req_no  from ddoc.mrms_excl)
1153           ;
NOTE: Table WORK.TRRS_SEEN_RAD_ONLY created, with 46546 rows and 17 columns.

1154    quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.


1155  
1156   proc freq data=trrs_seen_rad_only;
1157     tables fac_id*modality*seen_outp /list missing;
1158     title "TRRS Actually Seen - Non Rad Appts Removed";
1159   run;

NOTE: There were 46546 observations read from the data set WORK.TRRS_SEEN_RAD_ONLY.
NOTE: The PROCEDURE FREQ printed pages 29-32.
NOTE: The PROCEDURE FREQ used 0.02 CPU seconds.


1160  
1161  
1162  
1163  
1164   proc sql;
1165     create table  ddoc.DATA_RETRO_AS as
1166     select modality
1167          , mc_id
1168          , fac_id
1169          , req_dt
1170          , req_tm
1171          , req_no
1172          , cpt4
1173          , mrn
39                                                         The SAS System                            12:51 Monday, November 28, 2016

1174          , location
1175          , seen_outp
1176          , seen_ed
1177          , seen_inp
1178  
1179  
1180     from  trrs_seen_rad_only
1181     where mc_id ne 'ZZZ'
1182     order by modality, mc_id, req_dt, fac_id;
NOTE: SAS threaded sort was used.
NOTE: Table DDOC.DATA_RETRO_AS created, with 46546 rows and 12 columns.

1183   quit;
NOTE: The PROCEDURE SQL used 0.06 CPU seconds.


1184  
1185  
1186  
1187  
1188   *- Now Summarize TRRS data -*;
1189  
1190   proc summary data= trrs_seen_rad_only (where=(mc_id ne 'ZZZ')) nway;
1191     class modality mc_id  req_dt ;
1192     var seen_: ;
1193     output out=as_mc  (drop=_:)  sum=;
1194   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 46546 observations read from the data set WORK.TRRS_SEEN_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.AS_MC has 788 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


1195  
1196   proc summary data= trrs_seen_rad_only (where=(mc_id ne 'ZZZ')) nway;
1197     class modality mc_id fac_id req_dt ;
1198     var seen_: ;
1199     output out=as_fac  (drop=_:)  sum=;
1200   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 46546 observations read from the data set WORK.TRRS_SEEN_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.AS_FAC has 1501 observations and 7 variables.
NOTE: The PROCEDURE SUMMARY used 0.04 CPU seconds.


1201  
1202   *- Set MC and Facility Level datasets together -*;
1203  
1204   data  actual_seen;
1205     set as_mc (in=in_mc)
1206         as_fac
1207         ;
1208  
1209     length fac_id $3;
40                                                         The SAS System                            12:51 Monday, November 28, 2016

1210  
1211     if in_mc then fac_id='ALL';
1212   run;

NOTE: There were 788 observations read from the data set WORK.AS_MC.
NOTE: There were 1501 observations read from the data set WORK.AS_FAC.
NOTE: The data set WORK.ACTUAL_SEEN has 2289 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1213  
1214  
1215   proc sort data=  actual_seen ;
1216      by modality mc_id fac_id req_dt ;
1217   run;

NOTE: There were 2289 observations read from the data set WORK.ACTUAL_SEEN.
NOTE: SAS sort was used.
NOTE: The data set WORK.ACTUAL_SEEN has 2289 observations and 7 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1218  
1219   proc print data=  actual_seen ;
1220      where mc_id='SFO';
1221      title 'Actual Seen';
1222   run;

NOTE: There were 130 observations read from the data set WORK.ACTUAL_SEEN.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed pages 33-35.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


1223  
1224  
1225  
1226  
1227  
1228  
1229  *----------------------------------------------------------------*;
1230  * MRG.RAD.ACCESS.DDOC.SASCODE(PARRSBKD)
1231  *----------------------------------------------------------------*;
1232  
1233  *-------------------------------------------------------*;
1234  *  Determine the following components of the metrics
1235  *  from booked appointments
1236  *  Retrospective : Kept & FTKA for Actual Offer
1237  *                : Booked for Pending
1238  *  Prospective   : Kept & FTKA for Supply
1239  *                : Mo Avg Booked for Expected Demand
1240  *-------------------------------------------------------*;
1241  
1242  * Booked appointments ;
1243  data  APPTS;
1244     set DDOC.APPTS1 (in=a)
1245         DDOC.APPTS2  (in=b);
1246     format appt_dt mmddyy10. appt_ts DATETIME25.;
41                                                         The SAS System                            12:51 Monday, November 28, 2016

1247     appt_ts = sum(86400*appt_dt,appt_tm) ;
1248     month=month(appt_dt);
1249     weekday=weekday(appt_dt);
1250     * create a key -- assume MRN+appt_ts is unique ;
1251     key_=cats(MRN,clinic,put(appt_ts,DATETIME25.));
1252  run;

INFO: Character variables have defaulted to a length of 200 at the places given by: (Line):(Column). Truncation can result.
      1251:4   key_
NOTE: There were 697634 observations read from the data set DDOC.APPTS1.
NOTE: There were 54871 observations read from the data set DDOC.APPTS2.
NOTE: The data set WORK.APPTS has 752505 observations and 20 variables.
NOTE: The DATA statement used 1.19 CPU seconds.


1253  
1254  *-------------------------------------------------------*;
1255  * Eliminate possible dups between FUTURE_APPTS and APPOINTMENTS ;
1256  *-------------------------------------------------------*;
1257  proc sort data= appts nodupkey;
1258     by key_;
1259  run;

NOTE: Host sort was used.
NOTE: 474 observations with duplicate key values were deleted.
NOTE: There were 752505 observations read from the data set WORK.APPTS.
NOTE: The data set WORK.APPTS has 752031 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.79 CPU seconds.


1260  
1261  
1262  proc sort data= appts;
1263     by fac_id CLINIC machine;
1264  run;

NOTE: Host sort was used.
NOTE: There were 752031 observations read from the data set WORK.APPTS.
NOTE: The data set WORK.APPTS has 752031 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.64 CPU seconds.


1265  
1266  *-------------------------------------------------------*;
1267  * Assign modality to appointments based on machine codes ;
1268  * Alternately can use standard appt types ;
1269  *-------------------------------------------------------*;
1270  data APPTS2;
1271     merge  APPTS (in=a) MACHINES (in=b);
1272     by fac_id CLINIC machine;
1273     if a;
1274     if act_cd in ('CARD','ED','INP','URG','PS60') then modality = clinic;
1275     else if act_cd in (&appt_tp_CT_std) then modality='CT';
SYMBOLGEN:  Macro variable APPT_TP_CT_STD resolves to 'CT10'                     , 'CT15'                     , 'CT20'              
                   , 'CT30'                     , 'CTDB'                     , 'CARD'                     , 'CTBX'                  
               , 'CT40'                     , 'CT45'      , 'CT60'      , 'CT90'      , 'CTCA'      , 'CTED'      , 'CTA'      , 
            'CTLS'      , 'CTPD'      , 'CTIP'      , 'PS60'
1276     else if act_cd in (&appt_tp_MRI_std) then modality='MRI';
42                                                         The SAS System                            12:51 Monday, November 28, 2016

SYMBOLGEN:  Macro variable APPT_TP_MRI_STD resolves to 'MR10'                     , 'MR20'                     , 'MR30'             
                    , 'MR40'                     , 'MR45'                     , 'MR50'                     , 'MR60'                 
                , 'MR75'                     , 'MR90'                     , 'MR12'                     , 'MR10'                     
            , 'MR50'                     , 'MR75'      , 'MRED'                     , 'MRBX'      , 'MRIP'      , 'MRSD'
1277     else if act_cd in (&appt_tp_ULS_std) then modality='ULS';
SYMBOLGEN:  Macro variable APPT_TP_ULS_STD resolves to 'US15'                      , 'US20'                      , 'US30'           
                       , 'US40'                      , 'US60'                      , 'US80'                      , 'US90'           
                       , 'U120'                      , 'USBR'                      , 'USER'                      , 'USBX'       , 
            'USAA'       , 'USPV'                      , 'USOB'       , 'USVA'       , 'ULOC'       , 'USED'       , 'USIP'
1278     else if act_cd in (&appt_tp_MAM_std) then modality='MAM';
SYMBOLGEN:  Macro variable APPT_TP_MAM_STD resolves to '7M'                     , '7M10'                     , '7MX'                
                 , 'WALK'
1279     else if not b then do;
1280       if act_cd in (&appt_tp_CT_exc) then modality='CT';
SYMBOLGEN:  Macro variable APPT_TP_CT_EXC resolves to 'CAR6'  ,'ED'                     , 'CCTA'  ,'CTH'                     , 
            'CE15'  ,'PREH'                     , 'CRYO'  ,'CTRF'                     , 'CT3'   ,'CTSE'                     , 
            'NC15'  ,'CT'      , 'NCT'   ,'INP'      , 'URG'   ,'CTMY'      , 'PEDI'  ,'C120'      , 'RFA'   ,'PS30'      , 'CMFR'  
            ,'CBCT'                     , 'TR2'   ,'TR3'                     , 'TR4'
1281       else if act_cd in (&appt_tp_MRI_exc) then modality='MRI';
SYMBOLGEN:  Macro variable APPT_TP_MRI_EXC resolves to 'AG45' ,'NC30'                     , 'BRST' ,'MRBR'                     , 
            'BX'   ,'MRBX'                     , 'CARD' ,'MRCA'                     , 'MRIB' ,'TR'                     , 'MRSC' 
            ,'MRDB'                     , 'PS60' ,'NC45'      , 'ARTH' ,'S105'
1282       else if act_cd in (&appt_tp_ULS_exc) then modality='ULS';
SYMBOLGEN:  Macro variable APPT_TP_ULS_EXC resolves to 'ABI ' ,'U40'   ,'USNL'                      , 'B60 ' ,'UOBC'  ,'USSE'       
                           , 'BL30' ,'V1'    ,'URG'                      , 'CART' ,'V2'    ,'UOB2'                      , 'GRAF' 
            ,'USC'   ,'VMAP'                      , 'U30'  ,'USDB'  ,'AAA'                      , 'HEPB' ,'PARA'  ,'EHT'            
                      , 'INPT' ,'NTU'   ,'NTUM'                      , 'TIPS' ,'ULS'   ,'USCR'
1283     end;
1284    if modality not in ('CT','MRI','ULS','MAM') then delete;
1285  run;

INFO: The variable DEPT_CD on data set WORK.APPTS will be overwritten by data set WORK.MACHINES.
NOTE: There were 752031 observations read from the data set WORK.APPTS.
NOTE: There were 495 observations read from the data set WORK.MACHINES.
NOTE: The data set WORK.APPTS2 has 751218 observations and 22 variables.
NOTE: The DATA statement used 0.55 CPU seconds.


1286  
1287  proc print data = APPTS2 (where = (modality = ''));
1288  run;

NOTE: No observations were selected from data set WORK.APPTS2.
NOTE: There were 0 observations read from the data set WORK.APPTS2.
      WHERE modality=' ';
NOTE: The PROCEDURE PRINT used 0.08 CPU seconds.


NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
1289  
1290  %DOMCROLL(APPTS2,APPTS3) ;
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to APPTS2
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

43                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: There were 751218 observations read from the data set WORK.APPTS2.
NOTE: The data set WORK.FIXSCH has 751218 observations and 22 variables.
NOTE: The DATA statement used 0.20 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: Host sort was used.
NOTE: There were 751218 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 751218 observations and 22 variables.
NOTE: The PROCEDURE SORT used 0.55 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to APPTS3
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 751218 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.APPTS3 has 751218 observations and 24 variables.
NOTE: The DATA statement used 0.31 CPU seconds.


1291  
1292  *-------------------------------------------------------*;
1293  * For appts found in FUTURE_APPT, assume patient showed if there is
1294  * a TRRS record for the modality & med center on the day ;
1295  *-------------------------------------------------------*;
1296  
1297  
1298  proc sort data=appts3 ;
1299    by modality mc_id fac_id mrn appt_dt appt_tm ;
1300  run;

NOTE: Host sort was used.
NOTE: There were 751218 observations read from the data set WORK.APPTS3.
NOTE: The data set WORK.APPTS3 has 751218 observations and 24 variables.
NOTE: The PROCEDURE SORT used 0.61 CPU seconds.


1301  
1302  /*delete multiple appointments in row for single mrn*/
1303  /* delete two hours or less windows*/
1304   data appts3;
1305     set appts3;
1306     format req_lag time8.;
1307     req_lag = lag(appt_tm);
1308     if modality = lag(modality) and
1309           fac_id = lag(fac_id) and
44                                                         The SAS System                            12:51 Monday, November 28, 2016

1310           mrn = lag(mrn) and
1311        appt_dt = lag(appt_dt)
1312        then do;
1313    if (appt_tm - req_lag) <= (2*3600) then delete;
1314     end;
1315     drop req_lag;
1316   run;

NOTE: There were 751218 observations read from the data set WORK.APPTS3.
NOTE: The data set WORK.APPTS3 has 727428 observations and 24 variables.
NOTE: The DATA statement used 0.26 CPU seconds.


1317  
1318  
1319  proc sort data=DDOC.trrs out=trrs;
1320    by modality mc_id fac_id mrn req_dt ;
1321  run;

NOTE: Host sort was used.
NOTE: There were 399975 observations read from the data set DDOC.TRRS.
NOTE: The data set WORK.TRRS has 399975 observations and 12 variables.
NOTE: The PROCEDURE SORT used 0.20 CPU seconds.


1322  
1323  data appts3_trrs;
1324     merge APPTS3 (in=a WHERE=(show_cd eq 'X'))
1325           trrs(in=b keep=modality mc_id fac_id mrn req_dt req_tm
1326                rename=(req_dt=appt_dt));
1327     by modality mc_id fac_id mrn appt_dt;
1328     if a;
1329     if b then show_cd='Y'; else show_cd='N';
1330  run;

NOTE: MERGE statement has more than one data set with repeats of BY values.
NOTE: There were 53194 observations read from the data set WORK.APPTS3.
      WHERE show_cd='X';
NOTE: There were 399975 observations read from the data set WORK.TRRS.
NOTE: The data set WORK.APPTS3_TRRS has 53297 observations and 25 variables.
NOTE: The DATA statement used 0.25 CPU seconds.


1331  
1332  data appts4;
1333    set APPTS3 (in=a WHERE=(show_cd ne 'X'))
1334        APPTS3_trrs;
1335  run;

NOTE: There were 674234 observations read from the data set WORK.APPTS3.
      WHERE show_cd not = 'X';
NOTE: There were 53297 observations read from the data set WORK.APPTS3_TRRS.
NOTE: The data set WORK.APPTS4 has 727531 observations and 25 variables.
NOTE: The DATA statement used 0.25 CPU seconds.


1336  
1337  
45                                                         The SAS System                            12:51 Monday, November 28, 2016

1338  proc sort data=appts4; by key_; run;

NOTE: Host sort was used.
NOTE: There were 727531 observations read from the data set WORK.APPTS4.
NOTE: The data set WORK.APPTS4 has 727531 observations and 25 variables.
NOTE: The PROCEDURE SORT used 0.69 CPU seconds.


1339  
1340  *-------------------------------------------------------*;
1341  * set counts for outpatient, ED and inpatient,
1342  * and kept and FTKA
1343  *-------------------------------------------------------*;
1344  *%EIO (ds=appts4,refts=appt_ts);
1345  
1346  data appts5 ;
1347    set appts4 ;
1348    if show_cd = 'Y' then kept_all=1;
1349    else ftka_all=1;
1350  run;

NOTE: There were 727531 observations read from the data set WORK.APPTS4.
NOTE: The data set WORK.APPTS5 has 727531 observations and 27 variables.
NOTE: The DATA statement used 0.20 CPU seconds.


1351  
1352  ***get only reqs in time range;
1353  data appts5;
1354    set appts5;
1355    if show_cd = 'Y' then do;
1356      if req_tm ge '07:00:00'T and req_tm le '19:00:00'T;
1357    end;
1358    else do;
1359      if appt_tm ge '07:00:00'T and appt_tm le '19:00:00'T;
1360    end;
1361  run;

NOTE: There were 727531 observations read from the data set WORK.APPTS5.
NOTE: The data set WORK.APPTS5 has 126823 observations and 27 variables.
NOTE: The DATA statement used 0.11 CPU seconds.


1362  
1363  ***save time range data;
1364  data ddoc.appts5;
1365    set appts5;
1366  run;

NOTE: There were 126823 observations read from the data set WORK.APPTS5.
NOTE: The data set DDOC.APPTS5 has 126823 observations and 27 variables.
NOTE: The DATA statement used 0.03 CPU seconds.


1367  
1368  **********************************************************************************;
1369  *****Begin section for splitting and summarizing booked and walkin appointments***;
1370  *****for restrospective DDOC components*******************************************;
46                                                         The SAS System                            12:51 Monday, November 28, 2016

1371  **********************************************************************************;
1372  *** 1. Split retrospective actual seen into booked and walkin sections.    *******;
1373  *** 2. Summarize booked appointments for DDOC                              *******;
1374  *** 3. Summarize walkin appointments for DDOC                              *******;
1375  **********************************************************************************;
1376  
1377  *******************************************************************************;
1378  **1. Split apart actual seen into two groups for mam modality: booked_seen and****;
1379  **walk-in actual seen. For ease, we will do this with all modalities, but******;
1380  **the field will only be used for Mammo for now.*******************************;
1381  *******************************************************************************;
1382  
1383  proc sort data = ddoc.data_retro_as
1384             out = data_retro_as(rename = (req_dt = appt_dt)) nodupkey;
1385    by req_no;
1386  run;

NOTE: There were 46546 observations read from the data set DDOC.DATA_RETRO_AS.
NOTE: SAS sort was used.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.DATA_RETRO_AS has 46546 observations and 12 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


1387  
1388  proc sort data = data_retro_as;
1389    by mrn fac_id modality appt_dt;
1390  run;

NOTE: There were 46546 observations read from the data set WORK.DATA_RETRO_AS.
NOTE: SAS sort was used.
NOTE: The data set WORK.DATA_RETRO_AS has 46546 observations and 12 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


1391  
1392  proc sort data = appts4
1393             out = appts_x(where=(show_cd = 'Y'));
1394    by mrn fac_id modality appt_dt appt_tm;
1395  run;

NOTE: Host sort was used.
NOTE: There were 727531 observations read from the data set WORK.APPTS4.
NOTE: The data set WORK.APPTS_X has 620957 observations and 25 variables.
NOTE: The PROCEDURE SORT used 0.66 CPU seconds.


1396  
1397  
1398  data as_booked
1399       as_walkin
1400    as_sameday;
1401    merge appts_x (in = a)
1402          data_retro_as (in = b);
1403    by mrn fac_id modality appt_dt;
1404    if b;
1405    if not a then do;
1406      b_w_s = 'W';
47                                                         The SAS System                            12:51 Monday, November 28, 2016

1407      output as_walkin;
1408    end;
1409    else if (book_dt < appt_dt) then do;
1410      b_w_s = 'B';
1411      output as_booked;
1412    end;
1413    else if book_dt >= appt_dt or book_dt =. then do;
1414      b_w_s = 'S';
1415   output as_sameday;
1416    end;
1417  run;

INFO: The variable MC_ID on data set WORK.APPTS_X will be overwritten by data set WORK.DATA_RETRO_AS.
INFO: The variable REQ_TM on data set WORK.APPTS_X will be overwritten by data set WORK.DATA_RETRO_AS.
NOTE: MERGE statement has more than one data set with repeats of BY values.
NOTE: There were 620957 observations read from the data set WORK.APPTS_X.
NOTE: There were 46546 observations read from the data set WORK.DATA_RETRO_AS.
NOTE: The data set WORK.AS_BOOKED has 26016 observations and 32 variables.
NOTE: The data set WORK.AS_WALKIN has 4121 observations and 32 variables.
NOTE: The data set WORK.AS_SAMEDAY has 16618 observations and 32 variables.
NOTE: The DATA statement used 0.27 CPU seconds.


1418  
1419  *****************************************;
1420  ***sometimes 2 or more appointments are *;
1421  ***made for one requisition seen. Booked*;
1422  ***appts trump walk-ins. Delete out     *;
1423  ***duplicates among the two datasets    *;
1424  *****************************************;
1425  
1426  data seen;
1427    set as_booked as_walkin as_sameday;
1428  run;

NOTE: There were 26016 observations read from the data set WORK.AS_BOOKED.
NOTE: There were 4121 observations read from the data set WORK.AS_WALKIN.
NOTE: There were 16618 observations read from the data set WORK.AS_SAMEDAY.
NOTE: The data set WORK.SEEN has 46755 observations and 32 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


1429  
1430  proc sort data = seen;
1431    by req_no b_w_s;
1432  run;

NOTE: There were 46755 observations read from the data set WORK.SEEN.
NOTE: SAS sort was used.
NOTE: The data set WORK.SEEN has 46755 observations and 32 variables.
NOTE: The PROCEDURE SORT used 0.04 CPU seconds.


1433  
1434  ***booked appts get priority over walkins***;
1435  proc sort data = seen nodupkey;
1436    by req_no;
1437  run;
48                                                         The SAS System                            12:51 Monday, November 28, 2016


NOTE: There were 46755 observations read from the data set WORK.SEEN.
NOTE: SAS sort was used.
NOTE: 209 observations with duplicate key values were deleted.
NOTE: The data set WORK.SEEN has 46546 observations and 32 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


1438  proc sort data = data_retro_as nodupkey;
1439    by req_no;
1440  run;

NOTE: There were 46546 observations read from the data set WORK.DATA_RETRO_AS.
NOTE: SAS sort was used.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.DATA_RETRO_AS has 46546 observations and 12 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


1441  
1442  data ddoc.as_bws;
1443    set seen;
1444  run;

NOTE: There were 46546 observations read from the data set WORK.SEEN.
NOTE: The data set DDOC.AS_BWS has 46546 observations and 32 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


1445  
1446  
1447  data as_booked(rename = (seen_outp=seen_outp_bkd seen_ed=seen_ed_bkd seen_inp=seen_inp_bkd))
1448       as_walkin(rename = (seen_outp=seen_outp_wlk seen_ed=seen_ed_wlk seen_inp=seen_inp_wlk));
1449    set seen;
1450    if b_w_s = 'B' then output as_booked;
1451    else if b_w_s in ('W','S') then output as_walkin;
1452  run;

NOTE: There were 46546 observations read from the data set WORK.SEEN.
NOTE: The data set WORK.AS_BOOKED has 26000 observations and 32 variables.
NOTE: The data set WORK.AS_WALKIN has 20546 observations and 32 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


1453  
1454  *****************************************************;
1455  *- 2. Now Summarize as_booked data                  *;
1456  *****************************************************;
1457  
1458   proc summary data= as_booked (where=(mc_id ne 'ZZZ')) nway;
1459     class modality mc_id appt_dt ;
1460     var seen_: ;
1461     output out=as_booked_mc  (drop=_:)  sum=;
1462   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 26000 observations read from the data set WORK.AS_BOOKED.
      WHERE mc_id not = 'ZZZ';
49                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The data set WORK.AS_BOOKED_MC has 726 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


1463  
1464   proc summary data= as_booked (where=(mc_id ne 'ZZZ')) nway;
1465     class modality mc_id fac_id appt_dt ;
1466     var seen_: ;
1467     output out=as_booked_fac  (drop=_:)  sum=;
1468   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 26000 observations read from the data set WORK.AS_BOOKED.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.AS_BOOKED_FAC has 1396 observations and 7 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


1469  
1470   *- Set MC and Facility Level datasets together -*;
1471  
1472   data  DDOC.actual_seen_booked;
1473     set as_booked_mc (in=in_mc)
1474         as_booked_fac
1475         ;
1476  
1477     length fac_id $3;
1478  
1479     if in_mc then fac_id='ALL';
1480   run;

NOTE: There were 726 observations read from the data set WORK.AS_BOOKED_MC.
NOTE: There were 1396 observations read from the data set WORK.AS_BOOKED_FAC.
NOTE: The data set DDOC.ACTUAL_SEEN_BOOKED has 2122 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1481  
1482  
1483   proc sort data=  DDOC.actual_seen_booked ;
1484      by modality mc_id fac_id appt_dt ;
1485   run;

NOTE: There were 2122 observations read from the data set DDOC.ACTUAL_SEEN_BOOKED.
NOTE: SAS sort was used.
NOTE: The data set DDOC.ACTUAL_SEEN_BOOKED has 2122 observations and 7 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1486  
1487   proc print data=  DDOC.actual_seen_booked ;
1488      where mc_id='SFO';
1489      title 'Actual Seen Booked';
1490   run;

NOTE: There were 118 observations read from the data set DDOC.ACTUAL_SEEN_BOOKED.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed pages 36-38.
50                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


1491  
1492  
1493  *****************************************************;
1494  *- 3. Now Summarize as_walkin data                  *;
1495  *****************************************************;
1496  
1497   proc summary data= as_walkin (where=(mc_id ne 'ZZZ')) nway;
1498     class modality mc_id appt_dt ;
1499     var seen_: ;
1500     output out=as_walkin_mc  (drop=_:)  sum=;
1501   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 20546 observations read from the data set WORK.AS_WALKIN.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.AS_WALKIN_MC has 777 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.02 CPU seconds.


1502  
1503   proc summary data= as_walkin (where=(mc_id ne 'ZZZ')) nway;
1504     class modality mc_id fac_id appt_dt ;
1505     var seen_: ;
1506     output out=as_walkin_fac  (drop=_:)  sum=;
1507   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 20546 observations read from the data set WORK.AS_WALKIN.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.AS_WALKIN_FAC has 1447 observations and 7 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


1508  
1509   *- Set MC and Facility Level datasets together -*;
1510  
1511   data  DDOC.actual_seen_walkin;
1512     set as_walkin_mc (in=in_mc)
1513         as_walkin_fac
1514         ;
1515  
1516     length fac_id $3;
1517  
1518     if in_mc then fac_id='ALL';
1519   run;

NOTE: There were 777 observations read from the data set WORK.AS_WALKIN_MC.
NOTE: There were 1447 observations read from the data set WORK.AS_WALKIN_FAC.
NOTE: The data set DDOC.ACTUAL_SEEN_WALKIN has 2224 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1520  
1521  
1522   proc sort data=  DDOC.actual_seen_walkin ;
51                                                         The SAS System                            12:51 Monday, November 28, 2016

1523      by modality mc_id fac_id appt_dt ;
1524   run;

NOTE: There were 2224 observations read from the data set DDOC.ACTUAL_SEEN_WALKIN.
NOTE: SAS sort was used.
NOTE: The data set DDOC.ACTUAL_SEEN_WALKIN has 2224 observations and 7 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1525  
1526   proc print data=  DDOC.actual_seen_walkin ;
1527      where mc_id='SFO';
1528      title 'Actual Seen Walkin';
1529   run;

NOTE: There were 125 observations read from the data set DDOC.ACTUAL_SEEN_WALKIN.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed pages 39-41.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


1530  
1531  data actual_seen_booked;
1532    set DDOC.actual_seen_booked;
1533  run;

NOTE: There were 2122 observations read from the data set DDOC.ACTUAL_SEEN_BOOKED.
NOTE: The data set WORK.ACTUAL_SEEN_BOOKED has 2122 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1534  
1535  data actual_seen_walkin;
1536    set DDOC.actual_seen_walkin;
1537  run;

NOTE: There were 2224 observations read from the data set DDOC.ACTUAL_SEEN_WALKIN.
NOTE: The data set WORK.ACTUAL_SEEN_WALKIN has 2224 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1538  
1539  ********************************************************************************;
1540  *****end section for splitting and summarizing booked and walkin appointments***;
1541  ********************************************************************************;
1542  
1543  
1544  *---------------------------------------------------------*;
1545  * Split booked appointments into different buckets of time
1546  *---------------------------------------------------------*;
1547  
1548  
1549  data appts_all   (drop=kept_ed ftka_all bkda_ed
1550                         kept_inp  bkda_inp)
1551       ddoc.data_retro_ao_bkd
1552  
1553       workin
1554       appts_prevyr_ftka ;
52                                                         The SAS System                            12:51 Monday, November 28, 2016

1555  
1556     set APPTS5;
1557  
1558        count=1;
1559  
1560        output appts_all;
1561  
1562  
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
1563        if &strtdtr le appt_dt le &enddtr
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
1564           then output  ddoc.data_retro_ao_bkd;
1565  
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
1566        if &strtdt le appt_dt le &enddt and bkng_mthd in ('E','F')
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
1567           then output workin;
1568  
1569  
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
1570     if &strt3mr le appt_dt le &end3mr and ftka_all eq 1
SYMBOLGEN:  Macro variable END3MR resolves to 20785
1571        then output appts_prevyr_ftka;
1572  run;

NOTE: There were 126823 observations read from the data set WORK.APPTS5.
NOTE: The data set WORK.APPTS_ALL has 126823 observations and 27 variables.
NOTE: The data set DDOC.DATA_RETRO_AO_BKD has 25657 observations and 28 variables.
NOTE: The data set WORK.WORKIN has 442 observations and 28 variables.
NOTE: The data set WORK.APPTS_PREVYR_FTKA has 39108 observations and 28 variables.
NOTE: The DATA statement used 0.05 CPU seconds.


1573  
1574  
1575  
1576  
1577  proc sort data=workin out= workin nodupkey;
1578    by fac_id clinic machine appt_dt appt_tm ;
1579  run;

NOTE: There were 442 observations read from the data set WORK.WORKIN.
NOTE: SAS sort was used.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.WORKIN has 442 observations and 28 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1580  
1581  
1582  *---------------------------------------------------------*;
1583  * RETRO_BOOKED - (A)Appt Kept & (B)FTKA for ACTUAL OFFER
1584  *  third component of ACTUAL OFFER is unbooked
1585  *---------------------------------------------------------*;
1586  proc summary data=ddoc.DATA_RETRO_AO_BKD nway;
1587    class modality mc_id  appt_dt ;
1588    var kept_all ftka_all ;
1589    output out=retro_booked_mc (drop=_:) sum=;
53                                                         The SAS System                            12:51 Monday, November 28, 2016

1590  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 25657 observations read from the data set DDOC.DATA_RETRO_AO_BKD.
NOTE: The data set WORK.RETRO_BOOKED_MC has 760 observations and 5 variables.
NOTE: The PROCEDURE SUMMARY used 0.02 CPU seconds.


1591  
1592  proc summary data=ddoc.DATA_RETRO_AO_BKD nway;
1593    class modality mc_id fac_id appt_dt ;
1594    var kept_all ftka_all ;
1595    output out=retro_booked_fac (drop=_:) sum=;
1596  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 25657 observations read from the data set DDOC.DATA_RETRO_AO_BKD.
NOTE: The data set WORK.RETRO_BOOKED_FAC has 1397 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


1597  
1598  data  RETRO_BOOKED;
1599     set retro_booked_mc (in=in_mc)
1600         retro_booked_fac
1601         ;
1602  
1603     length fac_id $3;
1604  
1605     if in_mc then fac_id='ALL';
1606   run;

NOTE: There were 760 observations read from the data set WORK.RETRO_BOOKED_MC.
NOTE: There were 1397 observations read from the data set WORK.RETRO_BOOKED_FAC.
NOTE: The data set WORK.RETRO_BOOKED has 2157 observations and 6 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1607  
1608  
1609  
1610  
1611  
1612  proc sort data= RETRO_BOOKED;
1613     by modality mc_id fac_id appt_dt ;
1614  run;

NOTE: There were 2157 observations read from the data set WORK.RETRO_BOOKED.
NOTE: SAS sort was used.
NOTE: The data set WORK.RETRO_BOOKED has 2157 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1615  
1616  
1617  
1618  *---------------------------------------------------------*;
1619  * RETRO - (C)Open Access for ACTUAL DEMAND
54                                                         The SAS System                            12:51 Monday, November 28, 2016

1620  *---------------------------------------------------------*;
1621  * Merge eConsult and PARRS, if match found use earlier of
1622  *  entry_dt and book_dt as init_dt
1623  * Count PARRS with no eConsult as open access
1624  *---------------------------------------------------------*;
1625  
1626  
1627  
1628  proc sort data=eConsult_all
1629          (keep=modality mc_id fac_id mrn appt_dt appt_tm entry_dt key_
1630                parrs_entry_ts clsd_dt  appt_needed   avail_cd
1631                bklt_stat_cd
1632           rename=(entry_dt=econ_entry_dt key_=IK)) nodupkey;
1633  
1634     by modality mc_id fac_id mrn appt_dt appt_tm;
1635  run;

NOTE: Host sort was used.
NOTE: 12416 observations with duplicate key values were deleted.
NOTE: There were 344597 observations read from the data set WORK.ECONSULT_ALL.
NOTE: The data set WORK.ECONSULT_ALL has 332181 observations and 13 variables.
NOTE: The PROCEDURE SORT used 0.25 CPU seconds.


1636  
1637  proc sort data=appts_all out=appts_all
1638          (keep=modality mc_id fac_id mrn appt_dt appt_tm book_dt act_cd
1639           rename=book_dt=parrs_book_dt) ;
1640  
1641     by modality mc_id fac_id mrn appt_dt appt_tm book_dt ;
1642  run;

NOTE: Host sort was used.
NOTE: There were 126823 observations read from the data set WORK.APPTS_ALL.
NOTE: The data set WORK.APPTS_ALL has 126823 observations and 8 variables.
NOTE: The PROCEDURE SORT used 0.13 CPU seconds.


1643  
1644  
1645  proc sort data=appts_all nodupkey;
1646     by modality mc_id fac_id mrn appt_dt appt_tm ;
1647  run;

NOTE: Host sort was used.
NOTE: 56 observations with duplicate key values were deleted.
NOTE: There were 126823 observations read from the data set WORK.APPTS_ALL.
NOTE: The data set WORK.APPTS_ALL has 126767 observations and 8 variables.
NOTE: The PROCEDURE SORT used 0.09 CPU seconds.


1648  
1649  data open_acc_eConsult;
1650    merge eConsult_all(in=a)
1651          appts_all(in=b);
1652  
1653    by modality mc_id fac_id mrn appt_dt appt_tm;
1654    format init_dt mmddyy10.;
55                                                         The SAS System                            12:51 Monday, November 28, 2016

1655    length source $ 10;
1656  
1657    source='eConsult';
1658    econ_bkda_all=0;
1659    open_access=0;
1660    econ_bkda_forecast=0;
1661  
1662    if a then do;
1663      init_dt = econ_entry_dt ;
1664      if b and econ_entry_dt gt parrs_book_dt then do;
1665        source='ECON-PARRS';
1666        open_access=1;
1667        init_dt = parrs_book_dt ;
1668      end;
1669      econ_bkda_all=1;
1670    end;
1671    else do;
1672      init_dt = parrs_book_dt ;
1673      open_access=1;
1674      source='PARRS-OA';
1675    end;
1676  
1677  run;

NOTE: There were 332181 observations read from the data set WORK.ECONSULT_ALL.
NOTE: There were 126767 observations read from the data set WORK.APPTS_ALL.
NOTE: The data set WORK.OPEN_ACC_ECONSULT has 408424 observations and 20 variables.
NOTE: The DATA statement used 0.20 CPU seconds.


1678  
1679  
1680  PROC FREQ DATA = open_acc_eConsult;
1681    title 'SOURCE FREQ';
1682    TABLES SOURCE ECON_BKDA_ALL OPEN_ACCESS;
1683  RUN;

NOTE: There were 408424 observations read from the data set WORK.OPEN_ACC_ECONSULT.
NOTE: The PROCEDURE FREQ printed page 42.
NOTE: The PROCEDURE FREQ used 0.07 CPU seconds.


1684  
1685  
1686  
1687  
1688  * throw out duplicate appointments per IK;
1689  proc sort data=open_acc_eConsult(where=(open_access=0))
1690             out=open_acc_eConsult_UNIQUE_IK;
1691  
1692  
1693    by ik descending PARRS_ENTRY_TS;
1694  run;

NOTE: Host sort was used.
NOTE: There were 331187 observations read from the data set WORK.OPEN_ACC_ECONSULT.
      WHERE open_access=0;
NOTE: The data set WORK.OPEN_ACC_ECONSULT_UNIQUE_IK has 331187 observations and 20 variables.
56                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The PROCEDURE SORT used 0.30 CPU seconds.


1695  
1696  
1697  proc sort data=open_acc_eConsult_UNIQUE_IK nodupkey;
1698    by ik;
1699  run;

NOTE: Host sort was used.
NOTE: 50337 observations with duplicate key values were deleted.
NOTE: There were 331187 observations read from the data set WORK.OPEN_ACC_ECONSULT_UNIQUE_IK.
NOTE: The data set WORK.OPEN_ACC_ECONSULT_UNIQUE_IK has 280850 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.20 CPU seconds.


1700  
1701  *- Create Open Access/eConsult and Pending, and pending chart tables -*;
1702  
1703  data open_acc_eConsult pending ;
1704    set open_acc_eConsult_UNIQUE_IK
1705        open_acc_eConsult(where=(open_access=1))
1706        ;
1707  
1708  
1709        output open_acc_eConsult;
1710  
1711        if appt_dt gt &strt3mr or appt_dt =. then output pending;
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
1712  
1713  
1714  
1715  
1716  run;

NOTE: There were 280850 observations read from the data set WORK.OPEN_ACC_ECONSULT_UNIQUE_IK.
NOTE: There were 77237 observations read from the data set WORK.OPEN_ACC_ECONSULT.
      WHERE open_access=1;
NOTE: The data set WORK.OPEN_ACC_ECONSULT has 358087 observations and 20 variables.
NOTE: The data set WORK.PENDING has 313053 observations and 20 variables.
NOTE: The DATA statement used 0.11 CPU seconds.


1717  
1718  proc sort data= retro_dates ;
1719     by modality mc_id fac_id date ;
1720  run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1721  
1722  proc sort data=open_acc_eConsult ;
1723     by modality mc_id fac_id init_dt appt_dt;
1724  run;

NOTE: Host sort was used.
57                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: There were 358087 observations read from the data set WORK.OPEN_ACC_ECONSULT.
NOTE: The data set WORK.OPEN_ACC_ECONSULT has 358087 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.26 CPU seconds.


1725  
1726  
1727  data open_acc_eConsult;
1728    merge  retro_dates (in=a rename=(date=init_dt))
1729          open_acc_eConsult (in=b);
1730     by modality mc_id fac_id init_dt ;
1731     if a;
1732  run;

NOTE: There were 3584 observations read from the data set WORK.RETRO_DATES.
NOTE: There were 358087 observations read from the data set WORK.OPEN_ACC_ECONSULT.
NOTE: The data set WORK.OPEN_ACC_ECONSULT has 48323 observations and 21 variables.
NOTE: The DATA statement used 0.13 CPU seconds.


1733  
1734  proc sql;
1735    create table  ddoc.DATA_RETRO_AD as
1736    select modality
1737         , mc_id
1738      , act_cd
1739         , fac_id
1740         , init_dt
1741         , mrn
1742         , IK
1743         , econ_entry_dt
1744         , parrs_book_dt
1745         , appt_dt, appt_tm
1746         , source
1747         , econ_bkda_all, open_access, econ_bkda_forecast
1748      from open_acc_eConsult
1749      ;
NOTE: Table DDOC.DATA_RETRO_AD created, with 48323 rows and 15 columns.

1750   quit;
NOTE: The PROCEDURE SQL used 0.01 CPU seconds.


1751  
1752  
1753  ********************************************************************;
1754  ** MODIFICATION ON ACTUAL DEMAND FOR MAMMOGRAPHY *******************;
1755  ********************************************************************;
1756  * CURRENTLY, ONLY MAM DEMAND IS AUGMENTED FOR BOOKED AND WALKIN    *;
1757  * STUDIES. THE ABOVE PROCESS CAPTURES ALL SCHEDULED AND MOST       *;
1758  * SAMEDAY APPTS. HOWEVER, SOME WALKIN WORK FLOWS MAY NOT SCHEDULE  *;
1759  * THE APPOINTMENT. IN OTHER WORDS NO RECORD IN PARRS. THESE NEED TO*;
1760  * BE ADDED. VOLUMES MUST ALSO BE SEPARATED FOR THE REPORT.         *;
1761  ********************************************************************;
1762  * 1. GET WALKIN SEEN MAM DATA THAT MAY NOT BE IN PARRS SCHEDULE    *;
1763  * 2. MERGE 1 WITH DDOC.DATA_RETRO_AD FOR MAM ONLY                  *;
1764  * 3. CREATE BOOKED AND WALKIN MARKER FOR PARTITION AND SUMMATION   *;
1765  ********************************************************************;
58                                                         The SAS System                            12:51 Monday, November 28, 2016

1766  
1767  PROC SORT DATA = DDOC.DATA_RETRO_AD
1768             OUT = DATA_RETRO_AD NODUPKEY;
1769  BY MC_ID FAC_ID MODALITY MRN APPT_DT;
1770  RUN;

NOTE: There were 48323 observations read from the data set DDOC.DATA_RETRO_AD.
NOTE: SAS sort was used.
NOTE: 2119 observations with duplicate key values were deleted.
NOTE: The data set WORK.DATA_RETRO_AD has 46204 observations and 15 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


1771  
1772  PROC SORT DATA = AS_WALKIN
1773            OUT = MAM_SEEN_WS(WHERE=(MODALITY='MAM')) NODUPKEY;
1774  BY MC_ID FAC_ID MODALITY MRN APPT_DT;
1775  RUN;

NOTE: There were 20546 observations read from the data set WORK.AS_WALKIN.
NOTE: SAS sort was used.
NOTE: 166 observations with duplicate key values were deleted.
NOTE: The data set WORK.MAM_SEEN_WS has 3862 observations and 32 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


1776  
1777  DATA DDOC.DATA_RETRO_AD;
1778    MERGE DATA_RETRO_AD(IN=A)
1779          MAM_SEEN_WS(IN=B);
1780    BY MC_ID FAC_ID MODALITY MRN APPT_DT;
1781    IF A;
1782    IF B OR PARRS_BOOK_DT >= APPT_DT THEN AD_WLK = 1;
1783    ELSE IF PARRS_BOOK_DT < APPT_DT THEN AD_BKD = 1;
1784  RUN;

INFO: The variable ACT_CD on data set WORK.DATA_RETRO_AD will be overwritten by data set WORK.MAM_SEEN_WS.
INFO: The variable APPT_TM on data set WORK.DATA_RETRO_AD will be overwritten by data set WORK.MAM_SEEN_WS.
NOTE: There were 46204 observations read from the data set WORK.DATA_RETRO_AD.
NOTE: There were 3862 observations read from the data set WORK.MAM_SEEN_WS.
NOTE: The data set DDOC.DATA_RETRO_AD has 46204 observations and 42 variables.
NOTE: The DATA statement used 0.03 CPU seconds.


1785  
1786  proc summary data= ddoc.DATA_RETRO_AD nway;
1787    class modality mc_id init_dt ;
1788    var econ_bkda_all econ_bkda_forecast open_access AD_BKD AD_WLK;
1789    output out=retro_openacc_econ_mc(drop=_:) sum=;
1790  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 46204 observations read from the data set DDOC.DATA_RETRO_AD.
NOTE: The data set WORK.RETRO_OPENACC_ECON_MC has 840 observations and 8 variables.
NOTE: The PROCEDURE SUMMARY used 0.04 CPU seconds.


1791  
59                                                         The SAS System                            12:51 Monday, November 28, 2016

1792  proc summary data= ddoc.DATA_RETRO_AD nway;
1793    class modality mc_id fac_id init_dt ;
1794    var econ_bkda_all econ_bkda_forecast open_access AD_BKD AD_WLK;
1795    output out=retro_openacc_econ_fac (drop=_:) sum=;
1796  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 46204 observations read from the data set DDOC.DATA_RETRO_AD.
NOTE: The data set WORK.RETRO_OPENACC_ECON_FAC has 1843 observations and 9 variables.
NOTE: The PROCEDURE SUMMARY used 0.04 CPU seconds.


1797  
1798  
1799  
1800  data  retro_openacc_econ;
1801     set retro_openacc_econ_mc (in=in_mc)
1802         retro_openacc_econ_fac (where =(fac_id ~= 'ALL'))
1803         ;
1804  
1805     length fac_id $3;
1806  
1807     if in_mc then fac_id='ALL';
1808   run;

NOTE: There were 840 observations read from the data set WORK.RETRO_OPENACC_ECON_MC.
NOTE: There were 1783 observations read from the data set WORK.RETRO_OPENACC_ECON_FAC.
      WHERE fac_id not = 'ALL';
NOTE: The data set WORK.RETRO_OPENACC_ECON has 2623 observations and 9 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1809  
1810  
1811  
1812  
1813  proc sort data=  retro_openacc_econ;
1814     by modality mc_id fac_id init_dt ;
1815  run;

NOTE: There were 2623 observations read from the data set WORK.RETRO_OPENACC_ECON.
NOTE: SAS sort was used.
NOTE: The data set WORK.RETRO_OPENACC_ECON has 2623 observations and 9 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


1816  
1817  
1818  proc print data=retro_openacc_econ;
1819    where mc_id='SFO';
1820    title "AD-retro_openacc_econ";
1821  run;

NOTE: There were 112 observations read from the data set WORK.RETRO_OPENACC_ECON.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed pages 43-45.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.

60                                                         The SAS System                            12:51 Monday, November 28, 2016


1822  
1823  
1824  
1825  *---------------------------------------------------------*;
1826  * PENDING - (C)open access of PENDING
1827  *---------------------------------------------------------*;
1828  * Take data created above from merge of eConsult and PARRS
1829  * Count PARRS with no eConsult as open access
1830  * 12/31/2014 - Separate Pending appointments into
1831  *             current Pending and total Pending
1832  *---------------------------------------------------------*;
1833  *---------------------------------------------------------*;
1834  
1835  
1836  * Consider referrals in the same appointment as one request ;
1837  
1838  
1839  proc sql;
1840    create table data_retro_pend as
1841    select a.modality
1842         , a.mc_id
1843         , a.fac_id
1844         , a.date as retro_dt
1845         , b.mrn
1846         , b.IK
1847         , b.econ_entry_dt
1848         , b.parrs_book_dt
1849         , b.appt_dt
1850         , b.appt_tm
1851         , 1 as pending
1852         , b.open_access
1853         , b.avail_cd
1854         , b.clsd_dt
1855     from  retro_chart_dates as a
1856     join pending as b
1857     on  a.modality = b.modality
1858     and a.mc_id   = b.mc_id
1859     and a.fac_id = b.fac_id
1860     and (a.date < b.appt_dt or b.appt_dt = .)    /* not yet seen */
1861     and (a.date < b.clsd_dt or b.clsd_dt = .)    /* not closed */
1862     and (
1863           (b.econ_entry_dt <= b.parrs_book_dt and
1864            b.parrs_book_dt <= &strtdt and
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
1865            b.open_access=0
1866           ) or
1867           (
1868            b.parrs_book_dt <= a.date  and
1869            b.open_access=1
1870           ) or
1871           (b.parrs_book_dt = . and
1872             b.open_access=0
1873             and b.bklt_stat_cd = ''        /* appt needed and not in booklist status*/
1874  
1875           )
1876         )
1877     and a.date >= b.econ_entry_dt      /* initiated by end of the day */
61                                                         The SAS System                            12:51 Monday, November 28, 2016

1878      order by 1,2,3,4,5
1879     ;
NOTE: SAS threaded sort was used.
NOTE: Table WORK.DATA_RETRO_PEND created, with 2553303 rows and 14 columns.

1880   quit ;
NOTE: The PROCEDURE SQL used 6.62 CPU seconds.


1881  
1882  
1883   *********************************************************************************************;
1884   *** Separate Pending volume into current pending and total pending based on eConsult future *;
1885   *** follow-up question                                                                      *;
1886   *********************************************************************************************;
1887  
1888  *** get the distinct referrals list***;
1889  proc sort data = data_retro_pend nodupkey out = pend_ik(keep=ik) nodupkey;
1890    by ik;
1891  run;

NOTE: Host sort was used.
NOTE: 2360943 observations with duplicate key values were deleted.
NOTE: There were 2553303 observations read from the data set WORK.DATA_RETRO_PEND.
NOTE: The data set WORK.PEND_IK has 192360 observations and 1 variables.
NOTE: The PROCEDURE SORT used 1.22 CPU seconds.


1892  
1893  
1894  *** Go to eCon note table and identify future follow-ups ***;
1895     PROC SQL;
1896       CONNECT TO DB2 (SSID=DSN2);
1897       CREATE TABLE NOTES AS
1898       SELECT * FROM CONNECTION TO DB2
1899  
1900        (SELECT DISTINCT A.SPCLTYAREA_RQST_IK IK,
1901                         case
1902    when upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%PATIENT PREFERENCE)"><ANSWER TEXT="YES"%'
1903      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%PATIENT PREFERENCE)."><ANSWER TEXT="YES"%'
1904      or upper(A.RQST_NOTE_TX) LIKE '%"CHECK THIS BOX%PATIENT PREFERENCE)."><ANSWER TEXT="&LT;/B>YES%'
1905      or upper(A.RQST_NOTE_TX) like '%"CHECK THE %YES% BOX%FUTURE/FOLLOW-UP APPOINTMENT."><ANSWER TEXT="YES"%'
1906      or upper(A.RQST_NOTE_TX) LIKE '%TEXT="PLEASE SELECT%SELECTION."><ANSWER TEXT="FUTURE APPT NEEDED%'
1907      or upper(A.RQST_NOTE_TX) LIKE '%IS THIS REQUEST%PATIENT PREFERENCE)"><ANSWER TEXT="YES%'
1908      or upper(A.RQST_NOTE_TX) LIKE '%CHECK THIS BOX%(DO NOT DIRECT BOOK SEDATION)"><ANSWER TEXT="YES%'
1909      or upper(A.RQST_NOTE_TX) like '%"PLEASE INDICATE%PATIENT PREFERENCE; ENTRY REQUIRED)"><ANSWER TEXT="YES"%'
1910      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%FUTURE/FOLLOW-UP APPOINTMENT?"><ANSWER TEXT="YES"%'
1911      or upper(A.RQST_NOTE_TX) like '%"SHOULD THIS PATIENT%FUTURE/FOLLOW-UP APPOINTMENT?"><ANSWER TEXT="YES"%'
1912      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%FUTURE/FOLLOW-UP APPOINTMENT"><ANSWER TEXT="YES"%'
1913      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%PATIENT PREFERENCE) OR IF STANDING ORDER, PLEASE NOTE:"><ANSWER
1913! TEXT="YES"%'
1914      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%CLINICAL INDICATIONS)"><ANSWER TEXT="YES"%'
1915      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%CLINICAL REASONS OR PATIENT PREFERENCE):"><ANSWER TEXT="YES"%'
1916      or upper(A.RQST_NOTE_TX) like '%"CHECK THE %YES% BOX%FUTURE/FOLLOW UP APPOINTMENT."><ANSWER TEXT="YES"%'
1917      or upper(A.RQST_NOTE_TX) like '%"SHOULD THE PATIENT%OR IF STANDING ORDER, PLEASE NOTE:"><ANSWER TEXT="YES"%'
1918      or upper(A.RQST_NOTE_TX) like '%"SHOULD THE PATIENT%PATIENT PREFERENCE)"><ANSWER TEXT="YES"%'
1919      or upper(A.RQST_NOTE_TX) like '%"SHOULD THE PATIENT%PATIENT PREFERENCE)?"><ANSWER TEXT="YES"%'
1920      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%> 10 DAYS FROM TODAY:"><ANSWER TEXT="YES"%'
62                                                         The SAS System                            12:51 Monday, November 28, 2016

1921      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%CLINICAL INDICATIONS)."><ANSWER TEXT="YES"%'
1922      or upper(A.RQST_NOTE_TX) like '%"CHECK THIS BOX%FUTURE/FOLLOW-UP APPOINTMENT:"><ANSWER TEXT="YES"%'
1923      or upper(A.RQST_NOTE_TX) like '%PLEASE INDICATE PRIORITY%><ANSWER TEXT="&LT;B>FUTURE/FOLLOWUP%'
1924      or upper(A.RQST_NOTE_TX) like '%PLEASE INDICATE PRIORITY%><ANSWER TEXT="&LT;B>&LT;BASEFONT SIZE = 2>FUTURE/FOLLOWUP%'
1925    then 0
1926    else 1
1927    end as curr_pend
1928           FROM ECON.VECNRQN_RQST_NOTE A
1929          INNER JOIN ECON.VECNRQH_RQST_HIST B
1930             ON A.SPCLTYAREA_RQST_IK = B.SPCLTYAREA_RQST_IK
1931          WHERE A.RQST_NOTE_TYP_CD='RQ'
1932         ) AS NOTES
1933          INNER JOIN PEND_IK
1934       ON NOTES.IK = PEND_IK.IK;
WARNING: Variable IK already exists on file WORK.NOTES.
NOTE: Table WORK.NOTES created, with 190609 rows and 2 columns.

1935     DISCONNECT FROM DB2;
1936   QUIT;
NOTE: The PROCEDURE SQL used 182.42 CPU seconds.


1937  
1938  proc sort data = notes nodupkey;
1939    by ik;
1940  run;

NOTE: Host sort was used.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 190609 observations read from the data set WORK.NOTES.
NOTE: The data set WORK.NOTES has 190609 observations and 2 variables.
NOTE: The PROCEDURE SORT used 0.10 CPU seconds.


1941  
1942  proc sort data = data_retro_pend;
1943    by ik;
1944  run;

NOTE: Host sort was used.
NOTE: There were 2553303 observations read from the data set WORK.DATA_RETRO_PEND.
NOTE: The data set WORK.DATA_RETRO_PEND has 2553303 observations and 14 variables.
NOTE: The PROCEDURE SORT used 1.49 CPU seconds.


1945  
1946  data ddoc.data_retro_pend;
1947    merge notes (in=a)
1948          data_retro_pend (in=b);
1949    by ik;
1950    if b;
1951    if curr_pend = . then curr_pend = 0;
1952    if appt_dt - retro_dt <= 12 then curr_pend = 1;   *<- 12 is for 10 buisness days and the weekend;
1953  run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      131077 at 1952:14   
63                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: There were 190609 observations read from the data set WORK.NOTES.
NOTE: There were 2553303 observations read from the data set WORK.DATA_RETRO_PEND.
NOTE: The data set DDOC.DATA_RETRO_PEND has 2553303 observations and 15 variables.
NOTE: The DATA statement used 0.70 CPU seconds.


1954  
1955  proc sort data = ddoc.data_retro_pend;
1956    by modality mc_id fac_id retro_dt mrn ik appt_dt appt_tm clsd_dt;
1957  run;

NOTE: Host sort was used.
NOTE: There were 2553303 observations read from the data set DDOC.DATA_RETRO_PEND.
NOTE: The data set DDOC.DATA_RETRO_PEND has 2553303 observations and 15 variables.
NOTE: The PROCEDURE SORT used 1.67 CPU seconds.


1958  
1959  
1960  proc summary data= ddoc.DATA_RETRO_PEND nway;
1961    class modality mc_id retro_dt ;
1962    var pending curr_pend;
1963    output out=pending_mc (drop=_:) sum=;
1964  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 2553303 observations read from the data set DDOC.DATA_RETRO_PEND.
NOTE: The data set WORK.PENDING_MC has 5460 observations and 5 variables.
NOTE: The PROCEDURE SUMMARY used 0.84 CPU seconds.


1965  
1966  proc summary data= ddoc.DATA_RETRO_PEND nway;
1967    class modality mc_id fac_id retro_dt ;
1968    var pending curr_pend;
1969    output out=pending_fac(drop=_:) sum=;
1970  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 2553303 observations read from the data set DDOC.DATA_RETRO_PEND.
NOTE: The data set WORK.PENDING_FAC has 11641 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 1.03 CPU seconds.


1971  
1972  
1973  
1974  data  pending;
1975     set pending_mc (in=in_mc)
1976         pending_fac
1977         ;
1978  
1979     length fac_id $3;
1980  
1981     if in_mc then fac_id='ALL';
1982   run;

NOTE: There were 5460 observations read from the data set WORK.PENDING_MC.
64                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: There were 11641 observations read from the data set WORK.PENDING_FAC.
NOTE: The data set WORK.PENDING has 17101 observations and 6 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


1983  
1984   proc sort data= pending;
1985     by modality mc_id fac_id retro_dt;
1986   run;

NOTE: There were 17101 observations read from the data set WORK.PENDING.
NOTE: SAS sort was used.
NOTE: The data set WORK.PENDING has 17101 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.01 CPU seconds.


1987  
1988  
1989   proc print data=pending;
1990     where mc_id='SFO';
1991     title 'Pending';
1992   run;

NOTE: There were 728 observations read from the data set WORK.PENDING.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed pages 46-58.
NOTE: The PROCEDURE PRINT used 0.01 CPU seconds.


1993  
1994  
1995  
1996  
1997  
1998  *---------------------------------------------------------*;
1999  * Calculate Expected Demand
2000  *---------------------------------------------------------*;
2001  * Expected demand is defined as the average of the Actual
2002  * seen, ie appts from TRRS summed with the FTKAS that are
2003  * obtained from PARRS plus a 10% buffer.  Remove holidays
2004  * from average of actual seen.
2005  * 07-19-2011  exclude weekends to avoid artificially low
2006  *             average daily demand
2007  * 05-09-2013  repeat process of calculating expected demand
2008  *             for booked appts and walk-in appts.
2009  *---------------------------------------------------------*;
2010  
2011  
2012  *- First Create list of holidays to exclude in calculation of Average -*;
2013  
2014  Proc SQL noprint;
2015      select "'" || put(calendar_date,date9.) || "'d"
2016   into :holiday_list separated by ","
2017   FROM ddoc.clin_cal
2018  
2019   where nc_hldy_in_cd='Y'
2020   ;
2021  quit;
65                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


2022  
SYMBOLGEN:  Macro variable HOLIDAY_LIST resolves to '05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd
2023  *- Add Martin Luther King Holiday into Holiday List -*;
2024  *- FIX THIS Later.                                  -*;
2025  
2026  
2027  %let holiday_list= &holiday_list ,'21JAN2013'd;
2028  
2029  %put &holiday_list;
SYMBOLGEN:  Macro variable HOLIDAY_LIST resolves to '05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd ,'21JAN2013'd
'05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd ,'21JAN2013'd
2030  
2031  *- Select registered appts from TRRS where the appt date -*;
2032  *- fell in the previous three months and was not a holiday -*;
2033  
2034   data trrs_prevyr;
2035  
2036     set ddoc.trrs ;
2037  
SYMBOLGEN:  Macro variable STRT3MR resolves to 20695
2038     where &strt3mr le req_dt le &end3mr
SYMBOLGEN:  Macro variable END3MR resolves to 20785
2039       and req_dt not in(&holiday_list);
SYMBOLGEN:  Macro variable HOLIDAY_LIST resolves to '05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd ,'21JAN2013'd
2040  
2041     key_=req_no;
2042     req_ts = sum(86400*req_dt,req_tm) ;
2043  
2044     if location eq 'O' then reg_outp=1;
2045     else if location eq 'E' then reg_ed=1;
2046     else reg_inp=1;
2047     month=month(req_dt);
2048     weekday=weekday(req_dt);
2049     count=1;
2050   run;

NOTE: There were 397762 observations read from the data set DDOC.TRRS.
      WHERE ((req_dt>=20695 and req_dt<'05SEP2016'D) or (req_dt>'05SEP2016'D and req_dt<'24NOV2016'D) or (req_dt>'24NOV2016'D and 
      req_dt<=20785));
NOTE: The data set WORK.TRRS_PREVYR has 397762 observations and 20 variables.
NOTE: The DATA statement used 0.14 CPU seconds.


2051  
2052   *- Create a count of distinct days included in 3 month ave by weekday -*;
2053  
2054   proc sort data=trrs_prevyr nodupkey out=trrs_prevyr_dates
2055            (keep=req_dt weekday count);
2056  
2057     by req_dt;
2058   run;

NOTE: Host sort was used.
NOTE: 397673 observations with duplicate key values were deleted.
NOTE: There were 397762 observations read from the data set WORK.TRRS_PREVYR.
66                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The data set WORK.TRRS_PREVYR_DATES has 89 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.19 CPU seconds.


2059  
2060  
2061  
2062  
2063  
2064  
2065   *- Join Medical Center -*;
NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
2066  
2067   %DOMCROLL(TRRS_PREVYR, TRRS_PREVYR) ;
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to TRRS_PREVYR
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 397762 observations read from the data set WORK.TRRS_PREVYR.
NOTE: The data set WORK.FIXSCH has 397762 observations and 20 variables.
NOTE: The DATA statement used 0.06 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: Host sort was used.
NOTE: There were 397762 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 397762 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.22 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to TRRS_PREVYR
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

INFO: The variable MC_ID on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
INFO: The variable F_CLASS on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
NOTE: There were 397762 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.TRRS_PREVYR has 397762 observations and 20 variables.
NOTE: The DATA statement used 0.11 CPU seconds.


2068  
2069   *- Summarize number of registrations for OP, IP and ED -*;
2070   *- by weekday over previous three months.              -*;
67                                                         The SAS System                            12:51 Monday, November 28, 2016

2071  
2072  
2073  
2074    proc sql ;
2075      create table trrs_prevyr_rad_only
2076          as
2077  
2078      select *
2079  
2080        from trrs_prevyr
2081  
2082       where input(req_no,8.) not in(select req_no  from ddoc.mrms_excl)
2083            ;
NOTE: Table WORK.TRRS_PREVYR_RAD_ONLY created, with 384003 rows and 20 columns.

2084     quit;
NOTE: The PROCEDURE SQL used 0.25 CPU seconds.


2085  
2086  
2087  
2088  
2089   proc summary data= trrs_prevyr_rad_only (where=(mc_id ne 'ZZZ')) nway;
2090     class modality mc_id  weekday;
2091     var reg_outp reg_ed reg_inp;
2092     output out=expected_demand_as_mc (drop=_:)
2093            sum(reg_outp)= weekday_reg_outp_sum
2094            sum(reg_ed)  = weekday_reg_ed_sum
2095            sum(reg_inp) = weekday_reg_inp_sum;
2096   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 384003 observations read from the data set WORK.TRRS_PREVYR_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.EXPECTED_DEMAND_AS_MC has 407 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.17 CPU seconds.


2097  
2098   proc summary data= trrs_prevyr_rad_only (where=(mc_id ne 'ZZZ')) nway;
2099      class modality mc_id fac_id weekday;
2100      var reg_outp reg_ed reg_inp;
2101  
2102     output out=expected_demand_as_fac (drop=_:)
2103            sum(reg_outp)= weekday_reg_outp_sum
2104            sum(reg_ed)  = weekday_reg_ed_sum
2105            sum(reg_inp) = weekday_reg_inp_sum;
2106   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 384003 observations read from the data set WORK.TRRS_PREVYR_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.EXPECTED_DEMAND_AS_FAC has 823 observations and 7 variables.
NOTE: The PROCEDURE SUMMARY used 0.21 CPU seconds.


2107  
68                                                         The SAS System                            12:51 Monday, November 28, 2016

2108  
2109   *- Now calculate number of distinct days were included in -*;
2110   *- 3 month period by day of the week.                     -*;
2111  
2112    proc summary data= trrs_prevyr_dates  nway;
2113      class weekday;
2114      var count;
2115      output out=count_weekdays (drop=_:)
2116             sum(count)= count_days;
2117  
2118    run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 89 observations read from the data set WORK.TRRS_PREVYR_DATES.
NOTE: The data set WORK.COUNT_WEEKDAYS has 7 observations and 2 variables.
NOTE: The PROCEDURE SUMMARY used 0.01 CPU seconds.


2119  
2120  
2121  
2122  
2123  
2124   *- Set results aggregated to the MC and Facility together -*;
2125   *- expected_demand_as =  weekday_reg -*;
2126  
2127   data expected_demand_as ;
2128     set expected_demand_as_mc (in=in_mc)
2129         expected_demand_as_fac
2130         ;
2131  
2132     length fac_id $3;
2133  
2134     if in_mc then fac_id='ALL';
2135  
2136  
2137  
2138  
2139   run;

NOTE: There were 407 observations read from the data set WORK.EXPECTED_DEMAND_AS_MC.
NOTE: There were 823 observations read from the data set WORK.EXPECTED_DEMAND_AS_FAC.
NOTE: The data set WORK.EXPECTED_DEMAND_AS has 1230 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2140  
2141  
2142   proc sql;
2143       create table expected_demand_as_fnl
2144           as
2145  
2146       select ed.*,
2147              days.count_days,
2148              ed.weekday_reg_outp_sum / days.count_days as weekday_reg_outp,
2149            ed.weekday_reg_ed_sum   / days.count_days as weekday_reg_ed,
2150              ed.weekday_reg_inp_sum  / days.count_days as weekday_reg_inp
2151  
69                                                         The SAS System                            12:51 Monday, November 28, 2016

2152         from expected_demand_as ed
2153  
2154    left join count_weekdays days
2155  
2156           on days.weekday=ed.weekday
2157  
2158           ;
NOTE: Table WORK.EXPECTED_DEMAND_AS_FNL created, with 1230 rows and 11 columns.

2159  
2160   quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


2161  
2162  
2163  
2164   proc print data=expected_demand_as_fnl (obs=20);
2165     title "AS portion of Expected Demand";
2166   run;

NOTE: There were 20 observations read from the data set WORK.EXPECTED_DEMAND_AS_FNL.
NOTE: The PROCEDURE PRINT printed page 59.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


2167  
2168  
2169  
2170   *- Now calculate FTKA portion of Expected Demand using PARRS data -*;
2171  
2172  
2173    *- Summarize number of FTKA -*;
2174    *- by weekday over previous three months.              -*;
2175  
2176  
2177   proc summary data=appts_prevyr_ftka nway;
2178     class modality mc_id  weekday ;
2179     var ftka_all ;
2180     output out=expected_demand_ftka_mc (drop=_:)
2181            sum=ftka_all_sum
2182            ;
2183   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 39108 observations read from the data set WORK.APPTS_PREVYR_FTKA.
NOTE: The data set WORK.EXPECTED_DEMAND_FTKA_MC has 403 observations and 4 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


2184  
2185   proc summary data=APPTS_PREVYR_FTKA nway;
2186     class modality mc_id fac_id weekday ;
2187     var ftka_all ;
2188     output out=expected_demand_ftka_fac (drop=_:)
2189            sum=ftka_all_sum
2190            ;
2191   run;
70                                                         The SAS System                            12:51 Monday, November 28, 2016


NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 39108 observations read from the data set WORK.APPTS_PREVYR_FTKA.
NOTE: The data set WORK.EXPECTED_DEMAND_FTKA_FAC has 810 observations and 5 variables.
NOTE: The PROCEDURE SUMMARY used 0.03 CPU seconds.


2192  
2193  
2194  
2195  
2196  data expected_demand_ftka ;
2197     set expected_demand_ftka_mc (in=in_mc)
2198         expected_demand_ftka_fac
2199         ;
2200  
2201     length fac_id $3;
2202  
2203     if in_mc then fac_id='ALL';
2204  
2205  
2206   run;

NOTE: There were 403 observations read from the data set WORK.EXPECTED_DEMAND_FTKA_MC.
NOTE: There were 810 observations read from the data set WORK.EXPECTED_DEMAND_FTKA_FAC.
NOTE: The data set WORK.EXPECTED_DEMAND_FTKA has 1213 observations and 5 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2207  
2208    *- Create a count of distinct days included in 3 month ave by weekday -*;
2209  
2210    proc sort data=appts_prevyr_ftka nodupkey out=appts_prevyr_ftka_dates
2211              (keep=appt_dt weekday count);
2212  
2213      by appt_dt;
2214    run;

NOTE: There were 39108 observations read from the data set WORK.APPTS_PREVYR_FTKA.
NOTE: SAS sort was used.
NOTE: 39017 observations with duplicate key values were deleted.
NOTE: The data set WORK.APPTS_PREVYR_FTKA_DATES has 91 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.02 CPU seconds.


2215  
2216   *- Now calculate number of distinct days were included in -*;
2217   *- 3 month period by day of the week.                     -*;
2218  
2219    proc summary data= appts_prevyr_ftka_dates  nway;
2220      class weekday;
2221      var count;
2222      output out=count_weekdays (drop=_:)
2223             sum(count)= count_days;
2224  
2225    run;

NOTE: Multiple concurrent threads will be used to summarize data.
71                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: There were 91 observations read from the data set WORK.APPTS_PREVYR_FTKA_DATES.
NOTE: The data set WORK.COUNT_WEEKDAYS has 7 observations and 2 variables.
NOTE: The PROCEDURE SUMMARY used 0.01 CPU seconds.


2226  
2227    proc sql;
2228        create table expected_demand_ftka_fnl
2229            as
2230  
2231        select ed.*,
2232               days.count_days,
2233               ed.ftka_all_sum / days.count_days as ftka_all
2234  
2235          from expected_demand_ftka ed
2236  
2237     left join count_weekdays days
2238  
2239            on days.weekday=ed.weekday
2240  
2241            ;
NOTE: Table WORK.EXPECTED_DEMAND_FTKA_FNL created, with 1213 rows and 7 columns.

2242  
2243    quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


2244  
2245  
2246   proc print data=expected_demand_ftka_fnl (obs=20);
2247     title "FTKA portion of Expected Demand";
2248   run;

NOTE: There were 20 observations read from the data set WORK.EXPECTED_DEMAND_FTKA_FNL.
NOTE: The PROCEDURE PRINT printed page 60.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


2249  
2250  
2251   *- Create table with expected demand by joining -*;
2252   *- Three month Average of Actual seen and FTKA. -*;
2253  
2254  
2255   proc sql;
2256     create table expected_demand
2257               as
2258           select actual_seen.modality,
2259                  actual_seen.mc_id,
2260                  actual_seen.fac_id,
2261                  actual_seen.weekday,
2262                  actual_seen.weekday_reg_outp,
2263                  actual_seen.count_days,
2264           ftka.ftka_all,
2265                  round(sum(actual_seen.weekday_reg_outp,ftka.ftka_all)
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2265!                                                                       * &ed_buffer,1)
72                                                         The SAS System                            12:51 Monday, November 28, 2016

2266                        as expected_demand_op,
2267                  round(actual_seen.weekday_reg_ed
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2267!                                                   * &ed_buffer,1)  as expected_demand_ed,
2268           round(actual_seen.weekday_reg_inp
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2268!                                            * &ed_buffer,1)  as expected_demand_inp,
2269  
2270                  sum(round(actual_seen.weekday_reg_ed
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2270!                                                      * &ed_buffer,1),
2271                      round(actual_seen.weekday_reg_inp
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2271!                                                       * &ed_buffer,1),
2272                      round(sum(actual_seen.weekday_reg_outp,ftka.ftka_all)
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2272!                                                                           * &ed_buffer,1)
2273                     ) as expected_demand_tot
2274  
2275  
2276  
2277             from expected_demand_as_fnl actual_seen
2278  
2279        left join expected_demand_ftka_fnl  ftka
2280  
2281            on actual_seen.modality = ftka.modality
2282           and actual_seen.mc_id    = ftka.mc_id
2283           and actual_seen.fac_id   = ftka.fac_id
2284           and actual_seen.weekday  = ftka.weekday
2285  
2286        order by modality, mc_id, fac_id, weekday
2287  
2288   ;
NOTE: SAS threaded sort was used.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Table WORK.EXPECTED_DEMAND created, with 1230 rows and 11 columns.

2289   quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.


2290  
2291  
2292  
2293  
2294   proc print data=expected_demand;
2295     title "Final Expected Demand";
2296   run;

NOTE: There were 1230 observations read from the data set WORK.EXPECTED_DEMAND.
NOTE: The PROCEDURE PRINT printed pages 61-83.
NOTE: The PROCEDURE PRINT used 0.01 CPU seconds.


2297  
73                                                         The SAS System                            12:51 Monday, November 28, 2016

2298  
2299   **********************************************************************************;
2300   ***Repeat the entire process for calculating expected demand for booked appts and*;
2301   ***for walk-in appts.*************************************************************;
2302   *** 1. calculate the 3-month retro actual seen for booked and walk-in           **;
2303   *** 2. Repeat above steps to calculate expected demand for outp, inpat, ed, and **;
2304   ***    total with FTKA and 10% buffer for booked appts.                         **;
2305   *** 3. Repeat the same process again for walk-in appts.                         **;
2306   **********************************************************************************;
2307  
2308   *** 1. Calculate the 3-month retro actual seen for booked and walk-in***;
2309  
2310  proc sort data = trrs_prevyr out = trrs(rename = (req_dt = appt_dt)) nodupkey;
2311    by req_no;
2312  run;

NOTE: Host sort was used.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 397762 observations read from the data set WORK.TRRS_PREVYR.
NOTE: The data set WORK.TRRS has 397762 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.34 CPU seconds.


2313  
2314  proc sort data = trrs;
2315    by mrn fac_id modality appt_dt;
2316  run;

NOTE: Host sort was used.
NOTE: There were 397762 observations read from the data set WORK.TRRS.
NOTE: The data set WORK.TRRS has 397762 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.28 CPU seconds.


2317  
2318  
2319  
2320  data trrs_booked
2321       trrs_walkin
2322    trrs_sameday;
2323    merge appts_x (in = a)
2324          trrs (in = b);
2325    by mrn fac_id modality appt_dt;
2326    if b;
2327    if not a then do;
2328      b_w_s = 'W';
2329      output trrs_walkin;
2330    end;
2331    else if (book_dt < appt_dt) then do;
2332      b_w_s = 'B';
2333      output trrs_booked;
2334    end;
2335    else if book_dt >= appt_dt or book_dt =. then do;
2336      b_w_s = 'S';
2337   output trrs_sameday;
2338    end;
2339  run;

74                                                         The SAS System                            12:51 Monday, November 28, 2016

INFO: The variable month on data set WORK.APPTS_X will be overwritten by data set WORK.TRRS.
INFO: The variable weekday on data set WORK.APPTS_X will be overwritten by data set WORK.TRRS.
INFO: The variable key_ on data set WORK.APPTS_X will be overwritten by data set WORK.TRRS.
INFO: The variable MC_ID on data set WORK.APPTS_X will be overwritten by data set WORK.TRRS.
INFO: The variable F_CLASS on data set WORK.APPTS_X will be overwritten by data set WORK.TRRS.
INFO: The variable REQ_TM on data set WORK.APPTS_X will be overwritten by data set WORK.TRRS.
NOTE: MERGE statement has more than one data set with repeats of BY values.
NOTE: There were 620957 observations read from the data set WORK.APPTS_X.
NOTE: There were 397762 observations read from the data set WORK.TRRS.
NOTE: The data set WORK.TRRS_BOOKED has 195113 observations and 36 variables.
NOTE: The data set WORK.TRRS_WALKIN has 83279 observations and 36 variables.
NOTE: The data set WORK.TRRS_SAMEDAY has 119946 observations and 36 variables.
NOTE: The DATA statement used 0.40 CPU seconds.


2340  
2341  
2342  
2343  **************************************;
2344  ***sometimes 2 appointments are made *;
2345  ***for one requisition seen. Booked  *;
2346  ***appts trump walk-ins. Delete out  *;
2347  ***duplicates among the two datasets *;
2348  **************************************;
2349  
2350  data trrs_seen;
2351    set trrs_booked trrs_walkin trrs_sameday;
2352  run;

NOTE: There were 195113 observations read from the data set WORK.TRRS_BOOKED.
NOTE: There were 83279 observations read from the data set WORK.TRRS_WALKIN.
NOTE: There were 119946 observations read from the data set WORK.TRRS_SAMEDAY.
NOTE: The data set WORK.TRRS_SEEN has 398338 observations and 36 variables.
NOTE: The DATA statement used 0.11 CPU seconds.


2353  
2354  **************************************;
2355  **************Save data***************;
2356  **************************************;
2357  data DDOC.trrs_bws;
2358    set trrs_seen;
2359  run;

NOTE: There were 398338 observations read from the data set WORK.TRRS_SEEN.
NOTE: The data set DDOC.TRRS_BWS has 398338 observations and 36 variables.
NOTE: The DATA statement used 0.11 CPU seconds.


2360  
2361  proc sort data = trrs_seen;
2362    by req_no b_w_s;
2363  run;

NOTE: Host sort was used.
NOTE: There were 398338 observations read from the data set WORK.TRRS_SEEN.
NOTE: The data set WORK.TRRS_SEEN has 398338 observations and 36 variables.
NOTE: The PROCEDURE SORT used 0.38 CPU seconds.
75                                                         The SAS System                            12:51 Monday, November 28, 2016



2364  
2365  proc sort data = trrs_seen nodupkey;
2366    by req_no;
2367  run;

NOTE: Host sort was used.
NOTE: 576 observations with duplicate key values were deleted.
NOTE: There were 398338 observations read from the data set WORK.TRRS_SEEN.
NOTE: The data set WORK.TRRS_SEEN has 397762 observations and 36 variables.
NOTE: The PROCEDURE SORT used 0.34 CPU seconds.


2368  
2369  
2370  data trrs_booked
2371       trrs_walkin;
2372    set trrs_seen;
2373    if b_w_s = 'B' then output trrs_booked;
2374    else if b_w_s in ('W','S') then output trrs_walkin;
2375  run;

NOTE: There were 397762 observations read from the data set WORK.TRRS_SEEN.
NOTE: The data set WORK.TRRS_BOOKED has 195051 observations and 36 variables.
NOTE: The data set WORK.TRRS_WALKIN has 202711 observations and 36 variables.
NOTE: The DATA statement used 0.12 CPU seconds.


2376  
2377  
2378  ******************************************************************************;
2379  *** 2. Calculate expected demand fields for trrs_booked***********************;
2380  ******************************************************************************;
2381  
2382   *- Create a count of distinct days included in 3 month ave by weekday -*;
2383  
2384   proc sort data=trrs_booked nodupkey out=trrs_booked_dates
2385            (keep=appt_dt weekday count);
2386  
2387     by appt_dt;
2388   run;

NOTE: Host sort was used.
NOTE: 194962 observations with duplicate key values were deleted.
NOTE: There were 195051 observations read from the data set WORK.TRRS_BOOKED.
NOTE: The data set WORK.TRRS_BOOKED_DATES has 89 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.11 CPU seconds.


2389  
2390  
2391  
2392  
2393  
2394  
2395   *- Join Medical Center -*;
NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
76                                                         The SAS System                            12:51 Monday, November 28, 2016

2396  
2397   %DOMCROLL(TRRS_BOOKED, TRRS_BOOKED) ;
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to TRRS_BOOKED
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 195051 observations read from the data set WORK.TRRS_BOOKED.
NOTE: The data set WORK.FIXSCH has 195051 observations and 36 variables.
NOTE: The DATA statement used 0.05 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: Host sort was used.
NOTE: There were 195051 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 195051 observations and 36 variables.
NOTE: The PROCEDURE SORT used 0.20 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to TRRS_BOOKED
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

INFO: The variable MC_ID on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
INFO: The variable F_CLASS on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
NOTE: There were 195051 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.TRRS_BOOKED has 195051 observations and 36 variables.
NOTE: The DATA statement used 0.08 CPU seconds.


2398  
2399   *- Summarize number of registrations for OP, IP and ED -*;
2400   *- by weekday over previous three months.              -*;
2401  
2402  
2403  
2404    proc sql ;
2405      create table trrs_booked_rad_only
2406          as
2407  
2408      select *
2409  
2410        from trrs_booked
2411  
2412       where input(req_no,8.) not in(select req_no  from ddoc.mrms_excl)
77                                                         The SAS System                            12:51 Monday, November 28, 2016

2413            ;
NOTE: Table WORK.TRRS_BOOKED_RAD_ONLY created, with 194807 rows and 36 columns.

2414     quit;
NOTE: The PROCEDURE SQL used 0.14 CPU seconds.


2415  
2416  
2417  
2418  
2419   proc summary data= trrs_booked_rad_only (where=(mc_id ne 'ZZZ')) nway;
2420     class modality mc_id  weekday;
2421     var reg_outp reg_ed reg_inp;
2422     output out=booked_exp_demand_mc (drop=_:)
2423            sum(reg_outp)= weekday_reg_outp_booked
2424            sum(reg_ed)  = weekday_reg_ed_booked
2425            sum(reg_inp) = weekday_reg_inp_booked;
2426   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 194807 observations read from the data set WORK.TRRS_BOOKED_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.BOOKED_EXP_DEMAND_MC has 398 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.10 CPU seconds.


2427  
2428   proc summary data= trrs_booked_rad_only (where=(mc_id ne 'ZZZ')) nway;
2429      class modality mc_id fac_id weekday;
2430      var reg_outp reg_ed reg_inp;
2431  
2432     output out=booked_exp_demand_fac (drop=_:)
2433            sum(reg_outp)= weekday_reg_outp_booked
2434            sum(reg_ed)  = weekday_reg_ed_booked
2435            sum(reg_inp) = weekday_reg_inp_booked;
2436   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 194807 observations read from the data set WORK.TRRS_BOOKED_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.BOOKED_EXP_DEMAND_FAC has 808 observations and 7 variables.
NOTE: The PROCEDURE SUMMARY used 0.12 CPU seconds.


2437  
2438  
2439   *- Now calculate number of distinct days were included in -*;
2440   *- 3 month period by day of the week.                     -*;
2441  
2442    proc summary data= trrs_booked_dates  nway;
2443      class weekday;
2444      var count;
2445      output out=count_booked_weekdays (drop=_:)
2446             sum(count)= count_days;
2447  
2448    run;

78                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 89 observations read from the data set WORK.TRRS_BOOKED_DATES.
NOTE: The data set WORK.COUNT_BOOKED_WEEKDAYS has 7 observations and 2 variables.
NOTE: The PROCEDURE SUMMARY used 0.01 CPU seconds.


2449  
2450  
2451  
2452  
2453  
2454   *- Set results aggregated to the MC and Facility together -*;
2455   *- expected_demand_as =  weekday_reg -*;
2456  
2457   data booked_exp_demand_as ;
2458     set booked_exp_demand_mc (in=in_mc)
2459         booked_exp_demand_fac
2460         ;
2461  
2462     length fac_id $3;
2463  
2464     if in_mc then fac_id='ALL';
2465   run;

NOTE: There were 398 observations read from the data set WORK.BOOKED_EXP_DEMAND_MC.
NOTE: There were 808 observations read from the data set WORK.BOOKED_EXP_DEMAND_FAC.
NOTE: The data set WORK.BOOKED_EXP_DEMAND_AS has 1206 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2466  
2467  
2468   proc sql;
2469       create table booked_exp_demand_fnl
2470           as
2471  
2472       select ed.*,
2473              days.count_days,
2474              ed.weekday_reg_outp_booked / days.count_days as weekday_reg_outp_bkd,
2475            ed.weekday_reg_ed_booked   / days.count_days as weekday_reg_ed_bkd,
2476              ed.weekday_reg_inp_booked  / days.count_days as weekday_reg_inp_bkd
2477  
2478         from booked_exp_demand_as ed
2479  
2480    left join count_booked_weekdays days
2481  
2482           on days.weekday=ed.weekday
2483  
2484           ;
NOTE: Table WORK.BOOKED_EXP_DEMAND_FNL created, with 1206 rows and 11 columns.

2485  
2486   quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


2487  
2488  
79                                                         The SAS System                            12:51 Monday, November 28, 2016

2489  
2490   proc print data=booked_exp_demand_fnl (obs=20);
2491     title "AS portion of Booked Expected Demand";
2492   run;

NOTE: There were 20 observations read from the data set WORK.BOOKED_EXP_DEMAND_FNL.
NOTE: The PROCEDURE PRINT printed page 84.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


2493  
2494  
2495  
2496   *- Now use previous calculated FTKA portion of Booked Expected Demand using PARRS data -*;
2497   *- This will be left out when calculating exp. demand for walk-ins                     -*;
2498  
2499   *- Create table with expected demand by joining -*;
2500   *- Three month Average of Actual seen booked and FTKA. -*;
2501  
2502  
2503   proc sql;
2504     create table booked_expected_demand
2505               as
2506           select booked_seen.modality,
2507                  booked_seen.mc_id,
2508                  booked_seen.fac_id,
2509                  booked_seen.weekday,
2510                  booked_seen.weekday_reg_outp_bkd,
2511                  booked_seen.count_days,
2512               ftka.ftka_all,
2513                  round(sum(booked_seen.weekday_reg_outp_bkd,ftka.ftka_all)
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2513!                                                                           * &ed_buffer,1)
2514                        as booked_exp_demand_op,
2515                  round(booked_seen.weekday_reg_ed_bkd
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2515!                                                       * &ed_buffer,1)  as booked_exp_demand_ed,
2516               round(booked_seen.weekday_reg_inp_bkd
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2516!                                                    * &ed_buffer,1)  as booked_exp_demand_inp,
2517  
2518                  sum(round(booked_seen.weekday_reg_ed_bkd
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2518!                                                          * &ed_buffer,1),
2519                      round(booked_seen.weekday_reg_inp_bkd
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2519!                                                           * &ed_buffer,1),
2520                      round(sum(booked_seen.weekday_reg_outp_bkd,ftka.ftka_all)
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2520!                                                                               * &ed_buffer,1)
2521                     ) as booked_exp_demand_tot
2522  
2523  
2524  
2525             from booked_exp_demand_fnl booked_seen
2526  
2527        left join expected_demand_ftka_fnl  ftka
2528  
80                                                         The SAS System                            12:51 Monday, November 28, 2016

2529            on booked_seen.modality = ftka.modality
2530           and booked_seen.mc_id    = ftka.mc_id
2531           and booked_seen.fac_id   = ftka.fac_id
2532           and booked_seen.weekday  = ftka.weekday
2533  
2534        order by modality, mc_id, fac_id, weekday
2535  
2536   ;
NOTE: SAS threaded sort was used.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Table WORK.BOOKED_EXPECTED_DEMAND created, with 1206 rows and 11 columns.

2537   quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.


2538  
2539  ******************************************************************************;
2540  *** End calculating expected demand fields for trrs_booked********************;
2541  ******************************************************************************;
2542  
2543  
2544  
2545  *******************************************************************************;
2546  *** 3. Calculate expected demand field for trrs_walkin*************************;
2547  *******************************************************************************;
2548  
2549  
2550   *- Create a count of distinct days included in 3 month ave by weekday -*;
2551  
2552   proc sort data=trrs_walkin nodupkey out=trrs_walkin_dates
2553            (keep=appt_dt weekday count);
2554  
2555     by appt_dt;
2556   run;

NOTE: Host sort was used.
NOTE: 202622 observations with duplicate key values were deleted.
NOTE: There were 202711 observations read from the data set WORK.TRRS_WALKIN.
NOTE: The data set WORK.TRRS_WALKIN_DATES has 89 observations and 3 variables.
NOTE: The PROCEDURE SORT used 0.11 CPU seconds.


2557  
2558  
2559   *- Join Medical Center -*;
NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
2560  
2561   %DOMCROLL(TRRS_WALKIN, TRRS_WALKIN) ;
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to TRRS_WALKIN
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
81                                                         The SAS System                            12:51 Monday, November 28, 2016


NOTE: There were 202711 observations read from the data set WORK.TRRS_WALKIN.
NOTE: The data set WORK.FIXSCH has 202711 observations and 36 variables.
NOTE: The DATA statement used 0.05 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: Host sort was used.
NOTE: There were 202711 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 202711 observations and 36 variables.
NOTE: The PROCEDURE SORT used 0.21 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to TRRS_WALKIN
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

INFO: The variable MC_ID on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
INFO: The variable F_CLASS on data set WORK.MAIN will be overwritten by data set WORK.THISROLL.
NOTE: There were 202711 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.TRRS_WALKIN has 202711 observations and 36 variables.
NOTE: The DATA statement used 0.08 CPU seconds.


2562  
2563   *- Summarize number of registrations for OP, IP and ED -*;
2564   *- by weekday over previous three months.              -*;
2565  
2566  
2567  
2568    proc sql ;
2569      create table trrs_walkin_rad_only
2570          as
2571  
2572      select *
2573  
2574        from trrs_walkin
2575  
2576       where input(req_no,8.) not in(select req_no  from ddoc.mrms_excl)
2577            ;
NOTE: Table WORK.TRRS_WALKIN_RAD_ONLY created, with 189196 rows and 36 columns.

2578     quit;
NOTE: The PROCEDURE SQL used 0.15 CPU seconds.


2579  
82                                                         The SAS System                            12:51 Monday, November 28, 2016

2580  
2581  
2582  
2583   proc summary data= trrs_walkin_rad_only (where=(mc_id ne 'ZZZ')) nway;
2584     class modality mc_id  weekday;
2585     var reg_outp reg_ed reg_inp;
2586     output out=walkin_exp_demand_mc (drop=_:)
2587            sum(reg_outp)= weekday_reg_outp_walkin
2588            sum(reg_ed)  = weekday_reg_ed_walkin
2589            sum(reg_inp) = weekday_reg_inp_walkin;
2590   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 189196 observations read from the data set WORK.TRRS_WALKIN_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.WALKIN_EXP_DEMAND_MC has 407 observations and 6 variables.
NOTE: The PROCEDURE SUMMARY used 0.10 CPU seconds.


2591  
2592   proc summary data= trrs_walkin_rad_only (where=(mc_id ne 'ZZZ')) nway;
2593      class modality mc_id fac_id weekday;
2594      var reg_outp reg_ed reg_inp;
2595  
2596     output out=walkin_exp_demand_fac (drop=_:)
2597            sum(reg_outp)= weekday_reg_outp_walkin
2598            sum(reg_ed)  = weekday_reg_ed_walkin
2599            sum(reg_inp) = weekday_reg_inp_walkin;
2600   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 189196 observations read from the data set WORK.TRRS_WALKIN_RAD_ONLY.
      WHERE mc_id not = 'ZZZ';
NOTE: The data set WORK.WALKIN_EXP_DEMAND_FAC has 816 observations and 7 variables.
NOTE: The PROCEDURE SUMMARY used 0.12 CPU seconds.


2601  
2602  
2603   *- Now calculate number of distinct days were included in -*;
2604   *- 3 month period by day of the week.                     -*;
2605  
2606    proc summary data= trrs_walkin_dates  nway;
2607      class weekday;
2608      var count;
2609      output out=count_walkin_weekdays (drop=_:)
2610             sum(count)= count_days;
2611  
2612    run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 89 observations read from the data set WORK.TRRS_WALKIN_DATES.
NOTE: The data set WORK.COUNT_WALKIN_WEEKDAYS has 7 observations and 2 variables.
NOTE: The PROCEDURE SUMMARY used 0.01 CPU seconds.


2613  
2614  
83                                                         The SAS System                            12:51 Monday, November 28, 2016

2615  
2616  
2617  
2618   *- Set results aggregated to the MC and Facility together -*;
2619   *- expected_demand_as =  weekday_reg -*;
2620  
2621   data walkin_exp_demand_as ;
2622     set walkin_exp_demand_mc (in=in_mc)
2623         walkin_exp_demand_fac
2624         ;
2625  
2626     length fac_id $3;
2627  
2628     if in_mc then fac_id='ALL';
2629   run;

NOTE: There were 407 observations read from the data set WORK.WALKIN_EXP_DEMAND_MC.
NOTE: There were 816 observations read from the data set WORK.WALKIN_EXP_DEMAND_FAC.
NOTE: The data set WORK.WALKIN_EXP_DEMAND_AS has 1223 observations and 7 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2630  
2631  
2632   proc sql;
2633       create table walkin_exp_demand_fnl
2634           as
2635  
2636       select ed.*,
2637              days.count_days,
2638              ed.weekday_reg_outp_walkin / days.count_days as weekday_reg_outp_wlk,
2639            ed.weekday_reg_ed_walkin   / days.count_days as weekday_reg_ed_wlk,
2640              ed.weekday_reg_inp_walkin  / days.count_days as weekday_reg_inp_wlk
2641  
2642         from walkin_exp_demand_as ed
2643  
2644    left join count_walkin_weekdays days
2645  
2646           on days.weekday=ed.weekday
2647  
2648           ;
NOTE: Table WORK.WALKIN_EXP_DEMAND_FNL created, with 1223 rows and 11 columns.

2649  
2650   quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


2651  
2652  
2653  
2654   proc print data=walkin_exp_demand_fnl (obs=20);
2655     title "AS portion of walkin Expected Demand";
2656   run;

NOTE: There were 20 observations read from the data set WORK.WALKIN_EXP_DEMAND_FNL.
NOTE: The PROCEDURE PRINT printed page 85.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.
84                                                         The SAS System                            12:51 Monday, November 28, 2016



2657  
2658  
2659  
2660   *- FTKAS don't make sense for walkin appts so we skip that section-*;
2661   *- And we cut out FTKAS from walkin calculations                  -*;
2662  
2663  
2664   proc sql;
2665     create table walkin_expected_demand
2666               as
2667           select walkin_seen.modality,
2668                  walkin_seen.mc_id,
2669                  walkin_seen.fac_id,
2670                  walkin_seen.weekday,
2671                  walkin_seen.weekday_reg_outp_wlk,
2672                  walkin_seen.count_days,
2673                  round(walkin_seen.weekday_reg_outp_wlk
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2673!                                                        * &ed_buffer,1)
2674                        as walkin_exp_demand_op,
2675                  round(walkin_seen.weekday_reg_ed_wlk
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2675!                                                       * &ed_buffer,1)  as walkin_exp_demand_ed,
2676               round(walkin_seen.weekday_reg_inp_wlk
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2676!                                                    * &ed_buffer,1)  as walkin_exp_demand_inp,
2677  
2678                  sum(round(walkin_seen.weekday_reg_ed_wlk
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2678!                                                          * &ed_buffer,1),
2679                      round(walkin_seen.weekday_reg_inp_wlk
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2679!                                                           * &ed_buffer,1),
2680                      round(walkin_seen.weekday_reg_outp_wlk
SYMBOLGEN:  Macro variable ED_BUFFER resolves to 1.1
2680!                                                            * &ed_buffer,1)
2681                     ) as walkin_exp_demand_tot
2682  
2683  
2684  
2685             from walkin_exp_demand_fnl walkin_seen
2686  
2687        order by modality, mc_id, fac_id, weekday
2688  
2689   ;
NOTE: SAS threaded sort was used.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Table WORK.WALKIN_EXPECTED_DEMAND created, with 1223 rows and 10 columns.

2690   quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.
85                                                         The SAS System                            12:51 Monday, November 28, 2016



2691  
2692  
2693  *******************************************************************************;
2694  *** End calculating expected demand fields for trrs_walkin*********************;
2695  *******************************************************************************;
2696  
2697  
2698  
2699  
2700  
2701   *---------------------------------------------------------*;
2702   * Calculate Average Daily Demand as monthly average of
2703   * OP expected demand without weekends
2704   *---------------------------------------------------------*;
2705  
2706  
2707   proc summary data=expected_demand   nway;
2708      where weekday not in(1,7);
2709  
2710      class modality mc_id fac_id ;
2711      var expected_demand_op;
2712  
2713     output out=average_daily_demand (drop=_:)
2714            mean(expected_demand_op)= average_daily_demand
2715            ;
2716   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 961 observations read from the data set WORK.EXPECTED_DEMAND.
      WHERE weekday not in (1, 7);
NOTE: The data set WORK.AVERAGE_DAILY_DEMAND has 193 observations and 4 variables.
NOTE: The PROCEDURE SUMMARY used 0.01 CPU seconds.


2717  
2718  
2719   proc print data=average_daily_demand;
2720     where mc_id ='SFO';
2721     title "average_daily_demand";
2722   run;

NOTE: There were 11 observations read from the data set WORK.AVERAGE_DAILY_DEMAND.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed page 86.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


2723  
2724  
2725  
2726  *----------------------------------------------------------------*;
2727  * MRG.RAD.ACCESS.DDOC.SASCODE(PARRSUNB)
2728  *----------------------------------------------------------------*;
2729  
2730  *---------------------------------------------------*;
2731  * SUPPLY & OPEN: (A)Open & (B)Delayed Release - NYA
86                                                         The SAS System                            12:51 Monday, November 28, 2016

2732  * ACTUAL OFFER:  (C)Unbooked
2733  *---------------------------------------------------*;
2734  
2735  data SCHED;
2736    set DDOC.SCHED1 DDOC.SCHED2;
2737  run;

NOTE: There were 57891 observations read from the data set DDOC.SCHED1.
NOTE: There were 226069 observations read from the data set DDOC.SCHED2.
NOTE: The data set WORK.SCHED has 283960 observations and 14 variables.
NOTE: The DATA statement used 0.04 CPU seconds.


2738  
2739  * Eliminate possible dups between FUTURE_SCHED and FINAL_SCHED ;
2740  proc sort data=sched nodupkey;
2741     by fac_id clinic machine schddate schdtime;
2742  run;

NOTE: Host sort was used.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 283960 observations read from the data set WORK.SCHED.
NOTE: The data set WORK.SCHED has 283960 observations and 14 variables.
NOTE: The PROCEDURE SORT used 0.18 CPU seconds.


2743  
2744  * Assign modality to schedules based on machine codes ;
2745  * Alternately can use standard appt types ;
2746  data SCHED2;
2747  
2748     merge sched (in=a) MACHINES (in=b);
2749     by fac_id CLINIC machine;
2750     if a ;
2751     if act_cd in ('CARD','ED','INP','URG','PS60') then modality = clinic;
2752     else if act_cd in (&appt_tp_CT_std) then modality='CT';
SYMBOLGEN:  Macro variable APPT_TP_CT_STD resolves to 'CT10'                     , 'CT15'                     , 'CT20'              
                   , 'CT30'                     , 'CTDB'                     , 'CARD'                     , 'CTBX'                  
               , 'CT40'                     , 'CT45'      , 'CT60'      , 'CT90'      , 'CTCA'      , 'CTED'      , 'CTA'      , 
            'CTLS'      , 'CTPD'      , 'CTIP'      , 'PS60'
2753     else if act_cd in (&appt_tp_MRI_std) then modality='MRI';
SYMBOLGEN:  Macro variable APPT_TP_MRI_STD resolves to 'MR10'                     , 'MR20'                     , 'MR30'             
                    , 'MR40'                     , 'MR45'                     , 'MR50'                     , 'MR60'                 
                , 'MR75'                     , 'MR90'                     , 'MR12'                     , 'MR10'                     
            , 'MR50'                     , 'MR75'      , 'MRED'                     , 'MRBX'      , 'MRIP'      , 'MRSD'
2754     else if act_cd in (&appt_tp_ULS_std) then modality='ULS';
SYMBOLGEN:  Macro variable APPT_TP_ULS_STD resolves to 'US15'                      , 'US20'                      , 'US30'           
                       , 'US40'                      , 'US60'                      , 'US80'                      , 'US90'           
                       , 'U120'                      , 'USBR'                      , 'USER'                      , 'USBX'       , 
            'USAA'       , 'USPV'                      , 'USOB'       , 'USVA'       , 'ULOC'       , 'USED'       , 'USIP'
2755     else if act_cd in (&appt_tp_MAM_std) then modality='MAM';
SYMBOLGEN:  Macro variable APPT_TP_MAM_STD resolves to '7M'                     , '7M10'                     , '7MX'                
                 , 'WALK'
2756     else if not b then do;
2757       if act_cd in (&appt_tp_CT_exc) then modality='CT';
SYMBOLGEN:  Macro variable APPT_TP_CT_EXC resolves to 'CAR6'  ,'ED'                     , 'CCTA'  ,'CTH'                     , 
            'CE15'  ,'PREH'                     , 'CRYO'  ,'CTRF'                     , 'CT3'   ,'CTSE'                     , 
            'NC15'  ,'CT'      , 'NCT'   ,'INP'      , 'URG'   ,'CTMY'      , 'PEDI'  ,'C120'      , 'RFA'   ,'PS30'      , 'CMFR'  
87                                                         The SAS System                            12:51 Monday, November 28, 2016

            ,'CBCT'                     , 'TR2'   ,'TR3'                     , 'TR4'
2758       else if act_cd in (&appt_tp_MRI_exc) then modality='MRI';
SYMBOLGEN:  Macro variable APPT_TP_MRI_EXC resolves to 'AG45' ,'NC30'                     , 'BRST' ,'MRBR'                     , 
            'BX'   ,'MRBX'                     , 'CARD' ,'MRCA'                     , 'MRIB' ,'TR'                     , 'MRSC' 
            ,'MRDB'                     , 'PS60' ,'NC45'      , 'ARTH' ,'S105'
2759       else if act_cd in (&appt_tp_ULS_exc) then modality='ULS';
SYMBOLGEN:  Macro variable APPT_TP_ULS_EXC resolves to 'ABI ' ,'U40'   ,'USNL'                      , 'B60 ' ,'UOBC'  ,'USSE'       
                           , 'BL30' ,'V1'    ,'URG'                      , 'CART' ,'V2'    ,'UOB2'                      , 'GRAF' 
            ,'USC'   ,'VMAP'                      , 'U30'  ,'USDB'  ,'AAA'                      , 'HEPB' ,'PARA'  ,'EHT'            
                      , 'INPT' ,'NTU'   ,'NTUM'                      , 'TIPS' ,'ULS'   ,'USCR'
2760     end;
2761     if modality not in ('CT','MRI','ULS','MAM') then delete;
2762     acap= input(apptcap,2.);
2763     bkd= input(bkdct,2.);
2764     format schddate mmddyy10.;
2765     unbkd=max(0,acap-bkd);
2766  
2767  
2768  
2769    open = 0 ; nya = 0 ; held = 0 ;
2770  
2771  
2772  if (effdate
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
2772!             < &strtdt or effdate=&strtdt and efftime<=hms(6,0,0))
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
2773     and heldcode in('?','') then
2774    open = max(0,acap-bkd) ; **** open as of Monday 6AM ***;
2775  else if /* (effdate <= schddate  or effdate=schddate and efftime<=hms(6,0,0)  )
2776       and */ heldcode in('?','')  then
2777    nya = max(0,acap-bkd) ; *** not yet available as of Monday 6AM but available by 6AM of the schedule date;
2778  else if heldcode not in('?','')  then do; held = max(0,acap-bkd); unbkd = 0; end;
2779  
2780  run;

INFO: The variable DEPT_CD on data set WORK.SCHED will be overwritten by data set WORK.MACHINES.
NOTE: There were 283960 observations read from the data set WORK.SCHED.
NOTE: There were 495 observations read from the data set WORK.MACHINES.
NOTE: The data set WORK.SCHED2 has 283584 observations and 22 variables.
NOTE: The DATA statement used 0.22 CPU seconds.


2781  
2782  
2783  
2784  data sched2;
2785     merge sched2 (in=a)
2786            WORKIN (in=b
2787                        KEEP=fac_id clinic machine appt_dt appt_tm
2788                        rename=(appt_dt=schddate appt_tm=schdtime));
2789     by fac_id clinic machine schddate schdtime ;
2790     if a;
2791     if b and bkd ge 1 then workin=1;
2792     else workin=0;
2793  run;

NOTE: There were 283584 observations read from the data set WORK.SCHED2.
NOTE: There were 442 observations read from the data set WORK.WORKIN.
88                                                         The SAS System                            12:51 Monday, November 28, 2016

NOTE: The data set WORK.SCHED2 has 283584 observations and 23 variables.
NOTE: The DATA statement used 0.13 CPU seconds.


NOTE: Data set MRG.KEYIND.MCROLL.SASDATA has been deallocated.
2794  
2795  %DOMCROLL(SCHED2,SCHED3) ;
NOTE: Libref MC was successfully assigned as follows: 
      Engine:        V6 
      Physical Name: MRG.KEYIND.MCROLL.SASDATA
SYMBOLGEN:  Macro variable INDSN resolves to SCHED2
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 283584 observations read from the data set WORK.SCHED2.
NOTE: The data set WORK.FIXSCH has 283584 observations and 23 variables.
NOTE: The DATA statement used 0.04 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: Host sort was used.
NOTE: There were 283584 observations read from the data set WORK.FIXSCH.
NOTE: The data set WORK.MAIN has 283584 observations and 23 variables.
NOTE: The PROCEDURE SORT used 0.17 CPU seconds.


SYMBOLGEN:  Macro variable FAC resolves to fac_id

NOTE: There were 64 observations read from the data set MC.MCROLL.
NOTE: SAS sort was used.
NOTE: The data set WORK.THISROLL has 64 observations and 6 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


SYMBOLGEN:  Macro variable OUTDSN resolves to SCHED3
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable FAC resolves to fac_id
SYMBOLGEN:  Macro variable GOVERNS resolves to 0

NOTE: There were 283584 observations read from the data set WORK.MAIN.
NOTE: There were 64 observations read from the data set WORK.THISROLL.
NOTE: The data set WORK.SCHED3 has 283584 observations and 25 variables.
NOTE: The DATA statement used 0.08 CPU seconds.


2796  
2797  proc summary data=sched3 nway;
2798    class modality mc_id  schddate ;
2799    var open nya held acap bkd unbkd workin;
2800    output out=sched4_mc (drop=_:) sum=;
2801  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 283584 observations read from the data set WORK.SCHED3.
NOTE: The data set WORK.SCHED4_MC has 3557 observations and 10 variables.
NOTE: The PROCEDURE SUMMARY used 0.14 CPU seconds.

89                                                         The SAS System                            12:51 Monday, November 28, 2016


2802  
2803  proc summary data=sched3 nway;
2804    class modality mc_id fac_id schddate ;
2805    var open nya held acap bkd unbkd workin;
2806    output out=sched4_fac (drop=_:) sum=;
2807  run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 283584 observations read from the data set WORK.SCHED3.
NOTE: The data set WORK.SCHED4_FAC has 6916 observations and 11 variables.
NOTE: The PROCEDURE SUMMARY used 0.16 CPU seconds.


2808  
2809  
2810  data sched4;
2811     set sched4_mc (in=in_mc)
2812         sched4_fac
2813         ;
2814  
2815     length fac_id $3;
2816  
2817     if in_mc then fac_id='ALL';
2818   run;

NOTE: There were 3557 observations read from the data set WORK.SCHED4_MC.
NOTE: There were 6916 observations read from the data set WORK.SCHED4_FAC.
NOTE: The data set WORK.SCHED4 has 10473 observations and 11 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2819  
2820  
2821  
2822  
2823  proc sort data= sched4;
2824     by modality mc_id fac_id schddate ;
2825  run;

NOTE: There were 10473 observations read from the data set WORK.SCHED4.
NOTE: SAS sort was used.
NOTE: The data set WORK.SCHED4 has 10473 observations and 11 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


2826  
2827  
2828  
2829  
2830  *---------------------------------------------------------*;
2831  * schedules into retro and prosp
2832  *---------------------------------------------------------*;
2833  data  ddoc.DATA_RETRO_AO_UNBKD
2834       (where=(&strtdtr le schddate le &enddtr))
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
2835        ddoc.DATA_PROSP_S
90                                                         The SAS System                            12:51 Monday, November 28, 2016

2836       (WHERE=(&strtdt le schddate le &enddt));
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
2837  
2838  
2839  
2840     set sched3;
2841  run;

NOTE: There were 283584 observations read from the data set WORK.SCHED3.
NOTE: The data set DDOC.DATA_RETRO_AO_UNBKD has 61027 observations and 25 variables.
NOTE: The data set DDOC.DATA_PROSP_S has 222557 observations and 25 variables.
NOTE: The DATA statement used 0.09 CPU seconds.


2842  
2843  data  retro_unbkd (where=(&strtdtr le schddate le &enddtr))
SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
2844        prosp_unbkd (where=(&strtdt le schddate le &enddt));
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
SYMBOLGEN:  Macro variable ENDDT resolves to 20841
2845     set sched4;
2846  run;

NOTE: There were 10473 observations read from the data set WORK.SCHED4.
NOTE: The data set WORK.RETRO_UNBKD has 2197 observations and 11 variables.
NOTE: The data set WORK.PROSP_UNBKD has 8276 observations and 11 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2847  
2848  *----------------------------------------------------------------*;
2849  * Retrospective calculation
2850  *----------------------------------------------------------------*;
2851  
2852  data  month_average;
2853    merge  retro_dates
2854          average_daily_demand ;
2855    by modality mc_id fac_id ;
2856  run ;

NOTE: There were 3584 observations read from the data set WORK.RETRO_DATES.
NOTE: There were 193 observations read from the data set WORK.AVERAGE_DAILY_DEMAND.
NOTE: The data set WORK.MONTH_AVERAGE has 3590 observations and 6 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


2857  
2858  
2859  
2860  
2861  data retrospective;
2862    merge  retro_dates(in=a)
2863           retro_openacc_econ(rename=init_dt=date)
2864           retro_booked(rename=appt_dt=date)
2865           retro_unbkd(rename=schddate=date)
2866           pending (rename=retro_dt=date where=(&strtdtr le date le &enddtr ))
91                                                         The SAS System                            12:51 Monday, November 28, 2016

SYMBOLGEN:  Macro variable STRTDTR resolves to 20772
SYMBOLGEN:  Macro variable ENDDTR resolves to 20785
2867           actual_seen (rename=req_dt=date)
2868           month_average
2869     actual_seen_booked (rename=appt_dt=date)
2870     actual_seen_walkin (rename=appt_dt=date)
2871    ;
2872    by modality mc_id fac_id date ;
2873    if a;
2874  
2875    weekday=weekday(date);
2876    P_OR_R='1R';
2877    format date mmddyy10.  ;
2878  
2879  
2880  
2881    *- Put values into column names -*;
2882  
2883  
2884    *- Actual Demand - Changed definition of Actual Demand for MAM represented here*;
2885    if modality = 'MAM' then do;
2886      var1 = sum(seen_outp_wlk,seen_ed_wlk,seen_inp_wlk,AD_BKD);
2887    end;
2888    else var1= sum(econ_bkda_all,econ_bkda_forecast,open_access);
2889  
2890    *- Actual Seen - OP -*;
2891    var2 = seen_outp;
2892  
2893    *- Actual Seen - ED -*;
2894    var3 = seen_ed;
2895  
2896    *- Actual Seen - IP -*;
2897    var4 = seen_inp;
2898  
2899    *- Actual Seen - Total -*;
2900    var5 = sum(seen_outp,seen_ed,seen_inp);
2901  
2902    *- Actual Offer - New estimate as of Oct 23 -*;
2903    *var6 = sum(kept_all,ftka_all,unbkd);
2904    var6 = sum(seen_outp,seen_ed,seen_inp,ftka_all,unbkd);
2905  
2906    *- Pending -*;
2907    var7 = curr_pend;
2908  
2909    var8 = pending;
2910  
2911    *- Average Daily Demand -*;
2912    var9 = round(average_daily_demand,1);
2913  
2914    *- Actual Demand Booked   -*;
2915    var10 = AD_BKD;
2916  
2917    *- Actual Seen Booked - OP -*;
2918    var11 = seen_outp_bkd;
2919  
2920    *- Actual Seen Booked - ED -*;
2921    var12 = seen_ed_bkd;
2922  
92                                                         The SAS System                            12:51 Monday, November 28, 2016

2923    *- Actual Seen Booked - IP -*;
2924    var13 = seen_inp_bkd;
2925  
2926    *- Actual Seen Booked - Total -*;
2927    var14 = sum(seen_outp_bkd,seen_ed_bkd,seen_inp_bkd);
2928  
2929    *- Actual Demand Walkin    -*;
2930    var15 = sum(seen_outp_wlk,seen_ed_wlk,seen_inp_wlk);
2931  
2932    *- Actual Seen Walkin - OP -*;
2933    var16 = seen_outp_wlk;
2934  
2935    *- Actual Seen Walkin - ED -*;
2936    var17 = seen_ed_wlk;
2937  
2938    *- Actual Seen Walkin - IP -*;
2939    var18 = seen_inp_wlk;
2940  
2941    *- Actual Seen Walkin - Total -*;
2942    var19 = sum(seen_outp_wlk,seen_ed_wlk,seen_inp_wlk);
2943  
2944  
2945  run;

INFO: The variable F_CLASS on data set WORK.RETRO_DATES will be overwritten by data set WORK.MONTH_AVERAGE.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      118 at 2886:12    1087 at 2888:14   1346 at 2900:10   1317 at 2904:10   966 at 2912:10    1513 at 2927:11   1406 at 2930:11
      1406 at 2942:11   
NOTE: There were 3584 observations read from the data set WORK.RETRO_DATES.
NOTE: There were 2623 observations read from the data set WORK.RETRO_OPENACC_ECON.
NOTE: There were 2157 observations read from the data set WORK.RETRO_BOOKED.
NOTE: There were 2197 observations read from the data set WORK.RETRO_UNBKD.
NOTE: There were 2632 observations read from the data set WORK.PENDING.
      WHERE (date>=20772 and date<=20785);
NOTE: There were 2289 observations read from the data set WORK.ACTUAL_SEEN.
NOTE: There were 3590 observations read from the data set WORK.MONTH_AVERAGE.
NOTE: There were 2122 observations read from the data set WORK.ACTUAL_SEEN_BOOKED.
NOTE: There were 2224 observations read from the data set WORK.ACTUAL_SEEN_WALKIN.
NOTE: The data set WORK.RETROSPECTIVE has 3584 observations and 52 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


2946  
2947  
2948  proc print data=retrospective;
2949    where mc_id='SFO';
2950    title 'Retrospective';
2951  run;

NOTE: There were 112 observations read from the data set WORK.RETROSPECTIVE.
      WHERE mc_id='SFO';
NOTE: The PROCEDURE PRINT printed pages 87-94.
NOTE: The PROCEDURE PRINT used 0.01 CPU seconds.


2952  
2953  
93                                                         The SAS System                            12:51 Monday, November 28, 2016

2954  proc freq data=retrospective;
2955    where mc_id='FRS' and modality='CT';
2956  
2957    tables kept_all  ftka_all unbkd /list missing;
2958  
2959  
2960    title 'Actual Offer Components for Fresno';
2961  run;

NOTE: There were 42 observations read from the data set WORK.RETROSPECTIVE.
      WHERE (mc_id='FRS') and (modality='CT');
NOTE: The PROCEDURE FREQ printed page 95.
NOTE: The PROCEDURE FREQ used 0.00 CPU seconds.


2962  
2963  
2964  proc sort data=retrospective ; by modality mc_id fac_id date ; run ;

NOTE: There were 3584 observations read from the data set WORK.RETROSPECTIVE.
NOTE: SAS sort was used.
NOTE: The data set WORK.RETROSPECTIVE has 3584 observations and 52 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


2965  
2966  proc sort data= prosp_dates ; by modality mc_id fac_id date ; run ;

NOTE: Input data set is already sorted, no sorting done.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


2967  proc sort data= PROSP_UNBKD; by modality mc_id fac_id schddate ; run ;

NOTE: There were 8276 observations read from the data set WORK.PROSP_UNBKD.
NOTE: SAS sort was used.
NOTE: The data set WORK.PROSP_UNBKD has 8276 observations and 11 variables.
NOTE: The PROCEDURE SORT used 0.00 CPU seconds.


2968  
2969  
2970  
2971  
2972  *----------------------------------------------------------------*;
2973  * Prospective calculation
2974  *----------------------------------------------------------------*;
2975  data prospective;
2976    merge  prosp_dates (in=a)
2977           PROSP_UNBKD(rename=schddate=date)
2978  
2979    ;
2980    by modality mc_id fac_id date ;
2981    if a;
2982    weekday=weekday(date);
2983  
2984    P_OR_R='2P';
2985    demand = 0 ;                   ** placeholder **;
94                                                         The SAS System                            12:51 Monday, November 28, 2016

2986  
2987    *-Add work ins 10-24-2012 supply = sum(nya,open,bkd,-1*workin) -*;
2988  
2989    supply = sum(nya,open,bkd);
2990  
2991  
2992    pend_open = sum(nya,open) ;
2993    as_outp= 0 ;                   ** placeholder **;
2994    ed     = 0 ;                   ** placeholder **;
2995    inp    = 0 ;                   ** placeholder **;
2996  run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      6289 at 2989:12   6289 at 2992:15   
NOTE: There were 14336 observations read from the data set WORK.PROSP_DATES.
NOTE: There were 8276 observations read from the data set WORK.PROSP_UNBKD.
NOTE: The data set WORK.PROSPECTIVE has 14336 observations and 20 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


2997  
2998  proc sort ;
2999    by modality mc_id fac_id weekday ;
3000  run ;

NOTE: There were 14336 observations read from the data set WORK.PROSPECTIVE.
NOTE: SAS sort was used.
NOTE: The data set WORK.PROSPECTIVE has 14336 observations and 20 variables.
NOTE: The PROCEDURE SORT used 0.01 CPU seconds.


3001  
3002  
3003  *- Create Prospective View Dataset by joining expected demand -*;
3004  *- Averages to other metrics that have a date associated with -*;
3005  *- them. Also implement coding of 0 for expected demand       -*;
3006  *- on holidays, and blanks for days preceding or after.       -*;
3007  
3008  
3009  
3010  data prospective ;
3011  
3012    merge prospective (in=a)
3013          expected_demand
3014          booked_expected_demand
3015    walkin_expected_demand;
3016  
3017    by modality mc_id fac_id weekday;
3018    if a ;
3019    format date mmddyy10. supply pend_open 8.;
3020  
3021  
3022     *- Create date before and after holidays for logic below -*;
3023  
3024     day_before=date-1;
3025     day_after=date+1;
3026  
95                                                         The SAS System                            12:51 Monday, November 28, 2016

3027  
3028     *- Put values into column names -*;
3029  
3030     *- Expected Demand - OP and total, depends on if day holiday or not.-*;
3031  
3032      if date in(&holiday_list) then do;
SYMBOLGEN:  Macro variable HOLIDAY_LIST resolves to '05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd ,'21JAN2013'd
3033        var1 = 0;
3034        var4 = sum(expected_demand_ed,expected_demand_inp);
3035     var10 = 0;
3036     var13 = sum(booked_exp_demand_ed,booked_exp_demand_inp);
3037     var15 = 0;
3038     var18 = sum(walkin_exp_demand_ed,walkin_exp_demand_inp);
3039      end;
3040      else if (day_after in(&holiday_list) and weekday(date) in(2,3,5)) then do;
SYMBOLGEN:  Macro variable HOLIDAY_LIST resolves to '05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd ,'21JAN2013'd
3041        var1 = -1;
3042        var4 = sum(expected_demand_ed,expected_demand_inp);
3043     var10 = -1;
3044     var13 = sum(booked_exp_demand_ed,booked_exp_demand_inp);
3045     var15 = -1;
3046     var18 = sum(walkin_exp_demand_ed,walkin_exp_demand_inp);
3047      end;
3048      else if (day_before in(&holiday_list) and weekday(date) in(3,6)) then do;
SYMBOLGEN:  Macro variable HOLIDAY_LIST resolves to '05SEP2016'd,'24NOV2016'd,'26DEC2016'd,'02JAN2017'd ,'21JAN2013'd
3049        var1 = -1;
3050        var4 = sum(expected_demand_ed,expected_demand_inp);
3051     var10 = -1;
3052     var13 = sum(booked_exp_demand_ed,booked_exp_demand_inp);
3053     var15 = -1;
3054     var18 = sum(walkin_exp_demand_ed,walkin_exp_demand_inp);
3055      end;
3056      else do;
3057        var1 = expected_demand_op;
3058        var4 = expected_demand_tot;
3059     var10 = booked_exp_demand_op;
3060     var13 = booked_exp_demand_tot;
3061     var15 = walkin_exp_demand_op;
3062     var18 = walkin_exp_demand_tot;
3063      end;
3064  
3065  
3066  
3067      *- Expected Demand - ED -*;
3068      var2 = expected_demand_ed;
3069  
3070      *- Expected Demand - IP -*;
3071      var3 = expected_demand_inp;
3072  
3073      *- Expected Demand - Total -*;
3074  
3075  
3076      *- Blank -*;
3077      var5 = 0;
3078  
3079  
3080      *- Supply Total -*;
3081      var6 = supply;
96                                                         The SAS System                            12:51 Monday, November 28, 2016

3082  
3083      *- Open Total -*;
3084      var7 = pend_open;
3085  
3086      *- Average Daily Demand -*;
3087      var8 = round(average_daily_demand,1);
3088  
3089   *- Booked Expected Demand ED -*;
3090   var11 = booked_exp_demand_ed;
3091  
3092   *- Booked Expected Demand INP -*;
3093   var12 = booked_exp_demand_inp;
3094  
3095   *- Walkin Expected Demand ED -*;
3096   var16 = walkin_exp_demand_ed;
3097  
3098   *- Walkin Expected Demand INP -*;
3099   var17 = walkin_exp_demand_inp;
3100  
3101  
3102  
3103  
3104  run;

NOTE: Variable average_daily_demand is uninitialized.
INFO: The variable count_days on data set WORK.EXPECTED_DEMAND will be overwritten by data set WORK.BOOKED_EXPECTED_DEMAND.
INFO: The variable count_days on data set WORK.EXPECTED_DEMAND will be overwritten by data set WORK.WALKIN_EXPECTED_DEMAND.
INFO: The variable ftka_all on data set WORK.EXPECTED_DEMAND will be overwritten by data set WORK.BOOKED_EXPECTED_DEMAND.
INFO: The variable count_days on data set WORK.BOOKED_EXPECTED_DEMAND will be overwritten by data set WORK.WALKIN_EXPECTED_DEMAND.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      272 at 3034:14     358 at 3036:12     288 at 3038:12     280 at 3050:14     338 at 3052:12     288 at 3054:12
      14336 at 3087:12   
NOTE: There were 14336 observations read from the data set WORK.PROSPECTIVE.
NOTE: There were 1230 observations read from the data set WORK.EXPECTED_DEMAND.
NOTE: There were 1206 observations read from the data set WORK.BOOKED_EXPECTED_DEMAND.
NOTE: There were 1223 observations read from the data set WORK.WALKIN_EXPECTED_DEMAND.
NOTE: The data set WORK.PROSPECTIVE has 14336 observations and 56 variables.
NOTE: The DATA statement used 0.02 CPU seconds.


3105  
3106  
3107  
3108  proc sort data=prospective ;
3109      by modality mc_id fac_id date ;
3110  run ;

NOTE: There were 14336 observations read from the data set WORK.PROSPECTIVE.
NOTE: SAS sort was used.
NOTE: The data set WORK.PROSPECTIVE has 14336 observations and 56 variables.
NOTE: The PROCEDURE SORT used 0.01 CPU seconds.


3111  
3112  
3113  
3114  
97                                                         The SAS System                            12:51 Monday, November 28, 2016

3115  
3116  
3117  *----------------------------------------------------------------*;
3118  * Put them together
3119  *----------------------------------------------------------------*;
3120  data  ALL;
3121  
3122  
3123    merge retrospective  (in=in_retrospective)
3124          prospective    (in=in_prospective);
3125  
3126  
3127    by modality mc_id fac_id date ;
3128  
3129  
3130  
3131    keep modality mc_id fac_id date p_or_r var1-var19;
3132  
3133  
3134  
3135  run;

INFO: The variable F_CLASS on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable ftka_all on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable open on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable nya on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable held on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable acap on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable bkd on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable unbkd on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable workin on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable average_daily_demand on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable weekday on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable P_OR_R on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var1 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var2 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var3 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var4 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var5 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var6 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var7 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var8 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var10 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var11 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var12 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var13 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var15 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var16 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var17 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
INFO: The variable var18 on data set WORK.RETROSPECTIVE will be overwritten by data set WORK.PROSPECTIVE.
NOTE: There were 3584 observations read from the data set WORK.RETROSPECTIVE.
NOTE: There were 14336 observations read from the data set WORK.PROSPECTIVE.
NOTE: The data set WORK.ALL has 17920 observations and 24 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


3136  
3137  
98                                                         The SAS System                            12:51 Monday, November 28, 2016

3138  
3139  
3140  proc print data=all (obs=100);
3141    var date modality fac_id MC_ID P_OR_R     var1     var2;
3142    title "Data All";
3143  run;

NOTE: There were 100 observations read from the data set WORK.ALL.
NOTE: The PROCEDURE PRINT printed pages 96-97.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


3144  
3145  
3146  
3147  proc sort data=all;
3148    by mc_id fac_id date ;
3149  run ;

NOTE: There were 17920 observations read from the data set WORK.ALL.
NOTE: SAS sort was used.
NOTE: The data set WORK.ALL has 17920 observations and 24 variables.
NOTE: The PROCEDURE SORT used 0.01 CPU seconds.


3150  
3151  proc sort data=all out=mc(keep=mc_id fac_id) nodupkey;
3152    by mc_id fac_id;
3153  run;

NOTE: There were 17920 observations read from the data set WORK.ALL.
NOTE: SAS sort was used.
NOTE: 17856 observations with duplicate key values were deleted.
NOTE: The data set WORK.MC has 64 observations and 2 variables.
NOTE: The PROCEDURE SORT used 0.01 CPU seconds.


3154  
3155  * Get convert missing values to zero ;
3156  data all;
3157    set all;
3158    array arvar {19} var1-var19;
3159    drop i;
3160    do i= 1 to 19;
3161      if arvar{i} eq . then arvar{i}=0;
3162    end;
3163  run;

NOTE: There were 17920 observations read from the data set WORK.ALL.
NOTE: The data set WORK.ALL has 17920 observations and 24 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


3164  
3165  data final ;
3166     merge all(where=(modality eq 'CT')  rename=(var1-var19=CT1-CT19))
3167           all(where=(modality eq 'MRI') rename=(var1-var19=MR1-MR19))
3168           all(where=(modality eq 'ULS') rename=(var1-var19=US1-US19))
99                                                         The SAS System                            12:51 Monday, November 28, 2016

3169           all(where=(modality eq 'MAM') rename=(var1-var19=MA1-MA19))
3170     ;
3171     by mc_id fac_id date ;
3172     row=_n_+1;
3173     keep mc_id fac_id row date P_OR_R CT: MR: US: MA: ;
3174     format CT: MR: US: 8.;
3175  run;

INFO: The variable modality on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable modality on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable modality on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable P_OR_R on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable P_OR_R on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable P_OR_R on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable modality on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable modality on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable P_OR_R on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable P_OR_R on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable modality on data set WORK.ALL will be overwritten by data set WORK.ALL.
INFO: The variable P_OR_R on data set WORK.ALL will be overwritten by data set WORK.ALL.
NOTE: There were 4480 observations read from the data set WORK.ALL.
      WHERE modality='CT';
NOTE: There were 4480 observations read from the data set WORK.ALL.
      WHERE modality='MRI';
NOTE: There were 4480 observations read from the data set WORK.ALL.
      WHERE modality='ULS';
NOTE: There were 4480 observations read from the data set WORK.ALL.
      WHERE modality='MAM';
NOTE: The data set WORK.FINAL has 4480 observations and 81 variables.
NOTE: The DATA statement used 0.01 CPU seconds.


3176  
3177  proc sql;
3178    create table  ddoc_final as
3179    select mc_id
3180         , fac_id
3181         , row
3182         , date
3183         , P_OR_R
3184         , CT1 , CT2 , CT3 , CT4 , CT5 , CT6 , CT7 , CT8 , CT9 , CT10 , CT11 , CT12 , CT13 , CT14 , CT15 , CT16 , CT17 , CT18 ,
3184! CT19
3185         , MR1 , MR2 , MR3 , MR4 , MR5 , MR6 , MR7 , MR8 , MR9 , MR10 , MR11 , MR12 , MR13 , MR14 , MR15 , MR16 , MR17 , MR18 ,
3185! MR19
3186         , US1 , US2 , US3 , US4 , US5 , US6 , US7 , US8 , US9 , US10 , US11 , US12 , US13 , US14 , US15 , US16 , US17 , US18 ,
3186! US19
3187         , MA1 , MA2 , MA3 , MA4 , MA5 , MA6 , MA7 , MA8 , MA9 , MA10 , MA11 , MA12 , MA13 , MA14 , MA15 , MA16 , MA17 , MA18 ,
3187! MA19
3188     from final;
NOTE: Table WORK.DDOC_FINAL created, with 4480 rows and 81 columns.

3189  quit;
NOTE: The PROCEDURE SQL used 0.00 CPU seconds.


3190  
3191  data ddoc.ddoc_final;
3192    set ddoc_final;
100                                                        The SAS System                            12:51 Monday, November 28, 2016

3193  run;

NOTE: There were 4480 observations read from the data set WORK.DDOC_FINAL.
NOTE: The data set DDOC.DDOC_FINAL has 4480 observations and 81 variables.
NOTE: The DATA statement used 0.00 CPU seconds.


3194  
3195  proc print data= ddoc_final  (obs=20);
3196  
3197   var mc_id fac_id row CT1  CT2  CT3  CT4;
3198   title3 "Final Dataset";
3199  run;

NOTE: There were 20 observations read from the data set WORK.DDOC_FINAL.
NOTE: The PROCEDURE PRINT printed page 98.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


3200  
3201  *- Now create a table of Pending for the chart -*;
3202  *- This join brings together the Pending with  -*;
3203  *- the average weekly expected demand, as well -*;
3204  *- as bringing the modalities into the same    -*;
3205  *- record, to reflect the report.              -*;
3206  
3207  
3208  proc print data=pending (obs=50);
3209    title "Pending Data before join";
3210  run;

NOTE: There were 50 observations read from the data set WORK.PENDING.
NOTE: The PROCEDURE PRINT printed page 99.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


3211  
3212  
3213  /*new addition 04102013 - MPH - to include MRI, ULS, or MAM data when CT Data Doesn't Exist*/
3214  proc sql;
3215    create table pending_chrt as
3216    select distinct mc_id, fac_id, retro_dt
3217      from pending
3218     order by mc_id, fac_id, retro_dt;
NOTE: SAS threaded sort was used.
NOTE: Table WORK.PENDING_CHRT created, with 5731 rows and 3 columns.

3219  quit;
NOTE: The PROCEDURE SQL used 0.03 CPU seconds.


3220  
3221  /*modified query to include MRI, ULS, or MAM data when CT Data Doesn't Exist - 04102013 - MPH */
3222  proc sql;
3223        create table pending_weekly_exp_demand
3224            as
3225  
3226        select p_chrt.mc_id,
101                                                        The SAS System                            12:51 Monday, November 28, 2016

3227               p_chrt.fac_id,
3228               p_chrt.retro_dt as date,
3229      coalesce(p_ct.pending,0) as pending_ct,
3230               coalesce(round(add_ct.average_daily_demand*5.0,1),0)
3231               as weekly_expected_demand_ct,
3232               coalesce(p_mri.pending,0) as pending_mri,
3233      coalesce(round(add_mri.average_daily_demand*5.0,1),0)
3234               as weekly_expected_demand_mri,
3235               coalesce(p_uls.pending,0) as pending_uls,
3236      coalesce(round(add_uls.average_daily_demand*5.0,1),0)
3237               as weekly_expected_demand_uls,
3238      coalesce(p_mam.pending,0) as pending_mam,
3239      coalesce(round(add_mam.average_daily_demand*5.0,1),0)
3240               as weekly_expected_demand_mam
3241  
3242          from pending_chrt p_chrt
3243  
3244     left join pending p_ct
3245            on p_chrt.retro_dt = p_ct.retro_dt
3246           and p_chrt.mc_id    = p_ct.mc_id
3247           and p_chrt.fac_id   = p_ct.fac_id
3248     and p_ct.modality='CT'
3249  
3250     left join pending p_mri
3251            on p_chrt.retro_dt = p_mri.retro_dt
3252           and p_chrt.mc_id    = p_mri.mc_id
3253           and p_chrt.fac_id   = p_mri.fac_id
3254           and p_mri.modality='MRI'
3255  
3256     left join pending p_uls
3257            on p_chrt.retro_dt = p_uls.retro_dt
3258           and p_chrt.mc_id    = p_uls.mc_id
3259           and p_chrt.fac_id   = p_uls.fac_id
3260           and p_uls.modality='ULS'
3261  
3262     left join pending p_mam
3263            on p_chrt.retro_dt = p_mam.retro_dt
3264           and p_chrt.mc_id    = p_mam.mc_id
3265           and p_chrt.fac_id   = p_mam.fac_id
3266           and p_mam.modality='MAM'
3267  
3268     left join average_daily_demand add_ct
3269            on p_chrt.mc_id    = add_ct.mc_id
3270           and p_chrt.fac_id   = add_ct.fac_id
3271     and add_ct.modality='CT'
3272  
3273     left join average_daily_demand add_mri
3274            on p_chrt.mc_id    = add_mri.mc_id
3275           and p_chrt.fac_id   = add_mri.fac_id
3276     and add_mri.modality='MRI'
3277  
3278     left join average_daily_demand add_uls
3279            on p_chrt.mc_id    = add_uls.mc_id
3280           and p_chrt.fac_id   = add_uls.fac_id
3281     and add_uls.modality='ULS'
3282  
3283     left join average_daily_demand add_mam
3284            on p_chrt.mc_id    = add_mam.mc_id
102                                                        The SAS System                            12:51 Monday, November 28, 2016

3285           and p_chrt.fac_id   = add_mam.fac_id
3286           and add_mam.modality='MAM'
3287  
3288  
3289    order by p_chrt.mc_id,
3290             p_chrt.fac_id,
3291             p_chrt.retro_dt
3292  
3293  
3294               ;
NOTE: SAS threaded sort was used.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Invalid (or missing) arguments to the ROUND function have caused the function to return a missing value.
NOTE: Table WORK.PENDING_WEEKLY_EXP_DEMAND created, with 5731 rows and 11 columns.

3295  quit;
NOTE: The PROCEDURE SQL used 0.24 CPU seconds.


3296  
3297  proc print data=pending_weekly_exp_demand (obs=20);
3298  
3299   title 'pending_weekly_exp_demand';
3300  run;

NOTE: There were 20 observations read from the data set WORK.PENDING_WEEKLY_EXP_DEMAND.
NOTE: The PROCEDURE PRINT printed page 100.
NOTE: The PROCEDURE PRINT used 0.00 CPU seconds.


3301  
3302  
3303  
3304  proc download inlib=work outlib=locallib;
3305     select ddoc_final pending_weekly_exp_demand;
3306  run;


NOTE: Download in progress from data=WORK.DDOC_FINAL to out=LOCALLIB.DDOC_FINAL
NOTE: Status window cannot be initialized.
NOTE: 2831360 bytes were transferred at 1992512 bytes/second.
NOTE: The data set LOCALLIB.DDOC_FINAL has 4480 observations and 81 variables.
NOTE: Downloaded 4480 observations of 81 variables.
NOTE: The data set WORK.DDOC_FINAL has 4480 observations and 81 variables.

NOTE: Download in progress from data=WORK.PENDING_WEEKLY_EXP_DEMAND to out=LOCALLIB.PENDING_WEEKLY_EXP_DEMAND
NOTE: Status window cannot be initialized.
NOTE: 458480 bytes were transferred at 790482 bytes/second.
NOTE: The data set LOCALLIB.PENDING_WEEKLY_EXP_DEMAND has 5731 observations and 11 variables.
NOTE: Downloaded 5731 observations of 11 variables.
NOTE: The data set WORK.PENDING_WEEKLY_EXP_DEMAND has 5731 observations and 11 variables.
NOTE: The PROCEDURE DOWNLOAD used 0.03 CPU seconds.


SYMBOLGEN:  Macro variable SYSINFO resolves to 0
3307  
103                                                        The SAS System                            12:51 Monday, November 28, 2016

3308  *- Get Error Status and send to Local Server -*;
3309  
3310  %sysrput retcode=&sysinfo;
3311  %sysrput rsyserr=&syserr;
SYMBOLGEN:  Macro variable SYSERR resolves to 0
3312  
3313  %put &sysinfo;
SYMBOLGEN:  Macro variable SYSINFO resolves to 0
0
3314  %put &syserr;;
SYMBOLGEN:  Macro variable SYSERR resolves to 0
0
NOTE: Remote submit to HOST complete.
NOTE: Remote signoff from HOST commencing.
NOTE: The SAS session used 258.64 CPU seconds.

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: Script file 'kptcptso.scr' entered.
NOTE: SAS/CONNECT conversation terminated.
NOTE: Remote signoff from HOST complete.
NOTE: Libref LOCALLIB was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Supporting Data\MAM Data
NOTE: Libref FMTLIB was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\OrgKnowledge\formats\QOS_Location_Formats\DATA
MPRINT(DDOC_OUT):   **Apply sub region roll-up to both ddoc_final and pending_weekly_exp_demand data***;
MPRINT(DDOC_OUT):   data kploc;
MPRINT(DDOC_OUT):   set fmtlib.kploc;
MPRINT(DDOC_OUT):   run;

NOTE: There were 89 observations read from the data set FMTLIB.KPLOC.
NOTE: The data set WORK.KPLOC has 89 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(DDOC_OUT):   proc sql;
MPRINT(DDOC_OUT):   create table mc_all as select distinct SubReg, SubReg_Name, saru, saru_name, 'ALL' as fac_id, 'All Facilities' 
as fac_name length=40 from fmtlib.kploc;
NOTE: Table WORK.MC_ALL created, with 19 rows and 6 columns.

MPRINT(DDOC_OUT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
104                                                        The SAS System                            12:50 Monday, November 28, 2016

      real time           0.12 seconds
      cpu time            0.01 seconds
      

MPRINT(DDOC_OUT):   data kploc2;
MPRINT(DDOC_OUT):   set kploc mc_all;
MPRINT(DDOC_OUT):   run;
WARNING: Multiple lengths were specified for the variable FAC_NAME by input data set(s). This can cause truncation of data.
NOTE: There were 89 observations read from the data set WORK.KPLOC.
NOTE: There were 19 observations read from the data set WORK.MC_ALL.
NOTE: The data set WORK.KPLOC2 has 108 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(DDOC_OUT):   *proc print data = kploc2;
MPRINT(DDOC_OUT):   *run;
MPRINT(DDOC_OUT):   proc sql;
MPRINT(DDOC_OUT):   create table ddoc_final1 as select ddoc.*, loc.SubReg, loc.subreg_name, loc.fac_name from locallib.ddoc_final 
ddoc left join kploc2 loc on ddoc.mc_id = loc.saru and ddoc.fac_id = loc.fac_id;
NOTE: Table WORK.DDOC_FINAL1 created, with 4480 rows and 84 columns.

MPRINT(DDOC_OUT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.68 seconds
      cpu time            0.12 seconds
      

MPRINT(DDOC_OUT):   proc sql;
MPRINT(DDOC_OUT):   create table pending_weekly_exp_demand1 as select pend.*, loc.SubReg from locallib.pending_weekly_exp_demand 
pend left join kploc2 loc on pend.mc_id = loc.saru and pend.fac_id = loc.fac_id;
NOTE: Table WORK.PENDING_WEEKLY_EXP_DEMAND1 created, with 5731 rows and 12 columns.

MPRINT(DDOC_OUT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
      

MPRINT(DDOC_OUT):   **- Sub-Region Rollup for DDOC***;
MPRINT(DDOC_OUT):   proc summary data=ddoc_final1 nway;
MPRINT(DDOC_OUT):   class Subreg subreg_name fac_id fac_name date P_or_R;
MPRINT(DDOC_OUT):   var CT: MR: US: MA:;
MPRINT(DDOC_OUT):   output out=ddoc_final (drop=_:) sum=;
MPRINT(DDOC_OUT):   run;

NOTE: There were 4480 observations read from the data set WORK.DDOC_FINAL1.
NOTE: The data set WORK.DDOC_FINAL has 3850 observations and 82 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.85 seconds
      cpu time            0.06 seconds
      

MPRINT(DDOC_OUT):   data ddoc_final;
MPRINT(DDOC_OUT):   set ddoc_final;
MPRINT(DDOC_OUT):   row = _n_ + 1;
MPRINT(DDOC_OUT):   run;
105                                                        The SAS System                            12:50 Monday, November 28, 2016


NOTE: There were 3850 observations read from the data set WORK.DDOC_FINAL.
NOTE: The data set WORK.DDOC_FINAL has 3850 observations and 83 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(DDOC_OUT):   **- Sub-Region Rollup for pending***;
MPRINT(DDOC_OUT):   proc summary data=pending_weekly_exp_demand1 nway;
MPRINT(DDOC_OUT):   class Subreg fac_id date;
MPRINT(DDOC_OUT):   var pending_ct weekly_expected_demand_ct pending_mri weekly_expected_demand_mri pending_uls 
weekly_expected_demand_uls pending_mam weekly_expected_demand_mam;
MPRINT(DDOC_OUT):   output out=pending_weekly_exp_demand (drop=_:) sum=;
MPRINT(DDOC_OUT):   run;

NOTE: There were 5731 observations read from the data set WORK.PENDING_WEEKLY_EXP_DEMAND1.
NOTE: The data set WORK.PENDING_WEEKLY_EXP_DEMAND has 4912 observations and 11 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(DDOC_OUT):   proc sql;
MPRINT(DDOC_OUT):   create table ddoc_out as select *, compress(subreg || '_' || fac_id) as mc_fac_id length=7 , trim(subreg_name) 
|| ' - ' || trim(fac_name) as mc_fac_name length=80 from ddoc_final ddoc ;
NOTE: Table WORK.DDOC_OUT created, with 3850 rows and 85 columns.

MPRINT(DDOC_OUT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(DDOC_OUT):   *- Copy Template to Report directory -*;
SYMBOLGEN:  Macro variable SUNDAY resolves to 1
SYMBOLGEN:  Macro variable RUNDT resolves to 20786
SYMBOLGEN:  Macro variable REFDT resolves to 20786
SYMBOLGEN:  Macro variable X resolves to 1
SYMBOLGEN:  Macro variable REFDT resolves to 20786
SYMBOLGEN:  Macro variable WKDY resolves to 1
MPRINT(DDOC_OUT):   *- Create Date Macro Variables -*;
MPRINT(DDOC_OUT):   data _null_;
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
MPRINT(DDOC_OUT):   call symput('DDate','WK'||put(20786,MMDDYY6.));
SYMBOLGEN:  Macro variable STRTDT resolves to 20786
MPRINT(DDOC_OUT):   call symput('PrintDate','Week Of '||put(20786,MMDDYY10.));
MPRINT(DDOC_OUT):   call symput('ymd',left(trim(put(year(today()),4.)||put(month(today()),z2.)||put(day(today()),z2.))));
MPRINT(DDOC_OUT):   run;

NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

SYMBOLGEN:  Macro variable YMD resolves to 20161128
'ymd= ' 20161128
MPRINT(DDOC_OUT):   * for qos web file naming;
106                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(DDOC_OUT):   *- Create macro variables containing directory names -*;
SYMBOLGEN:  && resolves to &.
SYMBOLGEN:  Macro variable TOP_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(DDOC_OUT):   * -create file folders if they dont already exist -*;
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable THE_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable THE_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
MPRINT(MKDIR):   x mkdir "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\";
SYMBOLGEN:  Macro variable THE_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
NOTE: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ has been created.
MPRINT(DDOC_OUT):  ;
MPRINT(DDOC_OUT):   *- Create Regional Level Report - I.e. All Medical Centers -*;
MPRINT(DDOC_OUT):   *- Loop through Medical Centers -*;
MPRINT(DDOC_OUT):   *- next copy the Excel Template to the output directory -*;
MPRINT(DDOC_OUT):   *- First create Regional Report -*;
MPRINT(DDOC_OUT):   *- Then create Medical Center Reports -*;
SYMBOLGEN:  Macro variable LIST resolves to REG
SYMBOLGEN:  Macro variable M resolves to 1
SYMBOLGEN:  Macro variable MC resolves to REG
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out order by mc_fac_id, date ;
NOTE: Table WORK.OUT_DATA created, with 3850 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

NOTE: There were 3850 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 3850 observations and 80 variables.
NOTE: DATA statement used (Total process time):
107                                                        The SAS System                            12:50 Monday, November 28, 2016

      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend order by subReg, fac_id, 
date ;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 4912 rows and 11 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out order by 
mc_fac_id ;
NOTE: Table WORK.MC_NAMES created, with 55 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                            "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\ALL Medical Centers - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
108                                                        The SAS System                            12:50 Monday, November 28, 2016

SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ALL 
Medical Centers - DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ALL Medical Centers - 
      DDOC for Imaging - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 3850 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 3850 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.32 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 4912 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 4912 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 55 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
109                                                        The SAS System                            12:50 Monday, November 28, 2016

      cpu time            0.01 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 1
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ALL Medical Centers - 
DDOC for Imaging - WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  
"'"CSA_ALL" '"' / 'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC 
MAM").Select' / 'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 
'XL.Sheets("Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("DDOC").Activate' / 'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 
'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 'XL.DisplayAlerts = False' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:40:02,
      Create Time=28Nov2016:13:40:02

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 161.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
110                                                        The SAS System                            12:50 Monday, November 28, 2016

NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 1
SYMBOLGEN:  Macro variable LIST resolves to REG
SYMBOLGEN:  Macro variable M resolves to 2
SYMBOLGEN:  Macro variable MC resolves to 
MPRINT(DDOC_OUT):  ;
SYMBOLGEN:  Macro variable MCLIST2 resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 1
SYMBOLGEN:  Macro variable MC resolves to CSA
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to CSA
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out where SubReg = "CSA" order by mc_fac_id, date ;
NOTE: Table WORK.OUT_DATA created, with 700 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

NOTE: There were 700 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 700 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to CSA
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend where SubReg = "CSA" order 
by subReg, fac_id, date ;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 910 rows and 11 columns.
111                                                        The SAS System                            12:50 Monday, November 28, 2016


MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to CSA
MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out where SubReg = 
"CSA" order by mc_fac_id ;
NOTE: Table WORK.MC_NAMES created, with 10 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   * Copy template ;
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to CSA
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                           "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\CSA - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to CSA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\CSA - 
DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\CSA - DDOC for Imaging 
112                                                        The SAS System                            12:50 Monday, November 28, 2016

      - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 700 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 700 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 910 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 910 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 10 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
113                                                        The SAS System                            12:50 Monday, November 28, 2016

SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to CSA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable MC resolves to CSA
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\CSA - DDOC for Imaging 
- WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"CSA_ALL" '"' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC MAM").Select' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.ActiveSheet.Range("A1").Select' / 
'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("DDOC").Activate' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 
'XL.DisplayAlerts = True' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:40:21,
      Create Time=28Nov2016:13:40:02

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 145.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 1
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 2
SYMBOLGEN:  Macro variable MC resolves to CVF
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to CVF
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
114                                                        The SAS System                            12:50 Monday, November 28, 2016

round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out where SubReg = "CVF" order by mc_fac_id, date ;
NOTE: Table WORK.OUT_DATA created, with 490 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

NOTE: There were 490 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 490 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to CVF
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend where SubReg = "CVF" order 
by subReg, fac_id, date ;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 637 rows and 11 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to CVF
MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out where SubReg = 
"CVF" order by mc_fac_id ;
115                                                        The SAS System                            12:50 Monday, November 28, 2016

NOTE: Table WORK.MC_NAMES created, with 7 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   * Copy template ;
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to CVF
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                           "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\CVF - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to CVF
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\CVF - 
DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\CVF - DDOC for Imaging 
      - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

116                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 490 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 490 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 637 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 637 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 7 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to CVF
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable MC resolves to CVF
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\CVF - DDOC for Imaging 
- WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"CVF_ALL" '"' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC MAM").Select' / 
117                                                        The SAS System                            12:50 Monday, November 28, 2016

'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.ActiveSheet.Range("A1").Select' / 
'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("DDOC").Activate' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 
'XL.DisplayAlerts = True' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:40:34,
      Create Time=28Nov2016:13:40:02

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 145.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 2
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 3
SYMBOLGEN:  Macro variable MC resolves to DNA
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to DNA
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out where SubReg = "DNA" order by mc_fac_id, date ;
118                                                        The SAS System                            12:50 Monday, November 28, 2016

NOTE: Table WORK.OUT_DATA created, with 840 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

NOTE: There were 840 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 840 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to DNA
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend where SubReg = "DNA" order 
by subReg, fac_id, date ;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 1092 rows and 11 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to DNA
MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out where SubReg = 
"DNA" order by mc_fac_id ;
NOTE: Table WORK.MC_NAMES created, with 12 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   * Copy template ;
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
119                                                        The SAS System                            12:50 Monday, November 28, 2016

            WK112816\
SYMBOLGEN:  Macro variable MC resolves to DNA
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                           "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\DNA - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to DNA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\DNA - 
DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\DNA - DDOC for Imaging 
      - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 840 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 840 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
120                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 1092 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 1092 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 12 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 12 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to DNA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable MC resolves to DNA
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\DNA - DDOC for Imaging 
- WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"DNA_ALL" '"' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC MAM").Select' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.ActiveSheet.Range("A1").Select' / 
'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("DDOC").Activate' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 
'XL.DisplayAlerts = True' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:40:44,
      Create Time=28Nov2016:13:40:02

121                                                        The SAS System                            12:50 Monday, November 28, 2016

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 145.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 3
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 4
SYMBOLGEN:  Macro variable MC resolves to GEB
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to GEB
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out where SubReg = "GEB" order by mc_fac_id, date ;
NOTE: Table WORK.OUT_DATA created, with 560 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

122                                                        The SAS System                            12:50 Monday, November 28, 2016

NOTE: There were 560 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 560 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to GEB
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend where SubReg = "GEB" order 
by subReg, fac_id, date ;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 637 rows and 11 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to GEB
MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out where SubReg = 
"GEB" order by mc_fac_id ;
NOTE: Table WORK.MC_NAMES created, with 8 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   * Copy template ;
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to GEB
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                           "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\GEB - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
123                                                        The SAS System                            12:50 Monday, November 28, 2016

      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to GEB
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\GEB - 
DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\GEB - DDOC for Imaging 
      - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 560 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 560 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 637 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 637 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
124                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 8 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 8 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to GEB
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable MC resolves to GEB
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\GEB - DDOC for Imaging 
- WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"GEB_ALL" '"' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC MAM").Select' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.ActiveSheet.Range("A1").Select' / 
'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("DDOC").Activate' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 
'XL.DisplayAlerts = True' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:40:55,
      Create Time=28Nov2016:13:40:02

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 145.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
125                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 4
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 5
SYMBOLGEN:  Macro variable MC resolves to GGA
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to GGA
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out where SubReg = "GGA" order by mc_fac_id, date ;
NOTE: Table WORK.OUT_DATA created, with 770 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

NOTE: There were 770 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 770 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to GGA
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend where SubReg = "GGA" order 
by subReg, fac_id, date ;
126                                                        The SAS System                            12:50 Monday, November 28, 2016

NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 999 rows and 11 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to GGA
MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out where SubReg = 
"GGA" order by mc_fac_id ;
NOTE: Table WORK.MC_NAMES created, with 11 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   * Copy template ;
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to GGA
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                           "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\GGA - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to GGA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\GGA - 
DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
127                                                        The SAS System                            12:50 Monday, November 28, 2016

      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\GGA - DDOC for Imaging 
      - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 770 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 770 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 999 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 999 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 11 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 11 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
128                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to GGA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable MC resolves to GGA
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\GGA - DDOC for Imaging 
- WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"GGA_ALL" '"' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC MAM").Select' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.ActiveSheet.Range("A1").Select' / 
'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("DDOC").Activate' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 
'XL.DisplayAlerts = True' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:41:05,
      Create Time=28Nov2016:13:40:02

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 145.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 5
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 6
SYMBOLGEN:  Macro variable MC resolves to SBA
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
129                                                        The SAS System                            12:50 Monday, November 28, 2016

SYMBOLGEN:  Macro variable MC resolves to SBA
MPRINT(LOOP):   create table out_data as select mc_fac_id as mc_id , monotonic() as row , date , P_OR_R , round(CT1,1) as CT1 , 
round(CT2,1) as CT2 , round(CT3,1) as CT3 , round(CT4,1) as CT4 , round(CT5,1) as CT5 , round(CT6,1) as CT6 , round(CT7,1) as CT7 , 
round(CT8,1) as CT8 , round(CT9,1) as CT9 , round(CT10,1) as CT10 , round(CT11,1) as CT11 , round(CT12,1) as CT12 , round(CT13,1) 
as CT13 , round(CT14,1) as CT14 , round(CT15,1) as CT15 , round(CT16,1) as CT16 , round(CT17,1) as CT17 , round(CT18,1) as CT18 , 
round(CT19,1) as CT19 , round(MR1,1) as MR1 , round(MR2,1) as MR2 , round(MR3,1) as MR3 , round(MR4,1) as MR4 , round(MR5,1) as MR5 
, round(MR6,1) as MR6 , round(MR7,1) as MR7 , round(MR8,1) as MR8 , round(MR9,1) as MR9 , round(MR10,1) as MR10 , round(MR11,1) as 
MR11 , round(MR12,1) as MR12 , round(MR13,1) as MR13 , round(MR14,1) as MR14 , round(MR15,1) as MR15 , round(MR16,1) as MR16 , 
round(MR17,1) as MR17 , round(MR18,1) as MR18 , round(MR19,1) as MR19 , round(US1,1) as US1 , round(US2,1) as US2 , round(US3,1) as 
US3 , round(US4,1) as US4 , round(US5,1) as US5 , round(US6,1) as US6 , round(US7,1) as US7 , round(US8,1) as US8 , round(US9,1) as 
US9 , round(US10,1) as US10 , round(US11,1) as US11 , round(US12,1) as US12 , round(US13,1) as US13 , round(US14,1) as US14 , 
round(US15,1) as US15 , round(US16,1) as US16 , round(US17,1) as US17 , round(US18,1) as US18 , round(US19,1) as US19 , 
round(MA1,1) as MA1 , round(MA2,1) as MA2 , round(MA3,1) as MA3 , round(MA4,1) as MA4 , round(MA5,1) as MA5 , round(MA6,1) as MA6 , 
round(MA7,1) as MA7 , round(MA8,1) as MA8 , round(MA9,1) as MA9 , round(MA10,1) as MA10 , round(MA11,1) as MA11 , round(MA12,1) as 
MA12 , round(MA13,1) as MA13 , round(MA14,1) as MA14 , round(MA15,1) as MA15 , round(MA16,1) as MA16 , round(MA17,1) as MA17 , 
round(MA18,1) as MA18 , round(MA19,1) as MA19 from ddoc_out where SubReg = "SBA" order by mc_fac_id, date ;
NOTE: Table WORK.OUT_DATA created, with 490 rows and 80 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.15 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Create new row variable for individual MC data sets -*;
MPRINT(LOOP):   data out_data;
MPRINT(LOOP):   set out_data;
MPRINT(LOOP):   row=_n_+1;
MPRINT(LOOP):   run;

NOTE: There were 490 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WORK.OUT_DATA has 490 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to SBA
MPRINT(LOOP):   create table out_pending as select compress(pend.Subreg || '_' || pend.fac_id) as mc_fac_id length=7 , monotonic() 
as row, date, pending_ct, weekly_expected_demand_ct, pending_mri, weekly_expected_demand_mri, pending_uls, 
weekly_expected_demand_uls, pending_mam, weekly_expected_demand_mam from pending_weekly_exp_demand pend where SubReg = "SBA" order 
by subReg, fac_id, date ;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT clause.
NOTE: Table WORK.OUT_PENDING created, with 637 rows and 11 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Create table that has list of facilities under the desired MC -*;
MPRINT(LOOP):   *- This list will be read into the Excel workbook -*;
MPRINT(LOOP):   proc sql;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable MC resolves to SBA
130                                                        The SAS System                            12:50 Monday, November 28, 2016

MPRINT(LOOP):   create table mc_names as select distinct mc_fac_id as mc_id , mc_fac_name as mc_name from ddoc_out where SubReg = 
"SBA" order by mc_fac_id ;
NOTE: Table WORK.MC_NAMES created, with 7 rows and 2 columns.

MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Copy Template over and give appropriate name -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   * Copy template ;
SYMBOLGEN:  Macro variable XL_TEMPLATE resolves to \\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
            Template\Imaging_DDOC_Template_v19.0.xls
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to SBA
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   x "COPY "\\CS.MSDS.KP.ORG\rpon\WEST\WEB\QOS\IMAGUC and Access\DDOC\Development\Report 
Template\Imaging_DDOC_Template_v19.0.xls"                           "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\SBA - DDOC for Imaging - WK112816.xls" ";
MPRINT(LOOP):   filename vbs 'c:\temp\copy_template.vbs';
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
MPRINT(LOOP):   *- Now create Libname that accesses the Excel workbook -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to SBA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(LOOP):   libname wrkbk excel "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\SBA - 
DDOC for Imaging - WK112816.xls";
NOTE: Libref WRKBK was successfully assigned as follows: 
      Engine:        EXCEL 
      Physical Name: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\SBA - DDOC for Imaging 
      - WK112816.xls
MPRINT(LOOP):   proc sql;
MPRINT(LOOP):   drop table wrkbk.InsertRawData;
NOTE: Table WRKBK.InsertRawData has been dropped.
MPRINT(LOOP):   drop table wrkbk.MCData;
NOTE: Table WRKBK.MCData has been dropped.
MPRINT(LOOP):   drop table wrkbk.PendingData;
NOTE: Table WRKBK.PendingData has been dropped.
MPRINT(LOOP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
131                                                        The SAS System                            12:50 Monday, November 28, 2016

      

MPRINT(LOOP):   *- Populate the 'Data' Worksheet -*;
MPRINT(LOOP):   data wrkbk.InsertRawData ;
MPRINT(LOOP):   set out_data ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 490 observations read from the data set WORK.OUT_DATA.
NOTE: The data set WRKBK.InsertRawData has 490 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(LOOP):   *- Populate the 'Pending Data' Worksheet - for Pending Charts -*;
MPRINT(LOOP):   data wrkbk.PendingData ;
MPRINT(LOOP):   set out_pending ;
MPRINT(LOOP):   run;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: There were 637 observations read from the data set WORK.OUT_PENDING.
NOTE: The data set WRKBK.PendingData has 637 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Populate the 'Names' Worksheet with distinct Med Center - Facility Names -*;
MPRINT(LOOP):   data wrkbk.MCData ;
MPRINT(LOOP):   set mc_names ;
MPRINT(LOOP):   run;
NOTE: There were 7 observations read from the data set WORK.MC_NAMES.
NOTE: The data set WRKBK.MCData has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   libname wrkbk clear;
NOTE: Libref WRKBK has been deassigned.
MPRINT(LOOP):   *- Create the VB script to clean up Excel workbook -*;
MPRINT(LOOP):   *- - This sets the drop down menu to the Medical center -*;
MPRINT(LOOP):   *- All Facilities item. -*;
MPRINT(LOOP):   *- - Then sets and displays the Report Date -*;
MPRINT(LOOP):   *- - Hides the Names worksheet -*;
SYMBOLGEN:  Macro variable REGIONAL_RPT resolves to 0
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   file "c:\temp\ddoc_formatter.vbs";
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable MC resolves to SBA
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable MC resolves to SBA
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
SYMBOLGEN:  Macro variable PRINTDATE resolves to Week Of 11/28/2016
MPRINT(LOOP):   put 'Dim XL' / 'SET XL = CreateObject("Excel.Application")' / 'XL.Visible = False' / 'XL.DisplayAlerts = False' / 
'XL.Workbooks.Open("'"\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\SBA - DDOC for Imaging 
132                                                        The SAS System                            12:50 Monday, November 28, 2016

- WK112816.xls" '")' / 'XL.Sheets("DDOC").Select' / 'XL.Range("R2").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"SBA_ALL" '"' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.Sheets("DDOC MAM").Select' / 
'XL.Range("C3").Select'/ 'XL.ActiveCell.FormulaR1C1 =  "'"Week Of 11/28/2016" '"' / 'XL.ActiveSheet.Range("A1").Select' / 
'XL.Sheets("Names").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Data").Select' / 
'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("Chart Data").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = 
False' / 'XL.Sheets("PendingData").Select' / 'XL.ActiveWindow.SelectedSheets.Visible = False' / 'XL.Sheets("DDOC").Activate' / 
'XL.ActiveSheet.Range("A1").Select' / 'XL.ActiveWorkbook.RefreshAll' / 'XL.ActiveWorkbook.Save' / 'XL.ActiveWorkbook.Close' / 
'XL.DisplayAlerts = True' / 'XL.Quit';
MPRINT(LOOP):   run;

NOTE: The file "c:\temp\ddoc_formatter.vbs" is:
      Filename=c:\temp\ddoc_formatter.vbs,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=28Nov2016:13:41:15,
      Create Time=28Nov2016:13:40:02

NOTE: 29 records were written to the file "c:\temp\ddoc_formatter.vbs".
      The minimum record length was 6.
      The maximum record length was 145.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(LOOP):   *- Execute the above VB Script -*;
MPRINT(LOOP):   x "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   *- delete VB Script -*;
MPRINT(LOOP):   filename vbs "c:\temp\ddoc_formatter.vbs";
MPRINT(LOOP):   data _null_;
MPRINT(LOOP):   rc=fdelete('vbs');
MPRINT(LOOP):   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LOOP):   filename vbs clear;
NOTE: Fileref VBS has been deassigned.
SYMBOLGEN:  Macro variable M resolves to 6
SYMBOLGEN:  Macro variable LIST resolves to CSA CVF DNA GEB GGA SBA
SYMBOLGEN:  Macro variable M resolves to 7
SYMBOLGEN:  Macro variable MC resolves to 
MPRINT(DDOC_OUT):  ;
MPRINT(DDOC_OUT):   *%loop(list=CSA,regional_rpt=0);
MPRINT(DDOC_OUT):   * copy to file with qos web date node;
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable YMD resolves to 20161128
NOTE: The quoted string currently being processed has become more than 262 characters long.  You might have unbalanced quotation 
      marks.
MPRINT(DDOC_OUT):   x "COPY "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ALL Medical 
Centers - DDOC for Imaging - WK112816.xls"                "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic 
Reports\Med Ctr WK112816\20161128_DDOC_Weekly.xls"  ";
MPRINT(DDOC_OUT):   *-Email to alert that proces is complete-*;
SYMBOLGEN:  Macro variable SYSERR resolves to 0
133                                                        The SAS System                            12:50 Monday, November 28, 2016

SYMBOLGEN:  Macro variable LN_ID resolves to Bryan E Wulzen/CA/KAIPERM
SYMBOLGEN:  Macro variable LN_ID resolves to Bryan E Wulzen/CA/KAIPERM
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
MPRINT(DDOC_OUT):   filename mymail email 'nil' from=("Bryan E Wulzen/CA/KAIPERM" ) to=("Bryan E Wulzen/CA/KAIPERM") 
CC=("kunling.lu@kp.org") subject="DDOC for Imaging Process - WK112816 - has completed without errors" attach = 
("\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ALL Medical Centers - DDOC for Imaging - 
WK112816.xls") ;
MPRINT(DDOC_OUT):   data _null_;
MPRINT(DDOC_OUT):   file mymail;
SYMBOLGEN:  Macro variable DDATE resolves to WK112816
SYMBOLGEN:  Macro variable REPORT_FOLDER resolves to \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr 
            WK112816\
MPRINT(DDOC_OUT):   put / "DDOC for Imaging Process - WK112816 - has completed without errors. " / "The Completed reports are 
located in the directory: \\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\" / 
"-----------------------------------------------------------------------------" / "Thank you," / "Michael Hartmann MS" / "Senior 
Data Analyst, Quality & Operations Support (QOS)" / "TieLine (8) 428-3189 Outside (510) 625-3189" // ;
MPRINT(DDOC_OUT):   run;

NOTE: The file MYMAIL is:
      E-Mail Access Device

Message sent
      To:          ("Bryan E Wulzen/CA/KAIPERM" ) 
      Cc:          ("kunling.lu@kp.org" ) 
      Bcc:         
      Subject:     DDOC for Imaging Process - WK112816 - has completed without errors
      Attachments: ( "\\gpro-qos.appl.kp.org\production\Shared\ImagingDDOC\Periodic Reports\Med Ctr WK112816\ALL Medical Centers - 
DDOC for Imaging - WK112816.xls" ) 
NOTE: 10 records were written to the file MYMAIL.
      The minimum record length was 0.
      The maximum record length was 139.
NOTE: DATA statement used (Total process time):
      real time           13:43.70
      cpu time            0.01 seconds
      

701        
702        GOPTIONS NOACCESSIBLE;
703        %LET _CLIENTTASKLABEL=;
704        %LET _CLIENTPROJECTPATH=;
705        %LET _CLIENTPROJECTNAME=;
706        %LET _SASPROGRAMFILE=;
707        
708        ;*';*";*/;quit;run;
709        ODS _ALL_ CLOSE;
710        
711        
712        QUIT; RUN;
713        
